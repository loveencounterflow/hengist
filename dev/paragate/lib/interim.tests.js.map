{
  "version": 3,
  "file": "interim.tests.js",
  "sourceRoot": "..",
  "sources": [
    "src/interim.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n# coffeelint: disable=max_line_length\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'INTERTEXT/GRAMMARS/INTERIM-TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTEXT                 = require 'intertext'\n{ rpr }                   = INTERTEXT.export()\ntypes                     = require './types'\n{ isa\n  type_of }               = types\n{ lets }                  = ( require 'datom' ).export()\n\n#-----------------------------------------------------------------------------------------------------------\nas_text = ( x ) ->\n  return rpr x\n  switch type_of x\n    when 'text'   then return x\n    when 'object' then return jr x\n    when 'list'   then return jr x\n  return x.toString()\n\n#-----------------------------------------------------------------------------------------------------------\ncondense_token = ( token ) ->\n  keys    = ( Object.keys token ).sort()\n  keys    = keys.filter ( x ) -> x not in [ 'message', '$', ]\n  values  = ( ( k + '=' + as_text token[ k ] ) for k in keys )\n  return values.join ','\n  # return as_text values\n\n#-----------------------------------------------------------------------------------------------------------\ncondense_tokens = ( tokens ) ->\n  R = []\n  for t in tokens\n    continue if t.$key in [ '<document', '>document', ]\n    R.push condense_token t\n  return R.join '#'\n\n#-----------------------------------------------------------------------------------------------------------\ndelete_refs = ( ds ) ->\n  R = []\n  for d in ds\n    R.push lets d, ( d ) -> delete d.$\n  return R\n\n# #-----------------------------------------------------------------------------------------------------------\n# @show_condensed_tokens = ( tokens ) ->\n#   for token in tokens\n#     help @condense_token token\n#   info @condense_tokens tokens\n#   return null\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n# @[ \"API\" ] = ( T, done ) ->\n#   grammar       = require './grammar'\n#   grammar  = require './htmlish.grammar'\n#   debug '^34334^', rpr ( k for k of grammar )\n#   debug '^34334^', rpr ( k for k of grammar )\n#   # urge grammar.parse \"\"\"<title>Helo Worlds</title>\"\"\"\n#   return done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML: parse (1)\" ] = ( T, done ) ->\n  grammar = require './htmlish.grammar'\n  probes_and_matchers = [\n    [ '<!DOCTYPE html>',    [ { '$key': '<document', start: 0, stop: 0, source: '<!DOCTYPE html>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '^doctype', start: 0, stop: 15, text: '<!DOCTYPE html>', '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 15, stop: 15, '$vnr': [ Infinity ] } ], null ]\n    [ '<!DOCTYPE obvious>', [ { '$key': '<document', start: 0, stop: 0, source: '<!DOCTYPE obvious>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '^doctype', start: 0, stop: 18, text: '<!DOCTYPE obvious>', '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 18, stop: 18, '$vnr': [ Infinity ] } ], null ]\n    [ '<title>Helo Worlds</title>', [ { '$key': '<document', start: 0, stop: 0, source: '<title>Helo Worlds</title>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'title', type: 'otag', text: '<title>', start: 0, stop: 7, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 7, stop: 18, text: 'Helo Worlds', '$vnr': [ 1, 8 ] }, { '$key': '>tag', name: 'title', type: 'ctag', text: '</title>', start: 18, stop: 26, '$vnr': [ 1, 19 ] }, { '$key': '>document', start: 26, stop: 26, '$vnr': [ Infinity ] } ], null ]\n    [ '<img width=200>', [ { '$key': '<document', start: 0, stop: 0, source: '<img width=200>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'img', type: 'otag', text: '<img width=200>', start: 0, stop: 15, atrs: { width: '200' }, '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 15, stop: 15, '$vnr': [ Infinity ] } ], null ]\n    [ '<foo/>', [ { '$key': '<document', start: 0, stop: 0, source: '<foo/>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '^tag', name: 'foo', type: 'stag', text: '<foo/>', start: 0, stop: 6, '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 6, stop: 6, '$vnr': [ Infinity ] } ], null ]\n    [ '<foo></foo>', [ { '$key': '<document', start: 0, stop: 0, source: '<foo></foo>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'foo', type: 'otag', text: '<foo>', start: 0, stop: 5, '$vnr': [ 1, 1 ] }, { '$key': '>tag', name: 'foo', type: 'ctag', text: '</foo>', start: 5, stop: 11, '$vnr': [ 1, 6 ] }, { '$key': '>document', start: 11, stop: 11, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>here and<br></br>there</p>', [ { '$key': '<document', start: 0, stop: 0, source: '<p>here and<br></br>there</p>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 11, text: 'here and', '$vnr': [ 1, 4 ] }, { '$key': '<tag', name: 'br', type: 'otag', text: '<br>', start: 11, stop: 15, '$vnr': [ 1, 12 ] }, { '$key': '>tag', name: 'br', type: 'ctag', text: '</br>', start: 15, stop: 20, '$vnr': [ 1, 16 ] }, { '$key': '^text', start: 20, stop: 25, text: 'there', '$vnr': [ 1, 21 ] }, { '$key': '>tag', name: 'p', type: 'ctag', text: '</p>', start: 25, stop: 29, '$vnr': [ 1, 26 ] }, { '$key': '>document', start: 29, stop: 29, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>here and<br>there', [ { '$key': '<document', start: 0, stop: 0, source: '<p>here and<br>there', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 11, text: 'here and', '$vnr': [ 1, 4 ] }, { '$key': '<tag', name: 'br', type: 'otag', text: '<br>', start: 11, stop: 15, '$vnr': [ 1, 12 ] }, { '$key': '^text', start: 15, stop: 20, text: 'there', '$vnr': [ 1, 16 ] }, { '$key': '>document', start: 20, stop: 20, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>here and<br>there</p>', [ { '$key': '<document', start: 0, stop: 0, source: '<p>here and<br>there</p>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 11, text: 'here and', '$vnr': [ 1, 4 ] }, { '$key': '<tag', name: 'br', type: 'otag', text: '<br>', start: 11, stop: 15, '$vnr': [ 1, 12 ] }, { '$key': '^text', start: 15, stop: 20, text: 'there', '$vnr': [ 1, 16 ] }, { '$key': '>tag', name: 'p', type: 'ctag', text: '</p>', start: 20, stop: 24, '$vnr': [ 1, 21 ] }, { '$key': '>document', start: 24, stop: 24, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>here and<br x=42/>there</p>', [ { '$key': '<document', start: 0, stop: 0, source: '<p>here and<br x=42/>there</p>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 11, text: 'here and', '$vnr': [ 1, 4 ] }, { '$key': '^tag', name: 'br', type: 'stag', text: '<br x=42/>', start: 11, stop: 21, atrs: { x: '42' }, '$vnr': [ 1, 12 ] }, { '$key': '^text', start: 21, stop: 26, text: 'there', '$vnr': [ 1, 22 ] }, { '$key': '>tag', name: 'p', type: 'ctag', text: '</p>', start: 26, stop: 30, '$vnr': [ 1, 27 ] }, { '$key': '>document', start: 30, stop: 30, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>here and<br/>there</p>', [ { '$key': '<document', start: 0, stop: 0, source: '<p>here and<br/>there</p>', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 11, text: 'here and', '$vnr': [ 1, 4 ] }, { '$key': '^tag', name: 'br', type: 'stag', text: '<br/>', start: 11, stop: 16, '$vnr': [ 1, 12 ] }, { '$key': '^text', start: 16, stop: 21, text: 'there', '$vnr': [ 1, 17 ] }, { '$key': '>tag', name: 'p', type: 'ctag', text: '</p>', start: 21, stop: 25, '$vnr': [ 1, 22 ] }, { '$key': '>document', start: 25, stop: 25, '$vnr': [ Infinity ] } ], null ]\n    [ 'just some plain text', [ { '$key': '<document', start: 0, stop: 0, source: 'just some plain text', errors: [], '$vnr': [ -Infinity ] }, { '$key': '^text', start: 0, stop: 20, text: 'just some plain text', '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 20, stop: 20, '$vnr': [ Infinity ] } ], null ]\n    [ '<p>one<p>two', [ { '$key': '<document', start: 0, stop: 0, source: '<p>one<p>two', errors: [], '$vnr': [ -Infinity ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 0, stop: 3, '$vnr': [ 1, 1 ] }, { '$key': '^text', start: 3, stop: 6, text: 'one', '$vnr': [ 1, 4 ] }, { '$key': '<tag', name: 'p', type: 'otag', text: '<p>', start: 6, stop: 9, '$vnr': [ 1, 7 ] }, { '$key': '^text', start: 9, stop: 12, text: 'two', '$vnr': [ 1, 10 ] }, { '$key': '>document', start: 12, stop: 12, '$vnr': [ Infinity ] } ], null ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve delete_refs grammar.parse probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML: parse (1a)\" ] = ( T, done ) ->\n  grammar = require './htmlish.grammar'\n  probes_and_matchers = [\n    [ '<!DOCTYPE html>', \"$key='^doctype',$vnr=[ 1, 1 ],start=0,stop=15,text='<!DOCTYPE html>'\", null ]\n    [ '<!DOCTYPE obvious>', \"$key='^doctype',$vnr=[ 1, 1 ],start=0,stop=18,text='<!DOCTYPE obvious>'\", null ]\n    [ '<title>Helo Worlds</title>', \"$key='<tag',$vnr=[ 1, 1 ],name='title',start=0,stop=7,text='<title>',type='otag'#$key='^text',$vnr=[ 1, 8 ],start=7,stop=18,text='Helo Worlds'#$key='>tag',$vnr=[ 1, 19 ],name='title',start=18,stop=26,text='</title>',type='ctag'\", null ]\n    [ '<img width=200>', \"$key='<tag',$vnr=[ 1, 1 ],atrs={ width: '200' },name='img',start=0,stop=15,text='<img width=200>',type='otag'\", null ]\n    [ '<foo/>', \"$key='^tag',$vnr=[ 1, 1 ],name='foo',start=0,stop=6,text='<foo/>',type='stag'\", null ]\n    [ '<foo></foo>', \"$key='<tag',$vnr=[ 1, 1 ],name='foo',start=0,stop=5,text='<foo>',type='otag'#$key='>tag',$vnr=[ 1, 6 ],name='foo',start=5,stop=11,text='</foo>',type='ctag'\", null ]\n    [ '<p>here and<br></br>there</p>', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=11,text='here and'#$key='<tag',$vnr=[ 1, 12 ],name='br',start=11,stop=15,text='<br>',type='otag'#$key='>tag',$vnr=[ 1, 16 ],name='br',start=15,stop=20,text='</br>',type='ctag'#$key='^text',$vnr=[ 1, 21 ],start=20,stop=25,text='there'#$key='>tag',$vnr=[ 1, 26 ],name='p',start=25,stop=29,text='</p>',type='ctag'\", null ]\n    [ '<p>here and<br>there', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=11,text='here and'#$key='<tag',$vnr=[ 1, 12 ],name='br',start=11,stop=15,text='<br>',type='otag'#$key='^text',$vnr=[ 1, 16 ],start=15,stop=20,text='there'\", null ]\n    [ '<p>here and<br>there</p>', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=11,text='here and'#$key='<tag',$vnr=[ 1, 12 ],name='br',start=11,stop=15,text='<br>',type='otag'#$key='^text',$vnr=[ 1, 16 ],start=15,stop=20,text='there'#$key='>tag',$vnr=[ 1, 21 ],name='p',start=20,stop=24,text='</p>',type='ctag'\", null ]\n    [ '<p>here and<br x=42/>there</p>', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=11,text='here and'#$key='^tag',$vnr=[ 1, 12 ],atrs={ x: '42' },name='br',start=11,stop=21,text='<br x=42/>',type='stag'#$key='^text',$vnr=[ 1, 22 ],start=21,stop=26,text='there'#$key='>tag',$vnr=[ 1, 27 ],name='p',start=26,stop=30,text='</p>',type='ctag'\", null ]\n    [ '<p>here and<br/>there</p>', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=11,text='here and'#$key='^tag',$vnr=[ 1, 12 ],name='br',start=11,stop=16,text='<br/>',type='stag'#$key='^text',$vnr=[ 1, 17 ],start=16,stop=21,text='there'#$key='>tag',$vnr=[ 1, 22 ],name='p',start=21,stop=25,text='</p>',type='ctag'\", null ]\n    [ 'just some plain text', \"$key='^text',$vnr=[ 1, 1 ],start=0,stop=20,text='just some plain text'\", null ]\n    [ '<p>one<p>two', \"$key='<tag',$vnr=[ 1, 1 ],name='p',start=0,stop=3,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 4 ],start=3,stop=6,text='one'#$key='<tag',$vnr=[ 1, 7 ],name='p',start=6,stop=9,text='<p>',type='otag'#$key='^text',$vnr=[ 1, 10 ],start=9,stop=12,text='two'\", null ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve condense_tokens grammar.parse probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML: parse (dubious)\" ] = ( T, done ) ->\n  grammar = require './htmlish.grammar'\n  probes_and_matchers = [\n    [ '< >', \"$key='<tag',$vnr=[ 1, 1 ],start=0,stop=3,text='< >',type='otag'#$key='^error',$vnr=[ 1, 3 ],chvtname='MismatchedTokenException',code='mismatch',origin='parser',start=2,stop=3,text='>'\", null ]\n    [ '< x >', \"$key='<tag',$vnr=[ 1, 1 ],name='x',start=0,stop=5,text='< x >',type='otag'\", null ]\n    [ '<>', \"$key='<tag',$vnr=[ 1, 1 ],start=0,stop=2,text='<>',type='otag'#$key='^error',$vnr=[ 1, 2 ],chvtname='MismatchedTokenException',code='mismatch',origin='parser',start=1,stop=2,text='>'\", null ]\n    [ '<', \"$key='^error',$vnr=[ 1, 1 ],chvtname='MismatchedTokenException',code='mismatch',origin='parser',start=0,stop=1,text='<'\", null ]\n    [ '<tag', \"$key='<tag',$vnr=[ 1, 1 ],name='tag',start=0,stop=4,text='<tag'#$key='^error',$vnr=[ 1, 2 ],chvtname='NoViableAltException',code='missing',origin='parser',start=1,stop=4,text='tag'\", null ]\n    [ 'if <math> a > b </math> then', \"$key='^text',$vnr=[ 1, 1 ],start=0,stop=3,text='if '#$key='<tag',$vnr=[ 1, 4 ],name='math',start=3,stop=9,text='<math>',type='otag'#$key='^text',$vnr=[ 1, 10 ],start=9,stop=16,text=' a > b '#$key='>tag',$vnr=[ 1, 17 ],name='math',start=16,stop=23,text='</math>',type='ctag'#$key='^text',$vnr=[ 1, 24 ],start=23,stop=28,text=' then'\", null ]\n    [ '>', \"$key='^text',$vnr=[ 1, 1 ],start=0,stop=1,text='>'\", null ]\n    [ '&', \"$key='^text',$vnr=[ 1, 1 ],start=0,stop=1,text='&'\", null ]\n    [ '&amp;', \"$key='^text',$vnr=[ 1, 1 ],start=0,stop=5,text='&amp;'\", null ]\n    [ \"<tag a='<'>\", \"\"\"$key='<tag',$vnr=[ 1, 1 ],atrs={ a: \"'<'\" },name='tag',start=0,stop=11,text=\"<tag a='<'>\",type='otag'\"\"\", null ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve condense_tokens grammar.parse probe\n  #.........................................................................................................\n  done()\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"HTML.$datoms_from_html\" ] = ( T, done ) ->\n#   INTERTEXT                 = require '../..'\n#   { HTML, }                 = INTERTEXT\n#   SP                        = require 'steampipes'\n#   # SP                        = require '../../apps/steampipes'\n#   { $\n#     $async\n#     $drain\n#     $watch\n#     $show  }                = SP.export()\n#   #.........................................................................................................\n#   probe         = \"\"\"\n#     <p>A <em>concise</em> introduction to the things discussed below.</p>\n#     \"\"\"\n#   matcher = [{\"$key\":\"<p\"},{\"text\":\"A \",\"$key\":\"^text\"},{\"$key\":\"<em\"},{\"text\":\"concise\",\"$key\":\"^text\"},{\"$key\":\">em\"},{\"text\":\" introduction to the things discussed below.\",\"$key\":\"^text\"},{\"$key\":\">p\"}]\n#   #.........................................................................................................\n#   pipeline      = []\n#   pipeline.push [ ( Buffer.from probe ), ]\n#   pipeline.push SP.$split()\n#   pipeline.push HTML.$datoms_from_html()\n#   pipeline.push $show()\n#   pipeline.push $drain ( result ) =>\n#     help jr result\n#     T.eq result, matcher\n#     done()\n#   SP.pull pipeline...\n#   #.........................................................................................................\n#   return null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_INDENTATION: parse (1)\" ] = ( T, done ) ->\n  grammar = ( require './indentation.grammar' ).indentation_grammar\n  probes_and_matchers = [\n    [\"if 42:\\n    43\\nelse:\\n  44\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":0,\"stop\":24,\"text\":\"if 42:\\n    43\\nelse:\\n  44\"},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"if 42:\",\"start\":0,\"stop\":6},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"    \",\"start\":7,\"stop\":11},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"43\",\"start\":11,\"stop\":13},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"else:\",\"start\":14,\"stop\":19},{\"$key\":\"^token\",\"name\":\"dedent\",\"text\":\"\",\"start\":14,\"stop\":14},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"  \",\"start\":20,\"stop\":22},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"44\",\"start\":22,\"stop\":24},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":24,\"stop\":24,\"text\":\"\"},{\"$key\":\">node\",\"name\":\"document\",\"start\":24,\"stop\":24}],null]\n    [\"   x = 42\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":0,\"stop\":9,\"text\":\"   x = 42\"},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"   \",\"start\":0,\"stop\":3},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"x = 42\",\"start\":3,\"stop\":9},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":9,\"stop\":9,\"text\":\"\"},{\"$key\":\">node\",\"name\":\"document\",\"start\":9,\"stop\":9}],null]\n    [\"   <!-- xx -->\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":0,\"stop\":14,\"text\":\"   <!-- xx -->\"},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"   \",\"start\":0,\"stop\":3},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"<!-- xx -->\",\"start\":3,\"stop\":14},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":14,\"stop\":14,\"text\":\"\"},{\"$key\":\">node\",\"name\":\"document\",\"start\":14,\"stop\":14}],null]\n    [\"L0\\n  L1\\n    L2\\n      L3\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":0,\"stop\":23,\"text\":\"L0\\n  L1\\n    L2\\n      L3\"},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L0\",\"start\":0,\"stop\":2},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"  \",\"start\":3,\"stop\":5},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L1\",\"start\":5,\"stop\":7},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"    \",\"start\":8,\"stop\":12},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L2\",\"start\":12,\"stop\":14},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"      \",\"start\":15,\"stop\":21},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L3\",\"start\":21,\"stop\":23},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":23,\"stop\":23,\"text\":\"\"},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":23,\"stop\":23,\"text\":\"\"},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":23,\"stop\":23,\"text\":\"\"},{\"$key\":\">node\",\"name\":\"document\",\"start\":23,\"stop\":23}],null]\n    [\"L0\\n  L1\\n    L2\\n  L1\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":0,\"stop\":19,\"text\":\"L0\\n  L1\\n    L2\\n  L1\"},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L0\",\"start\":0,\"stop\":2},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"  \",\"start\":3,\"stop\":5},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L1\",\"start\":5,\"stop\":7},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"    \",\"start\":8,\"stop\":12},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L2\",\"start\":12,\"stop\":14},{\"$key\":\"^token\",\"name\":\"dedent\",\"text\":\"  \",\"start\":15,\"stop\":17},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L1\",\"start\":17,\"stop\":19},{\"$key\":\"^token\",\"name\":\"dedent\",\"start\":19,\"stop\":19,\"text\":\"\"},{\"$key\":\">node\",\"name\":\"document\",\"start\":19,\"stop\":19}],null]\n    [\"\\n  \\n\\nL0\\n  L1\\n\\n    \\nOK\\n\",[{\"$key\":\"<node\",\"name\":\"document\",\"start\":1,\"stop\":21,\"text\":\"  \\n\\nL0\\n  L1\\n\\n    \\nOK\"},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"  \",\"start\":1,\"stop\":3},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L0\",\"start\":5,\"stop\":7},{\"$key\":\"^token\",\"name\":\"dedent\",\"text\":\"\",\"start\":5,\"stop\":5},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"  \",\"start\":8,\"stop\":10},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"L1\",\"start\":10,\"stop\":12},{\"$key\":\"^token\",\"name\":\"indent\",\"text\":\"    \",\"start\":14,\"stop\":18},{\"$key\":\"^token\",\"name\":\"line\",\"text\":\"OK\",\"start\":19,\"stop\":21},{\"$key\":\"^token\",\"name\":\"dedent\",\"text\":\"\",\"start\":19,\"stop\":19},{\"$key\":\"^token\",\"name\":\"dedent\",\"text\":\"\",\"start\":19,\"stop\":19},{\"$key\":\">node\",\"name\":\"document\",\"start\":21,\"stop\":21}],null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve grammar.parse probe\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nif module is require.main then do => # await do =>\n  # debug ( k for k of ( require '../..' ).HTML ).sort().join ' '\n  # await @_demo()\n  test @\n  # test @[ \"API\" ]\n  # test @[ \"HTML: parse (1)\" ]\n  # test @[ \"HTML: parse (1a)\" ]\n  # test @[ \"HTML: parse (dubious)\" ]\n  # test @[ \"INDENTATION: parse (1)\" ]\n  # test @[ \"HTML: parse (2)\" ]\n  # test @[ \"HTML.html_from_datoms (singular tags)\" ]\n  # test @[ \"HTML Cupofhtml (1)\" ]\n  # test @[ \"HTML Cupofhtml (2)\" ]\n  # test @[ \"HTML._parse_compact_tagname\" ]\n"
  ]
}