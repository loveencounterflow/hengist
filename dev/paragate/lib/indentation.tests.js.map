{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/indentation.tests.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B,EAfA;;;EAiBA,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,SAAA,GAA4B,OAAA,CAAQ,WAAR;;EAC5B,CAAA,CAAE,GAAF,CAAA,GAA4B,SAAS,CAAC,MAAV,CAAA,CAA5B;;EACA,CAAA,CAAE,GAAF,EACE,OADF,CAAA,GAC4B,SAAS,CAAC,KADtC;;EAEA,CAAA,CAAE,IAAF,CAAA,GAA4B,CAAE,OAAA,CAAQ,OAAR,CAAF,CAAmB,CAAC,MAApB,CAAA,CAA5B;;EACA,CAAA,GAA4B,OAAA,CAAQ,gBAAR,EAvB5B;;;;;EA8BA,IAAC,CAAE,wBAAF,CAAD,GAAgC,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAChC,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;IAAE,WAAA,GAAc,OAAA,CAAQ,qDAAR;IACd,mBAAA,GAAsB;MACpB;QAAE,6BAAF;QAAiC;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,EAAvC;YAA2C,MAAA,EAAQ,6BAAnD;YAAkF,MAAA,EAAQ,CAAE,CAAC,KAAH;UAA1F,CAAF;UAA6G;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,UAA7C;YAAyD,KAAA,EAAO,CAAhE;YAAmE,SAAA,EAAW,CAA9E;YAAiF,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAzF,CAA7G;UAAkN;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,EAApC;YAAwC,IAAA,EAAM,MAA9C;YAAsD,KAAA,EAAO,CAA7D;YAAgE,SAAA,EAAW,CAA3E;YAA8E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAtF,CAAlN;UAAoT;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,SAA/C;YAA0D,KAAA,EAAO,CAAjE;YAAoE,SAAA,EAAW,CAA/E;YAAkF,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAA1F,CAApT;UAA0Z;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,IAA/C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAA1Z;UAA2f;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,EAA9B;YAAkC,IAAA,EAAM,EAAxC;YAA4C,MAAA,EAAQ,CAAE,KAAF;UAApD,CAA3f;SAAjC;QAAkmB,IAAlmB;OADoB;MAEpB;QAAE,WAAF;QAAe;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,CAAvC;YAA0C,MAAA,EAAQ,WAAlD;YAA+D,MAAA,EAAQ,CAAE,CAAC,KAAH;UAAvE,CAAF;UAA0F;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,QAA7C;YAAuD,KAAA,EAAO,CAA9D;YAAiE,SAAA,EAAW,CAA5E;YAA+E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAvF,CAA1F;UAA6L;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,CAAvC;YAA0C,MAAA,EAAQ,CAAE,KAAF;UAAlD,CAA7L;SAAf;QAAgR,IAAhR;OAFoB;MAGpB;QAAE,gBAAF;QAAoB;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,EAAvC;YAA2C,MAAA,EAAQ,gBAAnD;YAAqE,MAAA,EAAQ,CAAE,CAAC,KAAH;UAA7E,CAAF;UAAgG;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,EAApC;YAAwC,IAAA,EAAM,aAA9C;YAA6D,KAAA,EAAO,CAApE;YAAuE,SAAA,EAAW,CAAlF;YAAqF,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAA7F,CAAhG;UAAyM;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,EAA9B;YAAkC,IAAA,EAAM,EAAxC;YAA4C,MAAA,EAAQ,CAAE,KAAF;UAApD,CAAzM;SAApB;QAAmS,IAAnS;OAHoB;MAIpB;QAAE,4BAAF;QAAgC;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,EAAvC;YAA2C,MAAA,EAAQ,4BAAnD;YAAiF,MAAA,EAAQ,CAAE,CAAC,KAAH;UAAzF,CAAF;UAA4G;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,MAA7C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAA5G;UAA6M;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,MAA7C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAA7M;UAA8S;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,EAApC;YAAwC,IAAA,EAAM,MAA9C;YAAsD,KAAA,EAAO,CAA7D;YAAgE,SAAA,EAAW,CAA3E;YAA8E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAtF,CAA9S;UAAgZ;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,IAA/C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAAhZ;UAAif;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,EAA9B;YAAkC,IAAA,EAAM,EAAxC;YAA4C,MAAA,EAAQ,CAAE,KAAF;UAApD,CAAjf;SAAhC;QAAulB,IAAvlB;OAJoB;MAKpB;QAAE,wBAAF;QAA4B;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,EAAvC;YAA2C,MAAA,EAAQ,wBAAnD;YAA6E,MAAA,EAAQ,CAAE,CAAC,KAAH;UAArF,CAAF;UAAwG;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,MAA7C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAAxG;UAAyM;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,MAA7C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAAzM;UAA0S;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,EAApC;YAAwC,IAAA,EAAM,MAA9C;YAAsD,KAAA,EAAO,CAA7D;YAAgE,SAAA,EAAW,CAA3E;YAA8E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAtF,CAA1S;UAA4Y;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,IAA/C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAA5Y;UAA6e;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,EAA9B;YAAkC,IAAA,EAAM,EAAxC;YAA4C,MAAA,EAAQ,CAAE,KAAF;UAApD,CAA7e;SAA5B;QAA+kB,IAA/kB;OALoB;MAMpB;QAAE,gCAAF;QAAoC;UAAE;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,CAA9B;YAAiC,IAAA,EAAM,EAAvC;YAA2C,MAAA,EAAQ,gCAAnD;YAAqF,MAAA,EAAQ,CAAE,CAAC,KAAH;UAA7F,CAAF;UAAgH;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,UAA7C;YAAyD,KAAA,EAAO,CAAhE;YAAmE,SAAA,EAAW,CAA9E;YAAiF,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAzF,CAAhH;UAAqN;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,CAApC;YAAuC,IAAA,EAAM,MAA7C;YAAqD,KAAA,EAAO,CAA5D;YAA+D,SAAA,EAAW,CAA1E;YAA6E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAArF,CAArN;UAAsT;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,CAA3B;YAA8B,IAAA,EAAM,EAApC;YAAwC,IAAA,EAAM,MAA9C;YAAsD,KAAA,EAAO,CAA7D;YAAgE,SAAA,EAAW,CAA3E;YAA8E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAtF,CAAtT;UAAwZ;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,UAA/C;YAA2D,KAAA,EAAO,CAAlE;YAAqE,SAAA,EAAW,CAAhF;YAAmF,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAA3F,CAAxZ;UAA+f;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,MAA/C;YAAuD,KAAA,EAAO,CAA9D;YAAiE,SAAA,EAAW,CAA5E;YAA+E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAvF,CAA/f;UAAkmB;YAAE,MAAA,EAAQ,QAAV;YAAoB,KAAA,EAAO,EAA3B;YAA+B,IAAA,EAAM,EAArC;YAAyC,IAAA,EAAM,EAA/C;YAAmD,KAAA,EAAO,CAA1D;YAA6D,SAAA,EAAW,CAAxE;YAA2E,MAAA,EAAQ,CAAE,CAAF;UAAK,CAAL;UAAnF,CAAlmB;UAAisB;YAAE,MAAA,EAAQ,WAAV;YAAuB,KAAA,EAAO,EAA9B;YAAkC,IAAA,EAAM,EAAxC;YAA4C,MAAA,EAAQ,CAAE,KAAF;UAApD,CAAjsB;SAApC;QAA2yB,IAA3yB;OANoB;;IAQtB,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;eAAG,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,CAAA,EAAA;;;iBAGpD,OAAA,CAAQ,CAAC,CAAC,WAAF,CAAc,WAAW,CAAC,OAAO,CAAC,KAApB,CAA0B,KAA1B,CAAd,CAAR;QAHoD,CAAZ;MAAH,CAAjC;IADR,CATF;;;IAgBE,IAAA,CAAA;AACA,WAAO;EAlBuB,EA9BhC;;;EAoDA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAK,IAAL;IADgC,CAAA,IAAlC;;;EApDA;AAAA",
  "sourcesContent": [
    "\n'use strict'\n# coffeelint: disable=max_line_length\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'PARAGATE/INDENTATION-TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTEXT                 = require 'intertext'\n{ rpr }                   = INTERTEXT.export()\n{ isa\n  type_of }               = INTERTEXT.types\n{ lets }                  = ( require 'datom' ).export()\nH                         = require './test-helpers'\n\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INDENTATION: parse (1)\" ] = ( T, done ) ->\n  INDENTATION = require '../../../apps/paragate/lib/regex-whitespace.grammar'\n  probes_and_matchers = [\n    [ 'if 42:\\n    43\\nelse:\\n  44', [ { '$key': '<document', start: 0, stop: 24, source: 'if 42:\\n    43\\nelse:\\n  44', '$vnr': [ -Infinity ] }, { '$key': '^block', start: 0, stop: 7, text: 'if 42:\\n', level: 0, linecount: 1, '$vnr': [ 1, 1 ] }, { '$key': '^block', start: 7, stop: 14, text: '43\\n', level: 4, linecount: 1, '$vnr': [ 2, 1 ] }, { '$key': '^block', start: 14, stop: 20, text: 'else:\\n', level: 0, linecount: 1, '$vnr': [ 3, 1 ] }, { '$key': '^block', start: 20, stop: 24, text: '44', level: 2, linecount: 1, '$vnr': [ 4, 1 ] }, { '$key': '>document', start: 24, stop: 24, '$vnr': [ Infinity ] } ], null ]\n    [ '   x = 42', [ { '$key': '<document', start: 0, stop: 9, source: '   x = 42', '$vnr': [ -Infinity ] }, { '$key': '^block', start: 0, stop: 9, text: 'x = 42', level: 3, linecount: 1, '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 9, stop: 9, '$vnr': [ Infinity ] } ], null ]\n    [ '   <!-- xx -->', [ { '$key': '<document', start: 0, stop: 14, source: '   <!-- xx -->', '$vnr': [ -Infinity ] }, { '$key': '^block', start: 0, stop: 14, text: '<!-- xx -->', level: 3, linecount: 1, '$vnr': [ 1, 1 ] }, { '$key': '>document', start: 14, stop: 14, '$vnr': [ Infinity ] } ], null ]\n    [ 'L0\\n  L1\\n    L2\\n      L3', [ { '$key': '<document', start: 0, stop: 23, source: 'L0\\n  L1\\n    L2\\n      L3', '$vnr': [ -Infinity ] }, { '$key': '^block', start: 0, stop: 3, text: 'L0\\n', level: 0, linecount: 1, '$vnr': [ 1, 1 ] }, { '$key': '^block', start: 3, stop: 8, text: 'L1\\n', level: 2, linecount: 1, '$vnr': [ 2, 1 ] }, { '$key': '^block', start: 8, stop: 15, text: 'L2\\n', level: 4, linecount: 1, '$vnr': [ 3, 1 ] }, { '$key': '^block', start: 15, stop: 23, text: 'L3', level: 6, linecount: 1, '$vnr': [ 4, 1 ] }, { '$key': '>document', start: 23, stop: 23, '$vnr': [ Infinity ] } ], null ]\n    [ 'L0\\n  L1\\n    L2\\n  L1', [ { '$key': '<document', start: 0, stop: 19, source: 'L0\\n  L1\\n    L2\\n  L1', '$vnr': [ -Infinity ] }, { '$key': '^block', start: 0, stop: 3, text: 'L0\\n', level: 0, linecount: 1, '$vnr': [ 1, 1 ] }, { '$key': '^block', start: 3, stop: 8, text: 'L1\\n', level: 2, linecount: 1, '$vnr': [ 2, 1 ] }, { '$key': '^block', start: 8, stop: 15, text: 'L2\\n', level: 4, linecount: 1, '$vnr': [ 3, 1 ] }, { '$key': '^block', start: 15, stop: 19, text: 'L1', level: 2, linecount: 1, '$vnr': [ 4, 1 ] }, { '$key': '>document', start: 19, stop: 19, '$vnr': [ Infinity ] } ], null ]\n    [ '\\n  \\n\\nL0\\n  L1\\n\\n    \\nOK\\n', [ { '$key': '<document', start: 0, stop: 22, source: '\\n  \\n\\nL0\\n  L1\\n\\n    \\nOK\\n', '$vnr': [ -Infinity ] }, { '$key': '^blank', start: 0, stop: 5, text: '\\n  \\n\\n', level: 0, linecount: 3, '$vnr': [ 1, 1 ] }, { '$key': '^block', start: 5, stop: 8, text: 'L0\\n', level: 0, linecount: 1, '$vnr': [ 4, 1 ] }, { '$key': '^block', start: 8, stop: 13, text: 'L1\\n', level: 2, linecount: 1, '$vnr': [ 5, 1 ] }, { '$key': '^blank', start: 13, stop: 19, text: '\\n    \\n', level: 0, linecount: 2, '$vnr': [ 6, 1 ] }, { '$key': '^block', start: 19, stop: 22, text: 'OK\\n', level: 0, linecount: 1, '$vnr': [ 8, 1 ] }, { '$key': '^blank', start: 22, stop: 22, text: '', level: 0, linecount: 1, '$vnr': [ 9, 1 ] }, { '$key': '>document', start: 22, stop: 22, '$vnr': [ Infinity ] } ], null ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      # info d for d in INDENTATION.grammar.parse probe\n      # urge d for d in H.delete_refs INDENTATION.grammar.parse probe\n      resolve H.delete_refs INDENTATION.grammar.parse probe\n      # resolve null\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  test @\n  # test @[ \"INDENTATION: parse (1)\" ]\n\n"
  ]
}