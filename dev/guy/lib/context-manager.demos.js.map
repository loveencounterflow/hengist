{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/context-manager.demos.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n\n\n#===========================================================================================================\n# CLASS DEFINITION\n#-----------------------------------------------------------------------------------------------------------\nclass Context_manager_1 extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    super()\n    Object.setPrototypeOf @mymethod, Context_manager_1.prototype\n    # Object.setPrototypeOf @mymethod, @constructor.prototype\n    @id = 1234\n    return @mymethod\n\n  #---------------------------------------------------------------------------------------------------------\n  mymethod: ( P... ) =>\n    # debug '^4554^', type_of @\n    debug '^4554^', ( k for k of @ )\n    debug '^4554^', @id\n    debug '^4554^', @frobulate\n\n  frobulate: ( n ) -> n ** 2\n\n#-----------------------------------------------------------------------------------------------------------\nclass Context_manager_2 extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( f ) ->\n    super()\n    @f = f.bind @\n    # Object.setPrototypeOf f, Context_manager_2.prototype\n    # Object.setPrototypeOf @f, @constructor.prototype\n    @id = 4567\n    # f.__call__ = @f\n    # return @f\n    return undefined\n\n  frobulate: ( n ) -> n ** 2\n\n\n#===========================================================================================================\n# DEMOS\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  do =>\n    cm_1 = new Context_manager_1()\n    cm_1()\n    whisper '------------------'\n    cm_1.mymethod()\n  whisper '================='\n  do =>\n    cm_2 = new Context_manager_2 ->\n      info '^4554^', @id\n      info '^4554^', ( k for k of @ )\n      info '^4554^', @frobulate\n      return 'othermethod'\n    cm_2()\n    whisper '------------------'\n    urge cm_2.f?()\n    # urge cm_2.__call__?()\n    urge cm_2.frobulate? 3\n    # urge cm_2.frobulate? 3\n\n\n############################################################################################################\nif require.main is module then do =>\n  demo_1()\n"
  ]
}