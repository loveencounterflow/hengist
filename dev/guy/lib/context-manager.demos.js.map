{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/context-manager.demos.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n\n\n#===========================================================================================================\n# CLASS DEFINITION\n#-----------------------------------------------------------------------------------------------------------\nclass Context_manager extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( kernel ) ->\n    super()\n    kernel = kernel.bind @\n    manager = ( P... ) =>\n      @enter P...\n      try R = kernel P... finally @exit P...\n      return R\n    @id = 4567\n    return manager\n\n  #---------------------------------------------------------------------------------------------------------\n  enter: ( P... ) ->\n    debug '^701^', \"enter()\", P\n    return 1\n\n  #---------------------------------------------------------------------------------------------------------\n  exit: ( P... ) ->\n    debug '^701^', \"exit()\", P\n    return 1\n\n#===========================================================================================================\n# DEMOS\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  do =>\n    cm_2 = new Context_manager ( P... ) ->\n      info '^4554^', 'kernel', P\n      whisper '^4554^', @id\n      whisper '^4554^', ( k for k of @ )\n      whisper '^4554^', @enter\n      whisper '^4554^', @exit\n      return ( rpr p for p in P ).join '|'\n    urge cm_2 'a', 'b', 'c'\n    # whisper '------------------'\n    # urge cm_2.f?()\n    # urge cm_2.frobulate? 3\n\n\n############################################################################################################\nif require.main is module then do =>\n  demo_1()\n"
  ]
}