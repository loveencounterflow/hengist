{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/context-manager.demos.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_dba_With_foreign_keys_off_cxm = ->\n  #=========================================================================================================\n  class With_foreign_keys_off extends Context_manager\n\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ( P... ) ->\n      R = super P...\n      debug '^4746^', @cfg\n      @prv_in_foreign_keys_state = @cfg.dba._get_foreign_keys_state\n      return @\n\n    #-------------------------------------------------------------------------------------------------------\n    enter: ( P... ) ->\n      debug '^With_foreign_keys_off.enter^'\n      @prv_in_foreign_keys_state = @cfg.dba._get_foreign_keys_state()\n      @cfg.dba._set_foreign_keys_state false\n      return null\n\n    #-------------------------------------------------------------------------------------------------------\n    exit: ( P... ) ->\n      debug '^With_foreign_keys_off.exit^', @prv_in_foreign_keys_state\n      @cfg.dba._set_foreign_keys_state @prv_in_foreign_keys_state\n      return null\n\n  #=========================================================================================================\n  class Dba_x extends ( require '../../../apps/icql-dba' ).Dba\n\n    #---------------------------------------------------------------------------------------------------------\n    with_foreign_keys_off: ( P... ) => ( @_with_foreign_keys_off ?= new With_foreign_keys_off { dba: @, } ) P...\n\n  #=========================================================================================================\n  do =>\n\n    #-------------------------------------------------------------------------------------------------------\n    # { Dba, }  = require '../../../apps/icql-dba'\n    dba       = new Dba_x()\n    debug '^70^', dba.With_foreign_keys_off\n    info '^123^', dba._state\n    dba.with_foreign_keys_off ( cx_value, extra_arguments... ) ->\n      debug '^inside-managed-context'\n      info '^123^', dba._state\n      return null\n    info '^123^', dba._state\n    return null\n  return null\n\n\n\n#===========================================================================================================\n# CLASS DEFINITION\n#-----------------------------------------------------------------------------------------------------------\nclass Context_manager extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    @cfg = cfg\n    return @manage\n\n  #---------------------------------------------------------------------------------------------------------\n  enter: ( rtas... ) -> null\n\n  #---------------------------------------------------------------------------------------------------------\n  exit: ( cx_value, rtas... ) -> null\n\n  #---------------------------------------------------------------------------------------------------------\n  manage: ( rtas..., block ) =>\n    validate.function block\n    cx_value = @enter rtas...\n    urge '^22298^', @cfg, cx_value\n    try\n      block_value = block.call @, cx_value, rtas...\n    finally\n      @exit cx_value, rtas...\n    return block_value\n\n#===========================================================================================================\n# DEMOS\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  do =>\n    manage  = new Context_manager cfg = { whatever: 'values', }\n    rtas    = [ 'a', 'b', 'c', ]\n    block   = ( cx_value, rtas... ) ->\n      info '^block^    ', { cx_value, rtas, cfg: @cfg, }\n      return 'block_value'\n    block_value = manage rtas..., block\n    debug '^3334^', rpr block_value\n    whisper '--------------------------------'\n    debug '^3334^', rpr block_value = manage 'some', 'other', 'rtas', ( cx_value, rtas... ) ->\n      info '^block2^   ', { cx_value, rtas, cfg: @cfg, }\n      return 'another_block_value'\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_3 = ->\n  ### NOTE we just define context managers as a kind of pattern and are done ###\n  class X\n    with_unsafe_mode: ( path, foo, P..., f ) ->\n      # @types.validate.function f\n      validate.function f\n      urge '^65^', { path, foo, }\n      prv_in_unsafe_mode = @_unsafe\n      @_unsafe = true\n      try R = f P... finally @_unsafe = prv_in_unsafe_mode\n      return R\n  x = new X()\n  x._unsafe = false\n  result = x.with_unsafe_mode 'some/path', 'FOO', 'a', 'b', ( P... ) ->\n    debug '^334^', \"inside context\", P\n    return 42\n  info '^334^', result\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # urge '#############################'\n  # demo_1()\n  # urge '#############################'\n  # demo_2()\n  demo_3()\n  # demo_dba_With_foreign_keys_off_cxm()\n\n\n###\n\n* RTAs / `rtas`: Run Time Arguments, the arguments passed in fron of the `block` when using the `manager`,\n  as in `manager 'some', 'rtas', 'here', ( cx_value, rtas... ) -> ...`\n\n* CX value / `cx_value`: the 'context value', commonly a resource, an object of central interest that\n  enables certain operations and has to be resource-managed, such as a DB connection to be established and\n  freed, or a file to be opened and closed.\n\n* Block (payload?, run time block?, )\n  * if unbound function is used, its `this` value will be the `Context_manager` instance (i.e. `manage()`);\n    from inside the block, the arguments used to instantiate the context manager may be accessed as `@cfg`\n    in this case.\n\n* Manager (cxmanager, context manager): a callable return value from instantiating a `Context_manager`\n  class.\n  * can be called any number of times with any number of RTAs and a required callable `block` as last\n    argument\n  * naming: conventionally `with_${purpose}`, as in `with_foreign_keys_off()`, `with_open_file()`,\n    `with_db_connection()`.\n* Context manager classes conventionally declared as `With_frobulations extends Context_manager`,\n  `With_foreign_keys_off extends Context_manager`, or use `cxm` suffix as in `File_cxm`, `Connection_cxm`.\n\n# To Do\n\n* **[–]** Following Python, define class / factory / decorator that takes a one-off generator function\n  and returns a context manager, sparing users the class declaration overhead.\n\n\n###\n\n"
  ]
}