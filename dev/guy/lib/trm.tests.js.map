{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/trm.tests.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,IAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,IAAI,CAAC,GAAG,CAAC,WAAT,CAAqB,eAArB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,IAAI,CAAC,GAHjC,EAdA;;;EAmBA,IAAA,GAA4B,OAAA,CAAQ,wBAAR,EAnB5B;;;;;EAuBA,CAAA,GAA4B,OAAA,CAAQ,WAAR;;EAC5B,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,OADF,EAEE,QAFF,EAGE,gBAHF,EAIE,MAJF,CAAA,GAI4B,KAAK,CAAC,MAAN,CAAA,CAJ5B,EAzBA;;;EAiCA,IAAC,CAAE,aAAF,CAAD,GAAqB,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACrB,QAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,GAAA,EAAA;IAAE,GAAA,GAAM,OAAA,CAAQ,mBAAR;IACN,GAAA,GAAM,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,KAApB,EADR;;IAGE,YAAA,GAAe,CAAE,CAAF,CAAA,GAAA;AACjB,UAAA,aAAA,EAAA,aAAA,EAAA,GAAA,EAAA,KAAA,EAAA;MAAI,aAAA,GAAgB,OAAO,CAAC,MAAM,CAAC;MAC/B,aAAA,GAAgB,OAAO,CAAC,MAAM,CAAC;MAC/B,GAAA,GAAgB;MAChB,GAAA,GAAgB;MAChB,OAAO,CAAC,MAAM,CAAC,KAAf,GAAwB,QAAA,CAAE,IAAF,CAAA;QAAY,GAAG,CAAC,IAAJ,CAAS,IAAT;eAAe,aAAa,CAAC,IAAd,CAAmB,OAAO,CAAC,MAA3B,EAAmC,IAAnC;MAA3B;MACxB,OAAO,CAAC,MAAM,CAAC,KAAf,GAAwB,QAAA,CAAE,IAAF,CAAA;QAAY,GAAG,CAAC,IAAJ,CAAS,IAAT;eAAe,aAAa,CAAC,IAAd,CAAmB,OAAO,CAAC,MAA3B,EAAmC,IAAnC;MAA3B;AACxB;QACE,CAAA,CAAA,EADF;OAEA,cAAA;QAAM;QACJ,MAAM,MADR;OAFA;QAKE,OAAO,CAAC,MAAM,CAAC,KAAf,GAAuB;QACvB,OAAO,CAAC,MAAM,CAAC,KAAf,GAAuB,cANzB;;AAOA,aAAO,CAAE,GAAF,EAAO,GAAP;IAdM,EAHjB;;IAmBE,mBAAA,GAAsB;MACpB;QAAE,OAAF;QAAW;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,+HAAF;UAAhB,CAAR;SAAX;QAA4K,IAA5K;OADoB;MAEpB;QAAE,OAAF;QAAW;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,gHAAF;UAAhB,CAAR;SAAX;QAA6J,IAA7J;OAFoB;MAGpB;QAAE,MAAF;QAAU;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,gHAAF;UAAhB,CAAR;SAAV;QAA4J,IAA5J;OAHoB;MAIpB;QAAE,MAAF;QAAU;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,+GAAF;UAAhB,CAAR;SAAV;QAA2J,IAA3J;OAJoB;MAKpB;QAAE,OAAF;QAAW;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,0FAAF;UAAhB,CAAR;SAAX;QAAuI,IAAvI;OALoB;MAMpB;QAAE,QAAF;QAAY;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,8GAAF;UAAhB,CAAR;SAAZ;QAA4J,IAA5J;OANoB;MAOpB;QAAE,MAAF;QAAU;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,+HAAF;UAAhB,CAAR;SAAV;QAA2K,IAA3K;OAPoB;MAQpB;QAAE,MAAF;QAAU;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,+HAAF;UAAhB,CAAR;SAAV;QAA2K,IAA3K;OARoB;MASpB;QAAE,SAAF;QAAa;UAAE,IAAF;UAAQ;YAAE,GAAA,EAAK,EAAP;YAAW,GAAA,EAAK,CAAE,gHAAF;UAAhB,CAAR;SAAb;QAA+J,IAA/J;OAToB;MAnBxB;;IA+BE,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;AAAG,eAAO,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AACjE,cAAA,CAAA,EAAA;UAAM,CAAA,GAAI,GAAG,CAAE,KAAF,CAAH,CAAa,SAAb;UACJ,CAAA,GAAI,YAAA,CAAa,QAAA,CAAA,CAAA;mBAAG,GAAG,CAAE,KAAF,CAAH,CAAa,SAAb;UAAH,CAAb;iBACJ,OAAA,CAAQ,CAAE,CAAF,EAAK,CAAL,CAAR;QAH2D,CAAZ;MAAV,CAAjC;IADR;AAMA,wCAAO;EAtCY,EAjCrB;;;EA0EA,IAAC,CAAA,kBAAD,GAAsB,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACtB,QAAA,GAAA,EAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;IAAE,GAAA,GAAM,OAAA,CAAQ,mBAAR,EAAR;;;IAGE,mBAAA,GAAsB,CACpB,CAAI,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,MAAZ,CAAJ,EAA0B,MAA1B,CADoB,EAEpB,CAAI,GAAG,CAAC,GAAG,CAAC,KAAR,CAAc,GAAG,CAAC,GAAG,CAAC,OAAR,CAAgB,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,MAAZ,CAAhB,CAAd,CAAJ,EAAwD,MAAxD,CAFoB,EAGpB,CAAE,+HAAF,EAAmI,wBAAnI,EAA6J,IAA7J,CAHoB,EAIpB,CAAE,gHAAF,EAAoH,wBAApH,EAA8I,IAA9I,CAJoB,EAKpB,CAAE,gHAAF,EAAoH,wBAApH,EAA8I,IAA9I,CALoB,EAMpB,CAAE,+GAAF,EAAmH,wBAAnH,EAA6I,IAA7I,CANoB,EAHxB;;IAYE,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;AAAG,eAAO,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AACjE,cAAA;UAAM,MAAA,GAAS,GAAG,CAAC,GAAG,CAAC,UAAR,CAAmB,KAAnB;iBACT,OAAA,CAAQ,MAAR;QAF2D,CAAZ;MAAV,CAAjC;IADR;AAKA,wCAAO;EAlBa,EA1EtB;;;EAiGA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA,EAAA;;;;aAIhC,IAAA,CAAK,IAAC,CAAA,kBAAN;IAJgC,CAAA,IAAlC;;AAjGA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n_GUY                      = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = _GUY.trm.get_loggers 'GUY/trm/tests'\n{ rpr\n  inspect\n  echo\n  log     }               = _GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\n# PATH                      = require 'path'\n# FS                        = require 'fs'\n# { freeze }                = require 'letsfreezethat'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.trm.rpr\" ] = ( T, done ) ->\n  GUY = require '../../../apps/guy'\n  trm = GUY.trm.get_loggers 'GUY'\n  #.........................................................................................................\n  with_capture = ( f ) =>\n    _stdout_write = process.stdout.write\n    _stderr_write = process.stderr.write\n    out           = []\n    err           = []\n    process.stdout.write  = ( data ) -> out.push data; _stdout_write.call process.stdout, data\n    process.stderr.write  = ( data ) -> err.push data; _stderr_write.call process.stderr, data\n    try\n      f()\n    catch error\n      throw error\n    finally\n      process.stdout.write = _stdout_write\n      process.stderr.write = _stderr_write\n    return { out, err, }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'alert', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[5m\\x1B[38;05;124m ⚠ \\x1B[0m\\x1B[25m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;124mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'debug', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ⚙ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;199mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'help', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;214m ☛ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;118mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'info', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ▶ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;33mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'plain', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ▶ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m XXXXXXX\\n' ] } ], null ]\n    [ 'praise', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;64m ✔ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;64mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'urge', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[1m\\x1B[38;05;124m ? \\x1B[0m\\x1B[22m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;208mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'warn', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[1m\\x1B[38;05;124m ! \\x1B[0m\\x1B[22m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;124mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    [ 'whisper', [ null, { out: [], err: [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ▶ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;240mXXXXXXX\\x1B[0m\\n' ] } ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      r = trm[ probe ] 'XXXXXXX'\n      s = with_capture -> trm[ probe ] 'XXXXXXX'\n      resolve [ r, s, ]\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_trm_strip_ansi = ( T, done ) ->\n  GUY = require '../../../apps/guy'\n  # debug '^33321^', GUY.trm._ansi_pattern\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ ( GUY.trm.red \"helo\" ), \"helo\" ]\n    [ ( GUY.trm.blink GUY.trm.reverse GUY.trm.red \"helo\" ), \"helo\" ]\n    [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[5m\\x1B[38;05;124m ⚠ \\x1B[0m\\x1B[25m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;124mXXXXXXX\\x1B[0m\\n', '00:00 ⚠  GUY XXXXXXX\\n', null ]\n    [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ⚙ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;199mXXXXXXX\\x1B[0m\\n', '00:00 ⚙  GUY XXXXXXX\\n', null ]\n    [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;214m ☛ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;118mXXXXXXX\\x1B[0m\\n', '00:00 ☛  GUY XXXXXXX\\n', null ]\n    [ '\\x1B[38;05;240m00:00\\x1B[0m\\x1B[38;05;240m ▶ \\x1B[0m \\x1B[38;05;240mGUY\\x1B[0m \\x1B[38;05;33mXXXXXXX\\x1B[0m\\n', '00:00 ▶  GUY XXXXXXX\\n', null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = GUY.trm.strip_ansi probe\n      resolve result\n  #.........................................................................................................\n  return done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @[ \"GUY.trm.rpr\" ]\n  # test @[ \"GUY.src.parse() accepts `fallback` argument, otherwise errors where appropriate\" ]\n  test @GUY_trm_strip_ansi\n\n"
  ]
}