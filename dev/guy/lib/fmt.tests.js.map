{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/fmt.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/FS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nFS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ freeze }                = require 'letsfreezethat'\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n\n#-----------------------------------------------------------------------------------------------------------\n@guy_fmt_basics = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                       = require H.guy_path\n  { format\n    new_formatter,        } = GUY.fmt\n  #.........................................................................................................\n  do =>\n    T?.eq ( format '*<+20,.5g', '11456.15454'  ), '+11,456*************'\n    T?.eq ( format '*<+20,.5g', 11456.15454    ), '+11,456*************'\n    # urge 'Î©___1', rpr format '*=+20,.5g', 11456.15454\n  #.........................................................................................................\n  do =>\n    T?.eq ( format ' > 15,.2f',  1             ), '           1.00'\n    T?.eq ( format ' > 15,.2f',  12            ), '          12.00'\n    T?.eq ( format ' > 15,.2f',  123           ), '         123.00'\n    T?.eq ( format ' > 15,.2f',  1234          ), '       1,234.00'\n    T?.eq ( format ' > 15,.2f',  -11456.15454  ), '     -11,456.15'\n    T?.eq ( format ' > 15,.2f',  53443.32455   ), '      53,443.32'\n    T?.eq ( format ' > 15,.2f',  885673.367553 ), '     885,673.37'\n    T?.eq ( format ' > 15s',     'helo'        ), '           helo'\n  #.........................................................................................................\n  do =>\n    f152f = new_formatter ' > 15,.2f'\n    f15s  = new_formatter ' > 15s'\n    T?.eq ( f152f 1             ), '           1.00'\n    T?.eq ( f152f 12            ), '          12.00'\n    T?.eq ( f152f 123           ), '         123.00'\n    T?.eq ( f152f 1234          ), '       1,234.00'\n    T?.eq ( f152f -11456.15454  ), '     -11,456.15'\n    T?.eq ( f152f 53443.32455   ), '      53,443.32'\n    T?.eq ( f152f 885673.367553 ), '     885,673.37'\n    T?.eq ( f15s 'helo'         ), '           helo'\n    # T?.eq ( GUY.str.escape_for_regex_class '^-[]/'                ), '\\\\^\\\\-[\\\\]\\\\/'\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@guy_fmt_numbers = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                       = require H.guy_path\n  { format\n    new_formatter,        } = GUY.fmt\n  #.........................................................................................................\n  do =>\n    T?.eq ( format '*<+20,.5g', 11456.15454           ), '+11,456*************'\n    T?.eq ( format '*^+20,.5g', 11456.15454           ), '******+11,456*******'\n    T?.eq ( format '*>+20,.5g', 11456.15454           ), '*************+11,456'\n  #.........................................................................................................\n  do =>\n    T?.eq ( format '_> 20.2e', 1234.56789             ), '____________ 1.23e+3'\n    T?.eq ( format '_> 20.2f', 1234.56789             ), '____________ 1234.57'\n    T?.eq ( format '_> 20.2g', 1234.56789             ), '_____________ 1.2e+3'\n    #.......................................................................................................\n    T?.eq ( format '_> 20.2e', 123456789.123456789    ), '____________ 1.23e+8'\n    T?.eq ( format '_> 20.2f', 123456789.123456789    ), '_______ 123456789.12'\n    T?.eq ( format '_> 20.2g', 123456789.123456789    ), '_____________ 1.2e+8'\n  #.........................................................................................................\n  do =>\n    T?.eq ( format '_> 20.5e', 1234.56789             ), '_________ 1.23457e+3'\n    T?.eq ( format '_> 20.5f', 1234.56789             ), '_________ 1234.56789'\n    T?.eq ( format '_> 20.5g', 1234.56789             ), '_____________ 1234.6'\n    #.......................................................................................................\n    T?.eq ( format '_> 20.5e', 123456789.123456789    ), '_________ 1.23457e+8'\n    T?.eq ( format '_> 20.5f', 123456789.123456789    ), '____ 123456789.12346'\n    T?.eq ( format '_> 20.5g', 123456789.123456789    ), '__________ 1.2346e+8'\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@guy_fmt_chat_gpt_generated = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                       = require H.guy_path\n  { format\n    new_formatter,        } = GUY.fmt\n  #.........................................................................................................\n  T?.eq ( format '.2f',      3.14159       ), '3.14'\n  T?.eq ( format '>10s',     \"test\"        ), '      test'\n  T?.eq ( format '<10s',     \"test\"        ), 'test      '\n  T?.eq ( format '^10s',     \"test\"        ), '   test   '\n  T?.eq ( format '>10.3f',   1.23456       ), '     1.235'\n  T?.eq ( format '^10s',     \"hi\"          ), '    hi    '\n  T?.eq ( format ' >10s',    \"test\"        ), '      test'\n  T?.eq ( format ' <10s',    \"test\"        ), 'test      '\n  T?.eq ( format ' ^10s',    \"test\"        ), '   test   '\n  T?.eq ( format ' >10.3f',  1.23456       ), '     1.235'\n  T?.eq ( format ' ^10s',    \"hi\"          ), '    hi    '\n  T?.eq ( format '04d',      42            ), '0042'\n  T?.eq ( format '+d',       42            ), '+42'\n  T?.eq ( format '-d',       -42           ), '-42'\n  T?.eq ( format 'x',        255           ), 'ff'\n  T?.eq ( format '#x',       255           ), '0xff'\n  T?.eq ( format '#o',       8             ), '0o10'\n  T?.eq ( format '#b',       5             ), '0b101'\n  T?.eq ( format 'e',        12345.6789    ), '1.234568e+4'\n  T?.eq ( format ',.2f',     1234567.891   ), '1,234,567.89'\n  T?.eq ( format '%',        0.85          ), '85.000000%'\n  T?.eq ( format '.1%',      0.85          ), '85.0%'\n  T?.eq ( format '.0%',      0.12345       ), '12%'\n  T?.eq ( format '.0%',      0.125         ), '13%'\n  #.........................................................................................................\n  # T?.eq ( format '!s',     true            ), 'true'\n  # T?.eq ( format '!r',     true            ), 'true'\n  # T?.eq ( format 'X',      255              ), 'FF'\n  # T?.eq ( format 'e',      12345.6789       ), '1.234568e+04'\n  return done?()\n\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @guy_str_pluralize = ( T, done ) ->\n#   # T?.halt_on_error()\n#   GUY     = require H.guy_path\n#   probes_and_matchers = [\n#     [ '',               '',                     ]\n#     [ 'a',              'as',                   ]\n#     [ 'y',              'ys',                   ]\n#     [ 'aye',            'ayes',                 ]\n#     [ 'why',            'whies',                ]\n#     [ 'leaf',           'leafs',                ]\n#     [ 'potato',         'potatos',              ]\n#     [ 'fix',            'fixes',                ]\n#     [ 'bun',            'buns',                 ]\n#     [ 'regex',          'regexes',              ]\n#     [ 'regexes',        'regexeses',            ]\n#     [ 'property',       'properties',           ]\n#     [ 'PROPERTY',       'PROPERTIES',           ]\n#     [ 'propertY',       'propertIES',           ]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       result = GUY.str.pluralize probe\n#       resolve result\n#   #.........................................................................................................\n#   return done?()\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @guy_str_escape_for_regex()\n  test @\n\n\n\n"
  ]
}