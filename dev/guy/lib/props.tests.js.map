{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/props.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/PROPS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nH                         = require './helpers'\n{ freeze }                = require 'letsfreezethat'\ntypes                     = new ( require '../../../apps/intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.props.pick_with_fallback()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ { a: 1, b: 2, c: 3, },        null, [ 'a', 'c',     ], ], { a: 1, c: 3, } ]\n    [ [ { foo: 'bar', baz: 'gnu', },  null, [ 'foo', 'wat', ], ], { foo: 'bar', wat: null } ]\n    [ [ { foo: 'bar', baz: 'gnu', },  42,   [ 'foo', 'wat', ], ], { foo: 'bar', wat: 42 } ]\n    [ [ { foo: null,  baz: 'gnu', },  42,   [ 'foo', 'wat', ], ], { foo: null, wat: 42 } ]\n    [ [ {},  undefined, undefined, ], {} ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d\n        fallback\n        keys      ] = probe\n      # debug '^443^', { d, fallback, keys, }\n      d_copy        = { d..., }\n      if keys?\n        result        = guy.props.pick_with_fallback d, fallback, keys...\n      else\n        result        = guy.props.pick_with_fallback d, fallback\n      T?.eq d, d_copy\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.props.pluck_with_fallback()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ { a: 1, b: 2, c: 3, },        null,  [ 'a', 'c',     ], { b: 2, },       ], { a: 1, c: 3, },           ]\n    [ [ { foo: 'bar', baz: 'gnu', },  null,  [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: 'bar', wat: null }, ]\n    [ [ { foo: 'bar', baz: 'gnu', },  42,    [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: 'bar', wat: 42 },   ]\n    [ [ { foo: null,  baz: 'gnu', },  42,    [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: null, wat: 42 },    ]\n    [ [ {},                           null,  undefined,         {},              ], {},                        ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d\n        fallback\n        keys\n        d_changed ] = probe\n      d_copy        = { d..., }\n      if keys?\n        result        = guy.props.pluck_with_fallback d, fallback, keys...\n      else\n        result        = guy.props.pluck_with_fallback d, fallback\n      T?.eq d, d_changed\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.props.nullify_undefined()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ {}, {} ]\n    [ null, {} ]\n    [ undefined, {} ]\n    [ { a: 1, b: 2, c: 3, }, { a: 1, b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: 3, }, { a: null, b: 2, c: 3, } ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d             = probe\n      d_copy        = { d..., }\n      result        = guy.props.nullify_undefined d\n      T?.eq d, d_copy if d?\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.props.omit_nullish()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ {}, {} ]\n    [ null, {} ]\n    [ undefined, {} ]\n    [ { a: 1, b: 2, c: 3, }, { a: 1, b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: 3, }, { b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: null, }, { b: 2, } ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d             = probe\n      d_copy        = { d..., }\n      result        = guy.props.omit_nullish d\n      T?.eq d, d_copy if d?\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.props.def(), .hide()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  do =>\n    x = {}\n    guy.props.def   x, 'foo', { enumerable: false, value: 42, }\n    T?.eq ( rpr x ), '{}'\n    T?.eq ( Object.getOwnPropertyDescriptor x, 'foo' ), { value: 42, writable: false, enumerable: false, configurable: false }\n  do =>\n    x = {}\n    guy.props.hide  x, 'foo', 42\n    T?.eq ( rpr x ), '{}'\n    T?.eq ( Object.getOwnPropertyDescriptor x, 'foo' ), { value: 42, writable: false, enumerable: false, configurable: false }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.props.Strict_owner 1\" ] = ( T, done ) ->\n  GUY     = require H.guy_path\n  CAT     = require '../../../apps/multimix/lib/cataloguing'\n  #.........................................................................................................\n  class X extends GUY.props.Strict_owner\n    prop_on_instance_1: 'prop_on_instance_1'\n    constructor: ->\n      super()\n      @prop_on_instance_2 = 'prop_on_instance_2'\n      return undefined\n  #.........................................................................................................\n  x = new X()\n  x.prop_on_instance_3 = 'prop_on_instance_3'\n  T?.eq x.prop_on_instance_1, 'prop_on_instance_1'\n  T?.eq x.prop_on_instance_2, 'prop_on_instance_2'\n  T?.eq x.prop_on_instance_3, 'prop_on_instance_3'\n  #.........................................................................................................\n  T?.eq ( x.has.prop_on_instance_1      ), true\n  T?.eq ( x.has.prop_on_instance_2      ), true\n  T?.eq ( x.has.prop_on_instance_3      ), true\n  T?.eq ( x.has.foobar                  ), false\n  T?.eq ( x.has[ Symbol.toStringTag ]   ), true\n  #.........................................................................................................\n  T?.eq ( x.has 'prop_on_instance_1'    ), true\n  T?.eq ( x.has 'prop_on_instance_2'    ), true\n  T?.eq ( x.has 'prop_on_instance_3'    ), true\n  T?.eq ( x.has 'foobar'                ), false\n  T?.eq ( x.has Symbol.toStringTag      ), true\n  #.........................................................................................................\n  T?.eq ( type_of x.has ), 'object'\n  T?.eq ( type_of x.get ), 'function'\n  urge '^067-1^', x\n  urge '^067-2^', ( CAT.all_keys_of x ).sort().join '\\n'\n  urge '^067-3^', x.has\n  urge '^067-4^', x.has 'foo'\n  urge '^067-5^', x.has 'prop_on_instance_1'\n  urge '^067-6^', x.has.foo\n  urge '^067-7^', x.get\n  try urge x.bar catch error then warn CND.reverse error.message\n  T?.throws /X instance does not have property 'bar'/, => x.bar\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.props.Strict_owner 2\" ] = ( T, done ) ->\n  GUY     = require H.guy_path\n  CAT     = require '../../../apps/multimix/lib/cataloguing'\n  #.........................................................................................................\n  class X extends GUY.props.Strict_owner\n    prop_on_instance_1: 'prop_on_instance_1'\n    get: 42\n    has: 108\n  #.........................................................................................................\n  x = new X()\n  T?.eq x.get, 42\n  T?.eq x.has, 108\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # @[ \"GUY.props.Strict_owner 1\" ]()\n  # test @[ \"GUY.props.Strict_owner 1\" ]\n  @[ \"GUY.props.Strict_owner 2\" ]()\n  test @[ \"GUY.props.Strict_owner 2\" ]\n\n\n"
  ]
}