{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/src.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/SRC'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\n# PATH                      = require 'path'\n# FS                        = require 'fs'\n# { freeze }                = require 'letsfreezethat'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n#-----------------------------------------------------------------------------------------------------------\nconvert_to_plain_objects = ( ast ) ->\n  if types.isa.object ast\n    R = { ast..., }\n    R[ key ]  = convert_to_plain_objects value for key, value of R\n    return R\n  if types.isa.list ast\n    R         = [ ast..., ]\n    R[ idx ]  = convert_to_plain_objects value for value, idx in R\n    return R\n  return ast\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.src.parse()\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY     = require H.guy_path\n  do =>\n    result = convert_to_plain_objects GUY.src.parse text: \"42\"\n    debug '^975-1^', result\n    T?.eq result, { type: 'Program', start: 0, end: 2, body: [ { type: 'ExpressionStatement', start: 0, end: 2, expression: { type: 'Literal', start: 0, end: 2, value: 42, raw: '42' } } ], sourceType: 'script' }\n  do =>\n    result = convert_to_plain_objects GUY.src.parse text: \"var x = 'helo world';\"\n    debug '^975-2^', result\n    T?.eq result, { type: 'Program', start: 0, end: 21, body: [ { type: 'VariableDeclaration', start: 0, end: 21, kind: 'var', declarations: [ { type: 'VariableDeclarator', start: 4, end: 20, id: { type: 'Identifier', start: 4, end: 5, name: 'x' }, init: { type: 'Literal', start: 8, end: 20, value: 'helo world', raw: \"'helo world'\" } } ] } ], sourceType: 'script' }\n  do =>\n    f       = ( x ) -> 42\n    debug '^975-3^', f.toString()\n    result  = convert_to_plain_objects GUY.src.parse { function: f, use: 'loose', }\n    debug '^975-3^', result\n    T?.eq result, { type: 'Program', start: 0, end: 26, body: [ { type: 'FunctionDeclaration', start: 0, end: 26, id: { type: 'Identifier', start: 8, end: 8, name: '✖' }, params: [ { type: 'Identifier', start: 9, end: 10, name: 'x' } ], generator: false, expression: false, async: false, body: { type: 'BlockStatement', start: 12, end: 26, body: [ { type: 'ReturnStatement', start: 14, end: 24, argument: { type: 'Literal', start: 21, end: 23, value: 42, raw: '42' } } ] } } ], sourceType: 'script' }\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.src.parse() accepts `fallback` argument, otherwise errors where appropriate\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ { text: \"let x = 1 + 1;\", }, { type: 'Program', start: 0, end: 14, body: [ { type: 'VariableDeclaration', start: 0, end: 14, kind: 'let', declarations: [ { type: 'VariableDeclarator', start: 4, end: 13, id: { type: 'Identifier', start: 4, end: 5, name: 'x' }, init: { type: 'BinaryExpression', start: 8, end: 13, left: { type: 'Literal', start: 8, end: 9, value: 1, raw: '1' }, operator: '+', right: { type: 'Literal', start: 12, end: 13, value: 1, raw: '1' } } } ] } ], sourceType: 'script' }, ]\n    [ { text: \"let x = 1 ^^^^^ 1;\", use: 'strict' }, null, 'Unexpected token', ]\n    [ { text: \"let x = 1 ^^^^^ 1;\", use: 'strict,loose' }, { type: 'Program', start: 0, end: 18, body: [ { type: 'VariableDeclaration', start: 0, end: 18, kind: 'let', declarations: [ { type: 'VariableDeclarator', start: 4, end: 17, id: { type: 'Identifier', start: 4, end: 5, name: 'x' }, init: { type: 'BinaryExpression', start: 8, end: 17, left: { type: 'BinaryExpression', start: 8, end: 14, left: { type: 'BinaryExpression', start: 8, end: 13, left: { type: 'BinaryExpression', start: 8, end: 12, left: { type: 'BinaryExpression', start: 8, end: 11, left: { type: 'Literal', start: 8, end: 9, value: 1, raw: '1' }, operator: '^', right: { type: 'Identifier', start: 11, end: 11, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 12, end: 12, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 13, end: 13, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 14, end: 14, name: '✖' } }, operator: '^', right: { type: 'Literal', start: 16, end: 17, value: 1, raw: '1' } } } ] } ], sourceType: 'script' }, ]\n    [ { text: \"let x = 1 ^^^^^ 1;\", use: 'loose' }, { type: 'Program', start: 0, end: 18, body: [ { type: 'VariableDeclaration', start: 0, end: 18, kind: 'let', declarations: [ { type: 'VariableDeclarator', start: 4, end: 17, id: { type: 'Identifier', start: 4, end: 5, name: 'x' }, init: { type: 'BinaryExpression', start: 8, end: 17, left: { type: 'BinaryExpression', start: 8, end: 14, left: { type: 'BinaryExpression', start: 8, end: 13, left: { type: 'BinaryExpression', start: 8, end: 12, left: { type: 'BinaryExpression', start: 8, end: 11, left: { type: 'Literal', start: 8, end: 9, value: 1, raw: '1' }, operator: '^', right: { type: 'Identifier', start: 11, end: 11, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 12, end: 12, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 13, end: 13, name: '✖' } }, operator: '^', right: { type: 'Identifier', start: 14, end: 14, name: '✖' } }, operator: '^', right: { type: 'Literal', start: 16, end: 17, value: 1, raw: '1' } } } ] } ], sourceType: 'script' }, ]\n    [ { text: \"let x = 1 ^^^^^ 1;\", use: 'strict', fallback: null, }, null, ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result  = GUY.src.parse probe\n      # debug '^34234^', GUY.src._generate result\n      result  = convert_to_plain_objects result\n      resolve result\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.src.slug_node_from_simple_function()\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY     = require H.guy_path\n  f3      =  ( x ) ->\n    return true if x > 0\n    return false if x < 0\n    return null\n  probes_and_matchers = [\n    [ { function: ( -> ), },                                                                    { type: 'BlockStatement', start: 11, end: 13, body: [] }, ]\n    [ { function: ( ( x ) -> 42 ), },                                                           { type: 'ReturnStatement', start: 14, end: 24, argument: { type: 'Literal', start: 21, end: 23, value: 42, raw: '42' } }, ]\n    [ { function: ( ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x ) ), },  { type: 'ReturnStatement', start: 14, end: 88, argument: { type: 'LogicalExpression', start: 21, end: 87, left: { type: 'LogicalExpression', start: 21, end: 56, left: { type: 'BinaryExpression', start: 22, end: 31, left: { type: 'Identifier', start: 22, end: 23, name: 'x' }, operator: '==', right: { type: 'Literal', start: 27, end: 31, value: null, raw: 'null' } }, operator: '||', right: { type: 'CallExpression', start: 37, end: 55, callee: { type: 'MemberExpression', start: 37, end: 52, object: { type: 'MemberExpression', start: 37, end: 45, object: { type: 'ThisExpression', start: 37, end: 41 }, property: { type: 'Identifier', start: 42, end: 45, name: 'isa' }, computed: false, optional: false }, property: { type: 'Identifier', start: 46, end: 52, name: 'object' }, computed: false, optional: false }, arguments: [ { type: 'Identifier', start: 53, end: 54, name: 'x' } ], optional: false } }, operator: '||', right: { type: 'CallExpression', start: 61, end: 86, callee: { type: 'MemberExpression', start: 61, end: 83, object: { type: 'MemberExpression', start: 61, end: 78, object: { type: 'MemberExpression', start: 61, end: 69, object: { type: 'ThisExpression', start: 61, end: 65 }, property: { type: 'Identifier', start: 66, end: 69, name: 'isa' }, computed: false, optional: false }, property: { type: 'Identifier', start: 70, end: 78, name: 'nonempty' }, computed: false, optional: false }, property: { type: 'Identifier', start: 79, end: 83, name: 'text' }, computed: false, optional: false }, arguments: [ { type: 'Identifier', start: 84, end: 85, name: 'x' } ], optional: false } } }, ]\n    [ { function: ( `function ( x ) { 42; }` ), },                                              { type: 'BlockStatement', start: 15, end: 22, body: [ { type: 'ExpressionStatement', start: 17, end: 20, expression: { type: 'Literal', start: 17, end: 19, value: 42, raw: '42' } } ] }, ]\n    [ { function: ( `function ( x ) { return 42; }` ), },                                       { type: 'ReturnStatement', start: 17, end: 27, argument: { type: 'Literal', start: 24, end: 26, value: 42, raw: '42' } }, ]\n    [ { function: ( ( x ) -> if x? then true else false ), },                                   { type: 'BlockStatement', start: 12, end: 70, body: [ { type: 'IfStatement', start: 14, end: 68, test: { type: 'BinaryExpression', start: 18, end: 27, left: { type: 'Identifier', start: 18, end: 19, name: 'x' }, operator: '!=', right: { type: 'Literal', start: 23, end: 27, value: null, raw: 'null' } }, consequent: { type: 'BlockStatement', start: 29, end: 45, body: [ { type: 'ReturnStatement', start: 31, end: 43, argument: { type: 'Literal', start: 38, end: 42, value: true, raw: 'true' } } ] }, alternate: { type: 'BlockStatement', start: 51, end: 68, body: [ { type: 'ReturnStatement', start: 53, end: 66, argument: { type: 'Literal', start: 60, end: 65, value: false, raw: 'false' } } ] } } ] }, ]\n    [ { function: ( ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x ) ), },  { type: 'ReturnStatement', start: 14, end: 88, argument: { type: 'LogicalExpression', start: 21, end: 87, left: { type: 'LogicalExpression', start: 21, end: 56, left: { type: 'BinaryExpression', start: 22, end: 31, left: { type: 'Identifier', start: 22, end: 23, name: 'x' }, operator: '==', right: { type: 'Literal', start: 27, end: 31, value: null, raw: 'null' } }, operator: '||', right: { type: 'CallExpression', start: 37, end: 55, callee: { type: 'MemberExpression', start: 37, end: 52, object: { type: 'MemberExpression', start: 37, end: 45, object: { type: 'ThisExpression', start: 37, end: 41 }, property: { type: 'Identifier', start: 42, end: 45, name: 'isa' }, computed: false, optional: false }, property: { type: 'Identifier', start: 46, end: 52, name: 'object' }, computed: false, optional: false }, arguments: [ { type: 'Identifier', start: 53, end: 54, name: 'x' } ], optional: false } }, operator: '||', right: { type: 'CallExpression', start: 61, end: 86, callee: { type: 'MemberExpression', start: 61, end: 83, object: { type: 'MemberExpression', start: 61, end: 78, object: { type: 'MemberExpression', start: 61, end: 69, object: { type: 'ThisExpression', start: 61, end: 65 }, property: { type: 'Identifier', start: 66, end: 69, name: 'isa' }, computed: false, optional: false }, property: { type: 'Identifier', start: 70, end: 78, name: 'nonempty' }, computed: false, optional: false }, property: { type: 'Identifier', start: 79, end: 83, name: 'text' }, computed: false, optional: false }, arguments: [ { type: 'Identifier', start: 84, end: 85, name: 'x' } ], optional: false } } }, ]\n    [ { function: f3, },                                                                        { type: 'BlockStatement', start: 12, end: 85, body: [ { type: 'IfStatement', start: 14, end: 41, test: { type: 'BinaryExpression', start: 18, end: 23, left: { type: 'Identifier', start: 18, end: 19, name: 'x' }, operator: '>', right: { type: 'Literal', start: 22, end: 23, value: 0, raw: '0' } }, consequent: { type: 'BlockStatement', start: 25, end: 41, body: [ { type: 'ReturnStatement', start: 27, end: 39, argument: { type: 'Literal', start: 34, end: 38, value: true, raw: 'true' } } ] }, alternate: null }, { type: 'IfStatement', start: 42, end: 70, test: { type: 'BinaryExpression', start: 46, end: 51, left: { type: 'Identifier', start: 46, end: 47, name: 'x' }, operator: '<', right: { type: 'Literal', start: 50, end: 51, value: 0, raw: '0' } }, consequent: { type: 'BlockStatement', start: 53, end: 70, body: [ { type: 'ReturnStatement', start: 55, end: 68, argument: { type: 'Literal', start: 62, end: 67, value: false, raw: 'false' } } ] }, alternate: null }, { type: 'ReturnStatement', start: 71, end: 83, argument: { type: 'Literal', start: 78, end: 82, value: null, raw: 'null' } } ] }, ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    # result  = GUY.src.slug_node_from_simple_function probe\n    # result  = convert_to_plain_objects result\n    # urge '^33424^', result\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result  = GUY.src.slug_node_from_simple_function probe\n      result  = convert_to_plain_objects result\n      urge '^33424^', result\n      resolve result\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.src.slug_from_simple_function()\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY     = require H.guy_path\n  f3      =  ( x ) ->\n    return true if x > 0\n    return false if x < 0\n    return null\n  probes_and_matchers = [\n    [ { function: ( -> ), },                                                                    '', ]\n    [ { function: ( ( x ) -> x %% 3 is 0 ), },                                                  'modulo(x, 3) === 0', ]\n    [ { function: ( ( x ) -> 42 ), },                                                           '42', ]\n    [ { function: ( ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x ) ), },  'x == null || this.isa.object(x) || this.isa.nonempty.text(x)', ]\n    [ { function: ( `function ( x ) { 42; }` ), },                                              '42;', ]\n    [ { function: ( `function ( x ) { return 42; }` ), },                                       '42', ]\n    [ { function: ( ( x ) -> if x? then true else false ), },                                   'if (x != null) { return true; } else { return false; }', ]\n    [ { function: ( ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x ) ), },  'x == null || this.isa.object(x) || this.isa.nonempty.text(x)', ]\n    [ { function: f3, },                                                                        'if (x > 0) { return true; } if (x < 0) { return false; } return null;', ]\n    [ { text: 'let x = 42;' }, 'let x = 42;', null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result  = GUY.src.slug_from_simple_function probe\n      # urge '^33424^', rpr result\n      resolve result\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"GUY.src.slug_from_simple_function() for bound functions\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY     = require H.guy_path\n  f3      = ( x ) -> 42\n  f4      = f3.bind null\n  T?.throws /unable to parse native code/, -> GUY.src.slug_from_simple_function { function: f4, }\n  result  = GUY.src.slug_from_simple_function { function: f4, fallback: null, }\n  T?.eq result, null\n  # urge '^33424^', rpr result\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_return_clauses = ->\n  GUY       = require H.guy_path\n  functions = [\n    ( x ) -> 42\n    ( x ) -> g 42\n    ( x ) -> if x > 0 then g 42 else g 108\n    ]\n  for f in functions\n    ast = GUY.src.get_first_return_clause_node f\n    info convert_to_plain_objects ast\n    urge GUY.src.ASTRING.generate ast\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_acorn_walk = ->\n  ### Count return statements; if more than one, return first BlockStatement, otherwise `argument` property\n  of first and only ReturnStatement ###\n  GUY     = require H.guy_path\n  acorn   = require 'acorn'\n  walk    = require 'acorn-walk'\n  # ast     = acorn.parse \"let x = 10;\", { ecmaVersion: '2022', }\n  # ast     = GUY.src.parse function: ( x ) -> if x? then true else false\n  ast     = GUY.src.parse function: ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x )\n  # debug '^24324^', ast\n  walk.simple ast,\n    Literal: ( node ) ->\n      source = GUY.src.ASTRING.generate node\n      info \"Found a literal: #{source}\"\n    ReturnStatement: ( node ) ->\n      source = GUY.src.ASTRING.generate node\n      urge \"Found a return statement: #{source}\"\n    BlockStatement: ( node ) ->\n      # debug node\n      source = GUY.src.ASTRING.generate node\n      source = source.trim().replace /\\s*\\n\\s*/g, ' '\n      info \"Found a block statement: #{source}\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_acorn_walk = ->\n  ### Count return statements; if more than one, return first BlockStatement, otherwise `argument` property\n  of first and only ReturnStatement ###\n  GUY       = require H.guy_path\n  f3        =  ( x ) ->\n    return true if x > 0\n    return false if x < 0\n    return null\n  cfgs      = [\n    # { function: ( `function ( x ) { 42; }` ), }\n    # { function: ( `function ( x ) { return 42; }` ), }\n    # { function: ( ( x ) -> if x? then true else false ), }\n    # { function: ( ( x ) -> ( not x? ) or ( @isa.object x ) or ( @isa.nonempty.text x ) ), }\n    # { function: f3, }\n    { text: 'let x ^^^ 42;', use: 'strict', fallback: 'NOTGOOD', }\n    # { text: 'let x ^^^ 42;', use: 'strict', }\n    { text: 'let x = 42;', use: 'strict', }\n    { text: 'let x = 42;', }\n    ]\n  for cfg in cfgs\n    whisper '————————————————————————————————————————————————————'\n    urge '^5345^', ( cfg.function ? cfg.text ).toString()\n    info '^5345^', rpr GUY.src.slug_from_simple_function cfg\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_parse_use_and_fallback = ->\n  GUY           = require H.guy_path\n  error_literal = { type: 'Literal', start: 0, end: 7, value: 'ERROR', raw: \"'ERROR'\" }\n  debug '^334^', GUY.src.parse { use: 'strict',       text: \"'ERROR'\", }\n  debug '^334^', result = GUY.src.parse { use: 'strict',       text: 'let x = 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  debug '^334^', result = GUY.src.parse { use: 'strict,loose', text: 'let x = 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  debug '^334^', result = GUY.src.parse { use: 'loose',        text: 'let x = 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  debug '^334^', result = GUY.src.parse { use: 'strict',       text: 'let x ^^^ 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  debug '^334^', result = GUY.src.parse { use: 'strict,loose', text: 'let x ^^^ 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  debug '^334^', result = GUY.src.parse { use: 'loose',        text: 'let x ^^^ 1;', fallback: error_literal, }\n  info rpr GUY.src._generate result\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_slug_for_inadvertent_multiline_function = ->\n  GUY           = require H.guy_path\n  div3int       = ( x ) -> x %% 3 is 0\n  ```\n  const div3int_js = {\n          function: (function(x) {\n            return modulo(x,\n        3) === 0;\n          })\n        };\n  ```\n  whisper '————————————————————————————————————————————————————'\n  info '^353^', div3int.toString()\n  urge '^353^', rpr GUY.src.slug_from_simple_function { function: div3int, }\n  whisper '————————————————————————————————————————————————————'\n  info '^353^', div3int_js.function.toString()\n  urge '^353^', rpr GUY.src.slug_from_simple_function { function: div3int_js.function, }\n  whisper '————————————————————————————————————————————————————'\n  info '^353^', text = div3int_js.function.toString().replace /\\s*\\n\\s*/g, ' '\n  urge '^353^', rpr GUY.src.slug_from_simple_function { text, }\n  whisper '————————————————————————————————————————————————————'\n  return null\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @[ \"GUY.src.slug_from_simple_function() for bound functions\" ]\n  # @[ \"guy.str.SQL tag function\" ]()\n  # demo_return_clauses()\n  # test @[ \"GUY.src.parse() accepts `fallback` argument, otherwise errors where appropriate\" ]\n  # @[ \"GUY.src.parse()\" ]()\n  # test @[ \"GUY.src.parse()\" ]\n  # demo_parse_use_and_fallback()\n  # demo_acorn_walk()\n  # test @[ \"GUY.src.slug_node_from_simple_function()\" ]\n  test @[ \"GUY.src.slug_from_simple_function()\" ]\n  # demo_slug_for_inadvertent_multiline_function()\n"
  ]
}