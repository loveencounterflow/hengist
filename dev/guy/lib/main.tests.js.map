{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"demo\" ] = ( T, done ) ->\n  { createRequire, }  = require 'module'\n  guy_realpath        = require.resolve H.guy_path\n  guy_realpath        = PATH.join guy_realpath, 'whatever' ### H.guy_path points to pkg folder, must be one element deeper ###\n  debug '^7665^', { guy_realpath, }\n  rq                  = createRequire guy_realpath\n  guy                 = require H.guy_path\n  urge '^83443^', H.guy_path\n  help '^83443^', rq.resolve 'cnd'\n  help '^83443^', rq.resolve 'intertype'\n  help '^83443^', rq.resolve 'deasync'\n  # help '^83443^', rq.resolve 'frob'\n  # help '^83443^', rq.resolve 'steampipes'\n  debug '340^', guy\n  debug '340^', guy.nowait\n  debug '340^', guy\n  debug '340^', guy.nowait\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"nowait\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  guy = require H.guy_path\n  result = []\n  result.push 'nw1'\n  #.........................................................................................................\n  frob_async = ( P... ) -> new Promise ( resolve ) =>\n    T?.eq P, [ 1, 2, 3, ]\n    result.push 'fa1'\n    guy.async.after 0.25, -> warn '^455-1^', \"frob_async done\"; result.push 'fa2'; resolve 'fa3'\n  #.........................................................................................................\n  frob_sync = guy.nowait.for_awaitable frob_async\n  # frob_sync = frob_async\n  result.push frob_sync 1, 2, 3\n  result.push 'nw2'\n  info '^455-3^', \"call to frob_sync done\"\n  debug '^455-x^', result\n  T?.eq result, [ 'nw1', 'fa1', 'fa2', 'fa3', 'nw2' ]\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"await with async steampipes\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  guy         = require H.guy_path\n  SP          = require 'steampipes'\n  { $\n    $async\n    $show\n    $drain }  = SP.export()\n  trace       = []\n  trace.push 'm1'\n  #.........................................................................................................\n  f_async = => new Promise ( resolve ) =>\n    source    = [ 1 .. 3 ]\n    pipeline  = []\n    pipeline.push source\n    pipeline.push $async ( d, send, done ) =>\n      trace.push 'fa1'\n      guy.async.after 0.25, =>\n        trace.push 'fa2'\n        send d ** 2\n        done()\n    pipeline.push $show()\n    pipeline.push $drain ( collector ) ->\n      debug '^4576^', collector\n      resolve collector\n    SP.pull pipeline...\n  #.........................................................................................................\n  trace.push 'm2'\n  result = await f_async()\n  trace.push 'm3'\n  info '^8876^', trace\n  T?.eq result, [ 1, 4, 9 ]\n  T?.eq trace, [ 'm1', 'm2', 'fa1', 'fa2', 'fa1', 'fa2', 'fa1', 'fa2', 'm3' ]\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_____ HANGS ________________ nowait with async steampipes\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  guy         = require H.guy_path\n  SP          = require 'steampipes'\n  { $\n    $async\n    $show\n    $drain }  = SP.export()\n  trace       = []\n  trace.push 'm1'\n  #.........................................................................................................\n  f_async = => new Promise ( resolve ) =>\n    source    = [ 1 .. 3 ]\n    pipeline  = []\n    pipeline.push source\n    pipeline.push $async ( d, send, done ) =>\n      trace.push 'fa1'\n      guy.async.after 0.25, =>\n        trace.push 'fa2'\n        send d ** 2\n        done()\n    pipeline.push $show()\n    pipeline.push $drain ( collector ) ->\n      debug '^4576^', collector\n      resolve collector\n    SP.pull pipeline...\n  #.........................................................................................................\n  trace.push 'm2'\n  result = ( guy.nowait.for_awaitable f_async )()\n  trace.push 'm3'\n  info '^8876^', trace\n  T?.eq result, [ 1, 4, 9 ]\n  T?.eq trace, [ 'm1', 'm2', 'fa1', 'fa2', 'fa1', 'fa2', 'fa1', 'fa2', 'm3' ]\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"configurator\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  guy         = require H.guy_path\n  #.........................................................................................................\n  ### minimal, must work w/out any specials present ###\n  do =>\n    debug '^334-1^'\n    T?.eq ( type_of guy.cfg ), 'object'\n    T?.eq ( type_of guy.cfg.configure_with_types ), 'function'\n    #.......................................................................................................\n    class Ex\n      constructor: ( cfg ) ->\n        debug '^334-2^', cfg\n        guy.cfg.configure_with_types @, cfg\n    #.......................................................................................................\n    ex = new Ex { foo: 42, }\n    debug '^334-3^', ex\n    debug '^334-4^', ex.cfg\n    debug '^334-5^', ex.constructor.C\n    debug '^334-6^', ex.constructor.C?.defaults\n    T?.eq ( type_of ex.constructor.C ), 'undefined'\n    T?.eq ( type_of ex.constructor.C?.defaults ), 'undefined'\n    return null\n  #.........................................................................................................\n  do =>\n    ### more complete example ###\n    debug '^334-7^'\n    #.......................................................................................................\n    class Ex\n      @C: guy.lft.freeze\n        foo:      'foo-constant'\n        bar:      'bar-constant'\n        defaults:\n          constructor_cfg:\n            foo:      'foo-default'\n            bar:      'bar-default'\n      @declare_types: ( self ) ->\n        T?.eq ( type_of self ), 'ex'\n        T?.eq ( type_of self.cfg ), 'object'\n        # T?.ok Object.isFrozen self.cfg\n        debug '^334-8^', self.cfg\n        self.types.declare 'constructor_cfg', tests:\n          \"@isa.object x\":                    ( x ) -> @isa.object x\n          \"x.foo in [ 'foo-default', 42, ]\":  ( x ) -> x.foo in [ 'foo-default', 42, ]\n          \"x.bar is 'bar-default'\":           ( x ) -> x.bar is 'bar-default'\n        self.types.validate.constructor_cfg self.cfg\n        # debug '^334-9^', types\n        return null\n      constructor: ( cfg ) ->\n        guy.cfg.configure_with_types @, cfg\n        debug '^334-10^', @cfg\n        debug '^334-11^', ( type_of @cfg   ), 'object'\n        debug '^334-12^', ( type_of @types ), 'object'\n        T?.ok Object.isFrozen @cfg\n        T?.eq @cfg, { foo: 42, bar: 'bar-default' }\n        return undefined\n    #.......................................................................................................\n    ex = new Ex { foo: 42, }\n    debug '^334-13^', ex\n    debug '^334-14^', ex.cfg\n    debug '^334-15^', ex.constructor.C\n    debug '^334-16^', ex.constructor.C?.defaults\n    T?.eq ( type_of ex.constructor.C ), 'object'\n    T?.eq ( type_of ex.constructor.C?.defaults ), 'object'\n    # configure_with_types\n    return null\n  #.........................................................................................................\n  do =>\n    ### example with module-level types ###\n    debug '^334-17^'\n    #.......................................................................................................\n    mytypes = new ( require 'intertype' ).Intertype()\n    mytypes.declare 'constructor_cfg', tests:\n      \"@isa.object x\":                            ( x ) -> @isa.object x\n      \"x.foo in [ 'foo-default', 42, 123456, ]\":  ( x ) -> x.foo in [ 'foo-default', 42, 123456, ]\n      \"@isa.nonempty_text x.bar\":                 ( x ) -> @isa.nonempty_text x.bar\n    mytypes.declare \"rosy_number\", tests:\n      \"@isa.integer x\":   ( x ) -> @isa.integer x\n      \"123 < x < 456\":    ( x ) -> 123 < x < 456\n    #.......................................................................................................\n    class Ex\n      @C: guy.lft.freeze\n        foo:      'foo-constant'\n        bar:      'bar-constant'\n        defaults:\n          constructor_cfg:\n            foo:      'foo-default'\n            bar:      'bar-default'\n      @declare_types: ( self ) ->\n        T?.eq ( type_of self ), 'ex'\n        T?.eq ( type_of self.cfg ), 'object'\n        # T?.ok Object.isFrozen self.cfg\n        T?.ok self.types is mytypes\n        self.types.validate.constructor_cfg self.cfg\n        self.types.validate.rosy_number 200\n        T?.ok not self.types.isa.rosy_number 500\n        return null\n      constructor: ( cfg ) ->\n        guy.cfg.configure_with_types @, cfg, mytypes\n        return undefined\n    #.......................................................................................................\n    ex1 = new Ex { foo: 42, }\n    T?.eq ( type_of ex1.constructor.C ), 'object'\n    T?.eq ex1.cfg, { foo: 42, bar: 'bar-default' }\n    T?.eq ( type_of ex1.constructor.C?.defaults ), 'object'\n    ex2 = new Ex { foo: 123456, bar: 'mybar' }\n    T?.eq ex2.cfg, { foo: 123456, bar: 'mybar' }\n    T?.ok ex1.types is ex2.types\n    # configure_with_types\n    return null\n  #.........................................................................................................\n  done?()\n\n\n#===========================================================================================================\n# OBJ\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.obj.pick_with_fallback()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ { a: 1, b: 2, c: 3, },        null, [ 'a', 'c',     ], ], { a: 1, c: 3, } ]\n    [ [ { foo: 'bar', baz: 'gnu', },  null, [ 'foo', 'wat', ], ], { foo: 'bar', wat: null } ]\n    [ [ { foo: 'bar', baz: 'gnu', },  42,   [ 'foo', 'wat', ], ], { foo: 'bar', wat: 42 } ]\n    [ [ { foo: null,  baz: 'gnu', },  42,   [ 'foo', 'wat', ], ], { foo: null, wat: 42 } ]\n    [ [ {},  undefined, undefined, ], {} ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d\n        fallback\n        keys      ] = probe\n      # debug '^443^', { d, fallback, keys, }\n      d_copy        = { d..., }\n      if keys?\n        result        = guy.obj.pick_with_fallback d, fallback, keys...\n      else\n        result        = guy.obj.pick_with_fallback d, fallback\n      T?.eq d, d_copy\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.obj.pluck_with_fallback()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ { a: 1, b: 2, c: 3, },        null,  [ 'a', 'c',     ], { b: 2, },       ], { a: 1, c: 3, },           ]\n    [ [ { foo: 'bar', baz: 'gnu', },  null,  [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: 'bar', wat: null }, ]\n    [ [ { foo: 'bar', baz: 'gnu', },  42,    [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: 'bar', wat: 42 },   ]\n    [ [ { foo: null,  baz: 'gnu', },  42,    [ 'foo', 'wat', ], { baz: 'gnu', }, ], { foo: null, wat: 42 },    ]\n    [ [ {},                           null,  undefined,         {},              ], {},                        ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d\n        fallback\n        keys\n        d_changed ] = probe\n      d_copy        = { d..., }\n      if keys?\n        result        = guy.obj.pluck_with_fallback d, fallback, keys...\n      else\n        result        = guy.obj.pluck_with_fallback d, fallback\n      T?.eq d, d_changed\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.obj.nullify_undefined()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ {}, {} ]\n    [ null, {} ]\n    [ undefined, {} ]\n    [ { a: 1, b: 2, c: 3, }, { a: 1, b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: 3, }, { a: null, b: 2, c: 3, } ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d             = probe\n      d_copy        = { d..., }\n      result        = guy.obj.nullify_undefined d\n      T?.eq d, d_copy if d?\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"guy.obj.omit_nullish()\" ] = ( T, done ) ->\n  guy = require H.guy_path\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ {}, {} ]\n    [ null, {} ]\n    [ undefined, {} ]\n    [ { a: 1, b: 2, c: 3, }, { a: 1, b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: 3, }, { b: 2, c: 3, } ]\n    [ { a: undefined, b: 2, c: null, }, { b: 2, } ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      d             = probe\n      d_copy        = { d..., }\n      result        = guy.obj.omit_nullish d\n      T?.eq d, d_copy if d?\n      T?.ok ( d isnt result )\n      resolve result\n  #.........................................................................................................\n  done?()\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @, { timeout: 5000, }\n  # test @[ \"guy.obj.pick_with_fallback()\" ]\n  # test @[ \"guy.obj.pluck_with_fallback()\" ]\n  # test @[ \"guy.obj.nullify_undefined()\" ]\n  # test @[ \"guy.obj.omit_nullish()\" ]\n  # @[ \"configurator\" ]()\n  # test @[ \"await with async steampipes\" ]\n  # test @[ \"nowait with async steampipes\" ]\n  # test @[ \"use-call\" ]\n  # @[ \"await with async steampipes\" ]()\n  # @[ \"demo\" ]()\n  # @[ \"nowait\" ]()\n\n\n\n"
  ]
}