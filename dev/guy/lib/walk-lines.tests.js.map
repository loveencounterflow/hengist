{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/walk-lines.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/WALK-LINES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nFS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ freeze }                = require 'letsfreezethat'\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n#===========================================================================================================\n# TESTS FOR STR\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:𠀀bases', '3:', '4:are belong', '5:𠀀to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    result_2  = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    matcher_2 = text.split /\\r\\n|\\r|\\n/u\n    matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n    lnr       = 0\n    for line from GUY.str.walk_lines text, cfg\n      lnr++\n      result.push \"#{lnr}:#{line}\"\n      result_2.push line\n    # whisper '^35-1^', rpr text\n    # urge '^35-1^', result\n    # help '^35-2^', matcher\n    T?.eq result, matcher\n    T?.eq result_2, matcher_2\n    # debug '^3458934891^', T, result, matcher\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", eol: '\\n' }, { lnr: 2, line: 'éclair', eol: '\\n' }, { lnr: 3, line: \"éclair's\", eol: '\\n' }, { lnr: 4, line: 'éclairs', eol: '\\n' }, { lnr: 5, line: 'éclat', eol: '\\n' }, { lnr: 6, line: \"éclat's\", eol: '\\n' }, { lnr: 7, line: 'élan', eol: '\\n' }, { lnr: 8, line: \"élan's\", eol: '\\n' }, { lnr: 9, line: 'émigré', eol: '\\n' }, { lnr: 10, line: \"émigré's\", eol: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', eol: '\\n' }, { lnr: 2, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', eol: '\\r\\n' }, { lnr: 2, line: 'file', eol: '\\r\\n' }, { lnr: 3, line: 'written', eol: '\\r\\n' }, { lnr: 4, line: 'on', eol: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', eol: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', eol: '\\r' }, { lnr: 2, line: '𠀀bases', eol: '\\r' }, { lnr: 3, line: '', eol: '\\r' }, { lnr: 4, line: 'are belong', eol: '\\r\\n' }, { lnr: 5, line: '𠀀to us', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', eol: '\\r' }, { lnr: 2, line: '', eol: '\\r\\n' }, { lnr: 3, line: '', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '\\n' }, { lnr: 5, line: '', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line', eol: '\\n' }, { lnr: 2, line: 'with', eol: '\\n' }, { lnr: 3, line: 'trailing', eol: '\\n' }, { lnr: 4, line: 'whitespace', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { lnr: 1, line: 'line', eol: '\\n' }, { lnr: 2, line: 'with', eol: '\\n' }, { lnr: 3, line: 'trailing', eol: '\\n' }, { lnr: 4, line: 'whitespace', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r' }, { lnr: 2, line: 'line2', eol: '\\r' }, { lnr: 3, line: 'line3', eol: '\\r' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r\\n' }, { lnr: 2, line: 'line2', eol: '\\r\\n' }, { lnr: 3, line: 'line3', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    for d from GUY.str.walk_lines_with_positions text, cfg\n      result.push d\n    T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n\n#===========================================================================================================\n# TESTS FOR FS\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:𠀀bases', '3:', '4:are belong', '5:𠀀to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    for chunk_size in [ 1 .. 200 ] by +10\n    # for chunk_size in [ 200 ]\n      result    = []\n      result_2  = []\n      # whisper '^45-1^', '----------------------------------'\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      text      = FS.readFileSync path, { encoding: 'utf-8', }\n      matcher_2 = text.split /\\r\\n|\\r|\\n/u\n      matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n      lnr       = 0\n      for line from GUY.fs.walk_lines path, { chunk_size, cfg..., }\n        lnr++\n        result.push \"#{lnr}:#{line}\"\n        result_2.push line\n      # urge '^35-1^', result\n      # help '^35-2^', matcher\n      T?.eq result, matcher\n      T?.eq result_2, matcher_2\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", eol: '\\n' }, { lnr: 2, line: 'éclair', eol: '\\n' }, { lnr: 3, line: \"éclair's\", eol: '\\n' }, { lnr: 4, line: 'éclairs', eol: '\\n' }, { lnr: 5, line: 'éclat', eol: '\\n' }, { lnr: 6, line: \"éclat's\", eol: '\\n' }, { lnr: 7, line: 'élan', eol: '\\n' }, { lnr: 8, line: \"élan's\", eol: '\\n' }, { lnr: 9, line: 'émigré', eol: '\\n' }, { lnr: 10, line: \"émigré's\", eol: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', eol: '\\n' }, { lnr: 2, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', eol: '\\r\\n' }, { lnr: 2, line: 'file', eol: '\\r\\n' }, { lnr: 3, line: 'written', eol: '\\r\\n' }, { lnr: 4, line: 'on', eol: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', eol: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', eol: '\\r' }, { lnr: 2, line: '𠀀bases', eol: '\\r' }, { lnr: 3, line: '', eol: '\\r' }, { lnr: 4, line: 'are belong', eol: '\\r\\n' }, { lnr: 5, line: '𠀀to us', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', eol: '\\r' }, { lnr: 2, line: '', eol: '\\r\\n' }, { lnr: 3, line: '', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '\\n' }, { lnr: 5, line: '', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line', eol: '\\n' }, { lnr: 2, line: 'with', eol: '\\n' }, { lnr: 3, line: 'trailing', eol: '\\n' }, { lnr: 4, line: 'whitespace', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { lnr: 1, line: 'line', eol: '\\n' }, { lnr: 2, line: 'with', eol: '\\n' }, { lnr: 3, line: 'trailing', eol: '\\n' }, { lnr: 4, line: 'whitespace', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r' }, { lnr: 2, line: 'line2', eol: '\\r' }, { lnr: 3, line: 'line3', eol: '\\r' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r\\n' }, { lnr: 2, line: 'line2', eol: '\\r\\n' }, { lnr: 3, line: 'line3', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    for chunk_size in [ 20 ]\n      result    = []\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      text_bfr  = FS.readFileSync path, { encoding: null, }\n      for d from GUY.fs.walk_lines_with_positions path, { cfg..., chunk_size, }\n        # { byte_idx } = d\n        # delete d.byte_idx\n        # debug '^23-2^', rpr ( text_bfr.subarray byte_idx, byte_idx + 10 ).toString()\n        d.line  = d.line.toString()\n        d.eol   = d.eol.toString()\n        result.push d\n      T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines_with_positions_no_encoding = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", eol: '\\n' }, { lnr: 2, line: 'éclair', eol: '\\n' }, { lnr: 3, line: \"éclair's\", eol: '\\n' }, { lnr: 4, line: 'éclairs', eol: '\\n' }, { lnr: 5, line: 'éclat', eol: '\\n' }, { lnr: 6, line: \"éclat's\", eol: '\\n' }, { lnr: 7, line: 'élan', eol: '\\n' }, { lnr: 8, line: \"élan's\", eol: '\\n' }, { lnr: 9, line: 'émigré', eol: '\\n' }, { lnr: 10, line: \"émigré's\", eol: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', eol: '\\n' }, { lnr: 2, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', eol: '\\r\\n' }, { lnr: 2, line: 'file', eol: '\\r\\n' }, { lnr: 3, line: 'written', eol: '\\r\\n' }, { lnr: 4, line: 'on', eol: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', eol: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', eol: '\\r' }, { lnr: 2, line: '𠀀bases', eol: '\\r' }, { lnr: 3, line: '', eol: '\\r' }, { lnr: 4, line: 'are belong', eol: '\\r\\n' }, { lnr: 5, line: '𠀀to us', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', eol: '\\r' }, { lnr: 2, line: '', eol: '\\r\\n' }, { lnr: 3, line: '', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '\\n' }, { lnr: 5, line: '', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r' }, { lnr: 2, line: 'line2', eol: '\\r' }, { lnr: 3, line: 'line3', eol: '\\r' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r\\n' }, { lnr: 2, line: 'line2', eol: '\\r\\n' }, { lnr: 3, line: 'line3', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    for d from GUY.fs.walk_lines_with_positions path, { cfg..., encoding: null, }\n      T?.ok d.eol isnt GUY.fs._C_cr_buffer\n      T?.ok d.eol isnt GUY.fs._C_lf_buffer\n      d.line  = d.line.toString()\n      d.eol   = d.eol.toString()\n      result.push d\n    T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs__walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", eol: '\\n' }, { lnr: 2, line: 'éclair', eol: '\\n' }, { lnr: 3, line: \"éclair's\", eol: '\\n' }, { lnr: 4, line: 'éclairs', eol: '\\n' }, { lnr: 5, line: 'éclat', eol: '\\n' }, { lnr: 6, line: \"éclat's\", eol: '\\n' }, { lnr: 7, line: 'élan', eol: '\\n' }, { lnr: 8, line: \"élan's\", eol: '\\n' }, { lnr: 9, line: 'émigré', eol: '\\n' }, { lnr: 10, line: \"émigré's\", eol: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', eol: '\\n' }, { lnr: 2, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', eol: '\\n' }, { lnr: 2, line: '2', eol: '\\n' }, { lnr: 3, line: '3', eol: '\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', eol: '\\r\\n' }, { lnr: 2, line: 'file', eol: '\\r\\n' }, { lnr: 3, line: 'written', eol: '\\r\\n' }, { lnr: 4, line: 'on', eol: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', eol: '' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', eol: '\\r' }, { lnr: 2, line: '', eol: '\\r\\n' }, { lnr: 3, line: '', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '\\n' }, { lnr: 5, line: '', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line   ', eol: '\\n' }, { lnr: 2, line: 'with   ', eol: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', eol: '\\n' }, { lnr: 4, line: 'whitespace　 ', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r\\n' }, { lnr: 2, line: 'line2', eol: '\\r\\n' }, { lnr: 3, line: 'line3', eol: '\\r\\n' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', eol: '\\r' }, { lnr: 2, line: 'line2', eol: '\\r' }, { lnr: 3, line: 'line3', eol: '\\r' }, { lnr: 4, line: '', eol: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', eol: '\\r' }, { lnr: 2, line: '𠀀bases', eol: '\\r' }, { lnr: 3, line: '', eol: '\\r' }, { lnr: 4, line: 'are belong', eol: '\\r\\n' }, { lnr: 5, line: '𠀀to us', eol: '\\n' }, { lnr: 6, line: '', eol: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    # echo '^2343^', GUY.trm.steel probe[ 0 ]\n    # echo '^12-2^', GUY.trm.gold matcher\n    for chunk_size in [ 1 .. 200 ]\n      result    = []\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      text      = FS.readFileSync path, { encoding: 'utf-8', }\n      for d from GUY.fs._walk_lines_with_positions path, chunk_size\n        T?.eq ( type_of d.line  ), 'buffer'\n        T?.eq ( type_of d.eol   ), 'buffer'\n        d.line  = d.line.toString()\n        d.eol   = d.eol.toString()\n        # info '^43-1^', d\n        result.push d\n      # echo '^12-1^', result, chunk_size\n      T?.eq result, matcher\n    # echo '^12-2^', GUY.trm.gold matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs__walk_lines__walk_advancements = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], \"Ångström's\\néclair\\néclair's\\néclairs\\néclat\\néclat's\\nélan\\nélan's\\némigré\\némigré's\", null ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], '', null ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], '\\n', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], '1\\n2\\n3', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], '1\\n2\\n3\\n', null ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], 'this\\r\\nfile\\r\\nwritten\\r\\non\\r\\nMS Notepad', null ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], 'all\\r𠀀bases\\r\\rare belong\\r\\n𠀀to us\\n', null ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], '\\r\\r\\n\\r\\n\\n\\n', null ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], 'line   \\nwith   \\ntrailing\\t\\t\\nwhitespace　 ', null ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], 'line1\\rline2\\rline3\\r', null ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], 'line1\\r\\nline2\\r\\nline3\\r\\n', null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      for chunk_size in [ 1 .. 200 ] by +10\n        result    = []\n        [ path ]  = probe\n        path      = PATH.resolve PATH.join __dirname, path\n        for buffer from GUY.fs.walk_buffers path, { chunk_size, }\n          for { material, eol, } from GUY.fs._walk_lines__walk_advancements buffer\n            # info { material, eol, }\n            result.push material\n            result.push eol\n        result = Buffer.concat result\n        T?.eq result.length, ( FS.statSync path ).size\n      T?.eq ( Buffer.compare ( Buffer.concat [ ( GUY.fs.walk_buffers path )..., ] ), ( FS.readFileSync path ) ), 0\n      result = result.toString()\n      resolve result\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs__walk_lines__advance = ( T, done ) ->\n  GUY                 = require H.guy_path\n  C_empty_buffer      = Buffer.from []\n  C_cr_buffer         = Buffer.from [ 0x0d ]\n  C_lf_buffer         = Buffer.from [ 0x0a ]\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ [ \"Ångström's\", C_lf_buffer ], [ 'éclair', C_lf_buffer ], [ \"éclair's\", C_lf_buffer ], [ 'éclairs', C_lf_buffer ], [ 'éclat', C_lf_buffer ], [ \"éclat's\", C_lf_buffer ], [ 'élan', C_lf_buffer ], [ \"élan's\", C_lf_buffer ], [ 'émigré', C_lf_buffer ], [ \"émigré's\", C_empty_buffer ] ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ [ '', C_lf_buffer ] ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ [ '1', C_lf_buffer ], [ '2', C_lf_buffer ], [ '3', C_empty_buffer ] ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ [ '1', C_lf_buffer ], [ '2', C_lf_buffer ], [ '3', C_lf_buffer ] ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ [ 'this', C_cr_buffer ], [ '', C_lf_buffer ], [ 'file', C_cr_buffer ], [ '', C_lf_buffer ], [ 'written', C_cr_buffer ], [ '', C_lf_buffer ], [ 'on', C_cr_buffer ], [ '', C_lf_buffer ], [ 'MS Notepad', C_empty_buffer ] ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ [ 'all', C_cr_buffer ], [ '𠀀bases', C_cr_buffer ], [ '', C_cr_buffer ], [ 'are belong', C_cr_buffer ], [ '', C_lf_buffer ], [ '𠀀to us', C_lf_buffer ] ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ [ '', C_cr_buffer ], [ '', C_cr_buffer ], [ '', C_lf_buffer ], [ '', C_cr_buffer ], [ '', C_lf_buffer ], [ '', C_lf_buffer ], [ '', C_lf_buffer ] ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ [ 'line   ', C_lf_buffer ], [ 'with   ', C_lf_buffer ], [ 'trailing\\t\\t', C_lf_buffer ], [ 'whitespace　 ', C_empty_buffer ] ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ [ 'line1', C_cr_buffer ], [ 'line2', C_cr_buffer ], [ 'line3', C_cr_buffer ] ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ [ 'line1', C_cr_buffer ], [ '', C_lf_buffer ], [ 'line2', C_cr_buffer ], [ '', C_lf_buffer ], [ 'line3', C_cr_buffer ], [ '', C_lf_buffer ] ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    do =>\n      result    = []\n      [ path ]  = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      buffer    = FS.readFileSync path\n      first_idx = 0\n      last_idx  = buffer.length - 1\n      loop\n        break if first_idx > last_idx\n        d = GUY.fs._walk_lines__advance buffer, first_idx\n        result.push [ d.material.toString(), d.eol, ]\n        first_idx = d.next_idx\n      echo [ probe, result, ]\n      T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n\n#===========================================================================================================\n# WALK BUFFERS\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_buffers = ( T, done ) ->\n  GUY                 = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], \"Ångström's\\néclair\\néclair's\\néclairs\\néclat\\néclat's\\nélan\\nélan's\\némigré\\némigré's\", null ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], '', null ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], '\\n', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], '1\\n2\\n3', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], '1\\n2\\n3\\n', null ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], 'this\\r\\nfile\\r\\nwritten\\r\\non\\r\\nMS Notepad', null ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], 'all\\r𠀀bases\\r\\rare belong\\r\\n𠀀to us\\n', null ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], '\\r\\r\\n\\r\\n\\n\\n', null ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], 'line   \\nwith   \\ntrailing\\t\\t\\nwhitespace　 ', null ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], 'line1\\rline2\\rline3\\r', null ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], 'line1\\r\\nline2\\r\\nline3\\r\\n', null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      for chunk_size in [ 1 .. 200 ] by +10\n        result    = []\n        [ path ]  = probe\n        path      = PATH.resolve PATH.join __dirname, path\n        for buffer from GUY.fs.walk_buffers path, { chunk_size, }\n          T?.eq ( type_of buffer ), 'buffer'\n          T?.ok buffer.length <= chunk_size\n          result.push buffer\n        result = Buffer.concat result\n        T?.eq result.length, ( FS.statSync path ).size\n        result = result.toString()\n      T?.eq ( Buffer.compare ( Buffer.concat [ ( GUY.fs.walk_buffers path )..., ] ), ( FS.readFileSync path ) ), 0\n      resolve result\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_buffers_with_positions = ( T, done ) ->\n  GUY                 = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], \"Ångström's\\néclair\\néclair's\\néclairs\\néclat\\néclat's\\nélan\\nélan's\\némigré\\némigré's\", null ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], '', null ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], '\\n', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], '1\\n2\\n3', null ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], '1\\n2\\n3\\n', null ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], 'this\\r\\nfile\\r\\nwritten\\r\\non\\r\\nMS Notepad', null ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], 'all\\r𠀀bases\\r\\rare belong\\r\\n𠀀to us\\n', null ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], '\\r\\r\\n\\r\\n\\n\\n', null ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], 'line   \\nwith   \\ntrailing\\t\\t\\nwhitespace　 ', null ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], 'line1\\rline2\\rline3\\r', null ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], 'line1\\r\\nline2\\r\\nline3\\r\\n', null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      for chunk_size in [ 1 .. 200 ] by +10\n        result    = []\n        [ path ]  = probe\n        path      = PATH.resolve PATH.join __dirname, path\n        fd        = FS.openSync path\n        chr_bfr   = Buffer.from [ 0, ]\n        for { buffer, byte_idx, } from GUY.fs.walk_buffers_with_positions path, { chunk_size, }\n          T?.eq ( type_of buffer ), 'buffer'\n          T?.ok buffer.length <= chunk_size\n          T?.eq ( FS.readSync fd, chr_bfr, 0, 1, byte_idx ), 1\n          T?.eq chr_bfr[ 0 ], buffer[ 0 ]\n          result.push buffer\n        result = Buffer.concat result\n        T?.eq result.length, ( FS.statSync path ).size\n        result = result.toString()\n      T?.eq ( Buffer.compare ( Buffer.concat [ ( GUY.fs.walk_buffers path )..., ] ), ( FS.readFileSync path ) ), 0\n      resolve result\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_buffers_walk_lines_reject_chunk_size_lt_1 = ( T, done ) ->\n  GUY                 = require H.guy_path\n  path                = PATH.resolve PATH.join __dirname, '../../../assets/a-few-words.txt'\n  exhaust             = ( g ) -> _ for _ from g; return null\n  for chunk_size in [ -10000, -1, 0, ]\n    T?.throws /not a valid .*chunk_size/, -> exhaust GUY.fs.walk_buffers  path, { chunk_size, }\n    T?.throws /not a valid .*chunk_size/, -> exhaust GUY.fs.walk_lines    path, { chunk_size, }\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @GUY_fs__walk_lines_with_positions()\n  # test @GUY_fs__walk_lines_with_positions\n  # test @GUY_fs__walk_lines__walk_advancements\n  # @GUY_str_walk_lines_with_positions()\n  # test @GUY_str_walk_lines_with_positions\n  # test @GUY_fs_walk_lines_with_positions\n  # test @GUY_fs_walk_lines_with_positions_no_encoding\n  test @\n  # test @GUY_fs_walk_lines\n  # @GUY_str_walk_lines()\n  # test @GUY_str_walk_lines\n  # @GUY_fs__walk_lines__advance()\n  # test @GUY_fs__walk_lines__advance\n  # @GUY_fs_walk_buffers()\n  # test @GUY_fs_walk_buffers\n  # test @GUY_fs_walk_buffers_walk_lines_reject_chunk_size_lt_1\n  # test @GUY_fs_walk_buffers_with_positions\n\n\n\n"
  ]
}