{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/walk-lines.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/WALK-LINES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nFS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ freeze }                = require 'letsfreezethat'\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:𠀀bases', '3:', '4:are belong', '5:𠀀to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    for chunk_size in [ 1 .. 200 ] by +10\n    # for chunk_size in [ 200 ]\n      result    = []\n      result_2  = []\n      # whisper '^45-1^', '----------------------------------'\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      text      = FS.readFileSync path, { encoding: 'utf-8', }\n      matcher_2 = text.split /\\r\\n|\\r|\\n/u\n      matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n      lnr       = 0\n      for line from GUY.fs.walk_lines path, { chunk_size, cfg..., }\n        lnr++\n        result.push \"#{lnr}:#{line}\"\n        result_2.push line\n      # urge '^35-1^', result\n      # help '^35-2^', matcher\n      T?.eq result, matcher\n      T?.eq result_2, matcher_2\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    # [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", nl: '\\n' }, { lnr: 2, line: 'éclair', nl: '\\n' }, { lnr: 3, line: \"éclair's\", nl: '\\n' }, { lnr: 4, line: 'éclairs', nl: '\\n' }, { lnr: 5, line: 'éclat', nl: '\\n' }, { lnr: 6, line: \"éclat's\", nl: '\\n' }, { lnr: 7, line: 'élan', nl: '\\n' }, { lnr: 8, line: \"élan's\", nl: '\\n' }, { lnr: 9, line: 'émigré', nl: '\\n' }, { lnr: 10, line: \"émigré's\", nl: '' } ] ]\n    # [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', nl: '\\n' }, { lnr: 2, line: '', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', nl: '\\n' }, { lnr: 2, line: '2', nl: '\\n' }, { lnr: 3, line: '3', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line', nl: '\\n' }, { lnr: 2, line: 'with', nl: '\\n' }, { lnr: 3, line: 'trailing', nl: '\\n' }, { lnr: 4, line: 'whitespace', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { lnr: 1, line: 'line', nl: '\\n' }, { lnr: 2, line: 'with', nl: '\\n' }, { lnr: 3, line: 'trailing', nl: '\\n' }, { lnr: 4, line: 'whitespace', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { lnr: 1, line: 'line   ', nl: '\\n' }, { lnr: 2, line: 'with   ', nl: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', nl: '\\n' }, { lnr: 4, line: 'whitespace　 ', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', nl: '\\n' }, { lnr: 2, line: '2', nl: '\\n' }, { lnr: 3, line: '3', nl: '\\n' }, { lnr: 4, line: '', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', nl: '\\r' }, { lnr: 2, line: 'line2', nl: '\\r' }, { lnr: 3, line: 'line3', nl: '\\r' }, { lnr: 4, line: '', nl: '' } ] ]\n\n\n    # [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', nl: '\\r' }, { lnr: 2, line: '', nl: '\\r\\n' }, { lnr: 3, line: '', nl: '\\r\\n' }, { lnr: 4, line: '', nl: '\\n' }, { lnr: 5, line: '', nl: '\\n' }, { lnr: 6, line: '', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', nl: '\\r\\n' }, { lnr: 2, line: 'file', nl: '\\r\\n' }, { lnr: 3, line: 'written', nl: '\\r\\n' }, { lnr: 4, line: 'on', nl: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', nl: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', nl: '\\r' }, { lnr: 2, line: '𠀀bases', nl: '\\r' }, { lnr: 3, line: '', nl: '\\r' }, { lnr: 4, line: 'are belong', nl: '\\r\\n' }, { lnr: 5, line: '𠀀to us', nl: '\\n' }, { lnr: 6, line: '', nl: '' } ] ]\n    # [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', nl: '\\r\\n' }, { lnr: 2, line: 'line2', nl: '\\r\\n' }, { lnr: 3, line: 'line3', nl: '\\r\\n' }, { lnr: 4, line: '', nl: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    # for chunk_size in [ 1 .. 200 ] by +10\n    for chunk_size in [ 200 ]\n      result    = []\n      [ path\n        cfg ]   = probe\n      help '^423^', path\n      path      = PATH.resolve PATH.join __dirname, path\n      lnr       = 0\n      for d from GUY.fs.walk_lines_with_positions path, { chunk_size, cfg..., }\n        urge '^108-1^', d\n        result.push d\n      T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:𠀀bases', '3:', '4:are belong', '5:𠀀to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    result_2  = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    matcher_2 = text.split /\\r\\n|\\r|\\n/u\n    matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n    lnr       = 0\n    for line from GUY.str.walk_lines text, cfg\n      lnr++\n      result.push \"#{lnr}:#{line}\"\n      result_2.push line\n    # whisper '^35-1^', rpr text\n    # urge '^35-1^', result\n    # help '^35-2^', matcher\n    T?.eq result, matcher\n    T?.eq result_2, matcher_2\n    # debug '^3458934891^', T, result, matcher\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { lnr: 1, line: \"Ångström's\", nl: '\\n' }, { lnr: 2, line: 'éclair', nl: '\\n' }, { lnr: 3, line: \"éclair's\", nl: '\\n' }, { lnr: 4, line: 'éclairs', nl: '\\n' }, { lnr: 5, line: 'éclat', nl: '\\n' }, { lnr: 6, line: \"éclat's\", nl: '\\n' }, { lnr: 7, line: 'élan', nl: '\\n' }, { lnr: 8, line: \"élan's\", nl: '\\n' }, { lnr: 9, line: 'émigré', nl: '\\n' }, { lnr: 10, line: \"émigré's\", nl: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { lnr: 1, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { lnr: 1, line: '', nl: '\\n' }, { lnr: 2, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { lnr: 1, line: '1', nl: '\\n' }, { lnr: 2, line: '2', nl: '\\n' }, { lnr: 3, line: '3', nl: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { lnr: 1, line: '1', nl: '\\n' }, { lnr: 2, line: '2', nl: '\\n' }, { lnr: 3, line: '3', nl: '\\n' }, { lnr: 4, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { lnr: 1, line: 'this', nl: '\\r\\n' }, { lnr: 2, line: 'file', nl: '\\r\\n' }, { lnr: 3, line: 'written', nl: '\\r\\n' }, { lnr: 4, line: 'on', nl: '\\r\\n' }, { lnr: 5, line: 'MS Notepad', nl: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { lnr: 1, line: 'all', nl: '\\r' }, { lnr: 2, line: '𠀀bases', nl: '\\r' }, { lnr: 3, line: '', nl: '\\r' }, { lnr: 4, line: 'are belong', nl: '\\r\\n' }, { lnr: 5, line: '𠀀to us', nl: '\\n' }, { lnr: 6, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { lnr: 1, line: '', nl: '\\r' }, { lnr: 2, line: '', nl: '\\r\\n' }, { lnr: 3, line: '', nl: '\\r\\n' }, { lnr: 4, line: '', nl: '\\n' }, { lnr: 5, line: '', nl: '\\n' }, { lnr: 6, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { lnr: 1, line: 'line', nl: '\\n' }, { lnr: 2, line: 'with', nl: '\\n' }, { lnr: 3, line: 'trailing', nl: '\\n' }, { lnr: 4, line: 'whitespace', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { lnr: 1, line: 'line', nl: '\\n' }, { lnr: 2, line: 'with', nl: '\\n' }, { lnr: 3, line: 'trailing', nl: '\\n' }, { lnr: 4, line: 'whitespace', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { lnr: 1, line: 'line   ', nl: '\\n' }, { lnr: 2, line: 'with   ', nl: '\\n' }, { lnr: 3, line: 'trailing\\t\\t', nl: '\\n' }, { lnr: 4, line: 'whitespace　 ', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { lnr: 1, line: 'line1', nl: '\\r' }, { lnr: 2, line: 'line2', nl: '\\r' }, { lnr: 3, line: 'line3', nl: '\\r' }, { lnr: 4, line: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { lnr: 1, line: 'line1', nl: '\\r\\n' }, { lnr: 2, line: 'line2', nl: '\\r\\n' }, { lnr: 3, line: 'line3', nl: '\\r\\n' }, { lnr: 4, line: '', nl: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    for d from GUY.str.walk_lines_with_positions text, cfg\n      result.push d\n    T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs__walk_lines_get_next_line_part = ( T, done ) ->\n  GUY       = require H.guy_path\n  buffer_0a = Buffer.from [ 0x0a ]\n  buffer_0d = Buffer.from [ 0x0d ]\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ [ \"Ångström's\", buffer_0a ], [ 'éclair', buffer_0a ], [ \"éclair's\", buffer_0a ], [ 'éclairs', buffer_0a ], [ 'éclat', buffer_0a ], [ \"éclat's\", buffer_0a ], [ 'élan', buffer_0a ], [ \"élan's\", buffer_0a ], [ 'émigré', buffer_0a ], [ \"émigré's\", null ] ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ [ '', buffer_0a ] ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ [ '1', buffer_0a ], [ '2', buffer_0a ], [ '3', null ] ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ [ '1', buffer_0a ], [ '2', buffer_0a ], [ '3', buffer_0a ] ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ [ 'this', buffer_0d ], [ '', buffer_0a ], [ 'file', buffer_0d ], [ '', buffer_0a ], [ 'written', buffer_0d ], [ '', buffer_0a ], [ 'on', buffer_0d ], [ '', buffer_0a ], [ 'MS Notepad', null ] ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ [ 'all', buffer_0d ], [ '𠀀bases', buffer_0d ], [ '', buffer_0d ], [ 'are belong', buffer_0d ], [ '', buffer_0a ], [ '𠀀to us', buffer_0a ] ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ [ '', buffer_0d ], [ '', buffer_0d ], [ '', buffer_0a ], [ '', buffer_0d ], [ '', buffer_0a ], [ '', buffer_0a ], [ '', buffer_0a ] ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ [ 'line   ', buffer_0a ], [ 'with   ', buffer_0a ], [ 'trailing\\t\\t', buffer_0a ], [ 'whitespace　 ', null ] ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ [ 'line   ', buffer_0a ], [ 'with   ', buffer_0a ], [ 'trailing\\t\\t', buffer_0a ], [ 'whitespace　 ', null ] ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ [ 'line   ', buffer_0a ], [ 'with   ', buffer_0a ], [ 'trailing\\t\\t', buffer_0a ], [ 'whitespace　 ', null ] ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ [ 'line1', buffer_0d ], [ 'line2', buffer_0d ], [ 'line3', buffer_0d ] ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ [ 'line1', buffer_0d ], [ '', buffer_0a ], [ 'line2', buffer_0d ], [ '', buffer_0a ], [ 'line3', buffer_0d ], [ '', buffer_0a ] ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    do =>\n      result    = []\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      buffer    = FS.readFileSync path\n      first_idx = 0\n      last_idx  = buffer.length - 1\n      loop\n        break if first_idx > last_idx\n        d = GUY.fs._walk_lines_get_next_line_part buffer, first_idx\n        result.push [ d.material.toString(), d.eol, ]\n        first_idx = d.next_idx\n      echo [ probe, result, ]\n      T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @GUY_fs_walk_lines_with_positions()\n  # test @GUY_fs_walk_lines_with_positions\n  # @GUY_str_walk_lines_with_positions()\n  # test @GUY_str_walk_lines_with_positions\n  # test @\n  # test @GUY_fs_walk_lines\n  # @GUY_str_walk_lines()\n  # test @GUY_str_walk_lines\n  # @GUY_fs__walk_lines_get_next_line_part()\n  test @GUY_fs__walk_lines_get_next_line_part\n\n"
  ]
}