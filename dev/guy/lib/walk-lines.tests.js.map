{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/walk-lines.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS/WALK-LINES'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nFS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ freeze }                = require 'letsfreezethat'\n{ isa\n  type_of\n  validate\n  validate_list_of\n  equals }                = types.export()\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@GUY_fs_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:bases', '3:', '4:are belong', '5:to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    for chunk_size in [ 1 .. 200 ] by +10\n    # for chunk_size in [ 200 ]\n      result    = []\n      result_2  = []\n      # whisper '^45-1^', '----------------------------------'\n      [ path\n        cfg ]   = probe\n      path      = PATH.resolve PATH.join __dirname, path\n      text      = FS.readFileSync path, { encoding: 'utf-8', }\n      matcher_2 = text.split /\\r\\n|\\r|\\n/u\n      matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n      lnr       = 0\n      for line from GUY.fs.walk_lines path, { chunk_size, cfg..., }\n        lnr++\n        result.push \"#{lnr}:#{line}\"\n        result_2.push line\n      # urge '^35-1^', result\n      # help '^35-2^', matcher\n      T?.eq result, matcher\n      T?.eq result_2, matcher_2\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt',                           null,              ], [ \"1:Ångström's\", \"2:éclair\", \"3:éclair's\", \"4:éclairs\", \"5:éclat\", \"6:éclat's\", \"7:élan\", \"8:élan's\", \"9:émigré\", \"10:émigré's\", ], ]\n    [ [ '../../../assets/datamill/empty-file.txt',                   null,              ], [ '1:',                                                                                                                           ], ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt',          null,              ], [ '1:', '2:',                                                                                                                     ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt',   null,              ], [ '1:1', '2:2', '3:3',                                                                                                            ], ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null,              ], [ '1:1', '2:2', '3:3', '4:',                                                                                                      ], ]\n    [ [ '../../../assets/datamill/windows-crlf.txt',                 null,              ], [ '1:this', '2:file', '3:written', '4:on', '5:MS Notepad'                                                                         ], ]\n    [ [ '../../../assets/datamill/mixed-usage.txt',                  null,              ], [ '1:all', '2:bases', '3:', '4:are belong', '5:to us', '6:' ], ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt',              null,              ], [ '1:', '2:', '3:', '4:', '5:', '6:', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     null,              ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: true, },   ], [ '1:line', '2:with', '3:trailing', '4:whitespace', ], ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt',     { trim: false, },  ], [ '1:line   ', '2:with   ', '3:trailing\\t\\t', '4:whitespace\\u3000 ', ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    result_2  = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    matcher_2 = text.split /\\r\\n|\\r|\\n/u\n    matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n    lnr       = 0\n    for line from GUY.str.walk_lines text, cfg\n      lnr++\n      result.push \"#{lnr}:#{line}\"\n      result_2.push line\n    # whisper '^35-1^', rpr text\n    # urge '^35-1^', result\n    # help '^35-2^', matcher\n    T?.eq result, matcher\n    T?.eq result_2, matcher_2\n  #.........................................................................................................\n  # debug '^45-1^', '\\r\\r\\n\\r\\n\\n\\n'.split /\\r\\n|\\r|\\n/\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@GUY_str_walk_lines_with_positions = ( T, done ) ->\n  GUY     = require H.guy_path\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { idx: 0, lnr: 1, line: \"Ångström's\", nl: '\\n' }, { idx: 11, lnr: 2, line: 'éclair', nl: '\\n' }, { idx: 18, lnr: 3, line: \"éclair's\", nl: '\\n' }, { idx: 27, lnr: 4, line: 'éclairs', nl: '\\n' }, { idx: 35, lnr: 5, line: 'éclat', nl: '\\n' }, { idx: 41, lnr: 6, line: \"éclat's\", nl: '\\n' }, { idx: 49, lnr: 7, line: 'élan', nl: '\\n' }, { idx: 54, lnr: 8, line: \"élan's\", nl: '\\n' }, { idx: 61, lnr: 9, line: 'émigré', nl: '\\n' }, { idx: 68, lnr: 10, line: \"émigré's\", nl: '' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { idx: -1, lnr: 1, text: '', nl: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { idx: 0, lnr: 1, line: '', nl: '\\n' }, { idx: 2, lnr: 2, text: '', nl: '\\n' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { idx: 0, lnr: 1, line: '1', nl: '\\n' }, { idx: 2, lnr: 2, line: '2', nl: '\\n' }, { idx: 4, lnr: 3, line: '3', nl: '' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { idx: 0, lnr: 1, line: '1', nl: '\\n' }, { idx: 2, lnr: 2, line: '2', nl: '\\n' }, { idx: 4, lnr: 3, line: '3', nl: '\\n' }, { idx: 7, lnr: 4, text: '', nl: '\\n' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { idx: 0, lnr: 1, line: 'this', nl: '\\r\\n' }, { idx: 6, lnr: 2, line: 'file', nl: '\\r\\n' }, { idx: 12, lnr: 3, line: 'written', nl: '\\r\\n' }, { idx: 21, lnr: 4, line: 'on', nl: '\\r\\n' }, { idx: 25, lnr: 5, line: 'MS Notepad', nl: '' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { idx: 0, lnr: 1, line: 'all', nl: '\\r' }, { idx: 4, lnr: 2, line: '𠀀bases', nl: '\\r' }, { idx: 12, lnr: 3, line: '', nl: '\\r' }, { idx: 13, lnr: 4, line: 'are belong', nl: '\\r\\n' }, { idx: 25, lnr: 5, line: '𠀀to us', nl: '\\n' }, { idx: 34, lnr: 6, text: '', nl: '\\n' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { idx: 0, lnr: 1, line: '', nl: '\\r' }, { idx: 1, lnr: 2, line: '', nl: '\\r\\n' }, { idx: 3, lnr: 3, line: '', nl: '\\r\\n' }, { idx: 5, lnr: 4, line: '', nl: '\\n' }, { idx: 6, lnr: 5, line: '', nl: '\\n' }, { idx: 8, lnr: 6, text: '', nl: '\\n' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { idx: 0, lnr: 1, line: 'line', nl: '\\n' }, { idx: 8, lnr: 2, line: 'with', nl: '\\n' }, { idx: 16, lnr: 3, line: 'trailing', nl: '\\n' }, { idx: 27, lnr: 4, line: 'whitespace', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { idx: 0, lnr: 1, line: 'line', nl: '\\n' }, { idx: 8, lnr: 2, line: 'with', nl: '\\n' }, { idx: 16, lnr: 3, line: 'trailing', nl: '\\n' }, { idx: 27, lnr: 4, line: 'whitespace', nl: '' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { idx: 0, lnr: 1, line: 'line   ', nl: '\\n' }, { idx: 8, lnr: 2, line: 'with   ', nl: '\\n' }, { idx: 16, lnr: 3, line: 'trailing\\t\\t', nl: '\\n' }, { idx: 27, lnr: 4, line: 'whitespace　 ', nl: '' } ] ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result    = []\n    result_2  = []\n    [ path\n      cfg ]   = probe\n    path      = PATH.resolve PATH.join __dirname, path\n    # help '^23-1^', path\n    text      = FS.readFileSync path, { encoding: 'utf-8', }\n    matcher_2 = text.split /\\r\\n|\\r|\\n/u\n    matcher_2 = ( line.trimEnd() for line in matcher_2 ) if ( cfg?.trim ? true )\n    for d from GUY.str.walk_lines_with_positions text, cfg\n      unless line is ''\n        T?.eq ( Array.from text[ d.idx .. d.idx + 2 ] )[ 0 ], ( Array.from d.line )[ 0 ]\n      result.push d\n    echo [ probe, result, ]\n    # help '^35-2^', matcher\n    T?.eq result, matcher\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @GUY_str_walk_lines_with_positions()\n  test @GUY_str_walk_lines_with_positions\n  # test @\n  # test @GUY_fs_walk_lines\n\n"
  ]
}