{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/intertype-prototype.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERTYPE/prototype'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n{ hide\n  tree }                  = GUY.props\nrvr                       = GUY.trm.reverse\nnameit                    = ( name, f ) -> Object.defineProperty f, 'name', { value: name, }\n#...........................................................................................................\ntest                      = require 'guy-test'\ntypes                     = new ( require '../../../apps/intertype' ).Intertype()\nhub                       = @\n#...........................................................................................................\nhide @, 'Multimix', ( require '../../../apps/multimix' ).Multimix\nMultimix                  = @Multimix\n\n\n#-----------------------------------------------------------------------------------------------------------\n@registry =\n  integer:  ( x ) -> ( Number.isFinite x ) and ( x is Math.floor x )\n  text:     ( x ) -> ( typeof x ) is 'string'\n  #.........................................................................................................\n  even: ( x ) ->\n    if ( Number.isInteger x )     then return ( x % 2  ) is   0\n    else if typeof x is 'bigint'  then return ( x % 2n ) is   0n\n    return false\n  #.........................................................................................................\n  odd: ( x ) ->\n    if ( Number.isInteger x )     then return ( x % 2  ) isnt 0\n    else if typeof x is 'bigint'  then return ( x % 2n ) isnt 0n\n    return false\n\n#-----------------------------------------------------------------------------------------------------------\n@handlers =\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( props, x ) ->\n    unless ( arity = props.length ) > 0\n      throw new Error \"expected at least one property, got #{arity}: #{rpr props}\"\n    whisper '^321-1^', '---------------------------------------'\n    debug '^445-1^', { props, x, }\n    advance     = false\n    last_idx    = props.length - 1\n    R = true\n    #.......................................................................................................\n    for prop, idx in props\n      debug '^445-2^', { idx, prop, R, advance, }\n      return R if idx > last_idx\n      #.....................................................................................................\n      if advance\n        debug '^445-3^'\n        if prop is 'or'\n          return true if R\n          advance = false\n        continue\n      #.....................................................................................................\n      if prop is 'or'\n        return true if R\n        debug '^445-4^'\n        advance = true\n        continue\n      #.....................................................................................................\n      unless ( fn = hub.registry[ prop ] )?\n        throw new Error \"unknown type #{rpr prop}\"\n      #.....................................................................................................\n      unless ( R = fn.call hub, x ) is true or R is false\n        ### TAINT use this library to determine type: ###\n        throw new Error \"expected test result to be boolean, go a #{typeof R}: #{rpr R}\"\n      debug '^445-5^', GUY.trm.reverse { idx, prop, R, advance, }\n      advance = not R\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( props, isa ) ->\n    unless ( arity = props.length ) is 1\n      throw new Error \"expected single property, got #{arity}: #{rpr props}\"\n    [ name, ]             = props\n    hub.registry[ name ]  = R = nameit name, ( props, x ) -> isa x\n    return R\n\n#-----------------------------------------------------------------------------------------------------------\n@isa      = new Multimix { hub, handler: @handlers.isa,     }\n@declare  = new Multimix { hub, handler: @handlers.declare, }\n\n\n"
  ]
}