{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-type-declarations.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ debug\n  info\n  warn\n  urge\n  help }                  = GUY.trm.get_loggers 'INTERTYPE'\n{ rpr }                   = GUY.trm\n\n###\n\n\n* **Attributor**: a `class Atr extends Accessor` that instantiates `atr = new Atr()` as a function which allows to be accessed in two ways:\n  classical `atr 'acc', p, q, r...` or compressed `atr.acc p, q, r...`\n* **Accessor**: the key used as first argument to access an attributor as in `atr.acc()`, sometimes symbolized as `acc`\n* **Phrase**: list of 'words'/keys resulting from splitting the accessor by whitespace and underscores. This allows\n  to build complex accessors like `isa.text_or_integer 42` (phrase: `[ 'text', 'or', 'integer', ]`)\n* **Details**: arguments used in a attributor after the accessor. In `atr.foo_bar 3, 4, 5`, `foo_bar` is the accessor key,\n  `[ 'foo', 'bar', ]` is the accessor phrase, and `3, 4, 5` are the accessor details.\n\n# Analyzing Attributor\n\nclass Aa extends Analyzing_attributor\n\naa = new Aa\nresolution = aa\n\n\n###\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT move this to Guy ###\nclass Guy_error_base_class extends Error\n  constructor: ( ref, message ) ->\n    super()\n    if ref is null\n      @message  = message\n      return undefined\n    @message  = \"#{ref} (#{@constructor.name}) #{message}\"\n    @ref      = ref\n    return undefined ### always return `undefined` from constructor ###\n\n#-----------------------------------------------------------------------------------------------------------\nclass Wrong_use_of_abstract_base_class_method extends Guy_error_base_class\n  constructor: ( ref, instance, method_name )     ->\n    class_name = instance.constructor.name\n    super ref, \"not allowed to call method #{rpr method_name} of abstract base class #{rpr class_name}\"\n\n\n#===========================================================================================================\nclass Attributor extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  clasz = @\n\n  #---------------------------------------------------------------------------------------------------------\n  @create_proxy: ( x ) -> new Proxy x,\n    get: ( target, accessor, receiver ) ->\n      # info '^98-1^', rpr accessor\n      ### TAINT consider to use symbols instead of underscore-prefixed strings ###\n      return target[ accessor ] if accessor is 'constructor'\n      return target[ accessor ] if accessor.startsWith? and accessor.startsWith '__'\n      return ( P... ) -> target accessor, P...\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    ### Trick to make this work; these are strings containing JS code: ###\n    super '...P', 'return this._me.__do(...P)'\n    @_me        = @bind @\n    return clasz.create_proxy @_me\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( P... ) ->\n    ### Attributor instances are functions, and the `__do()` method is the code that they execute when being\n    called. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Attributor.__do^', @, '__do'\n\n\n#===========================================================================================================\nclass Analyzing_attributor extends Attributor\n\n  #---------------------------------------------------------------------------------------------------------\n  @__cache: null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    super()\n    clasz     = @constructor\n    @__cache  = if clasz.__cache? then ( new Map clasz.__cache ) else new Map()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  __do: ( accessor, details... ) -> ( @__get_handler accessor ) details...\n\n  #---------------------------------------------------------------------------------------------------------\n  __get_handler: ( accessor ) ->\n    ### Given a accessor, returns a method to use for that accessor, either from cache a newly generated by\n    calling `__create_handler()` which must be declared in derived classes. ###\n    return R = @__cache.get accessor if @__cache.has accessor\n    @__cache.set accessor, R = @__create_handler @__split accessor\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  __create_handler: ( phrase ) ->\n    ### Given a phrase (the parts of an accessor when split), return a function that takes details as\n    arguments and returns a resolution. ###\n    throw new Wrong_use_of_abstract_base_class_method '^Analyzing_attributor.__create_handler^', @, '__create_handler'\n\n  #---------------------------------------------------------------------------------------------------------\n  ### Given an accessor (string), return a phrase (list of strings): ###\n  __split: ( accessor ) -> accessor.split /[\\s_]+/u\n\n  #---------------------------------------------------------------------------------------------------------\n  ### Associate an accessor with a handler method: ###\n  __declare: ( accessor, handler ) ->\n    ### TAINT check for overwrites? ###\n    @__cache.set accessor, handler\n    return null\n\n\n#===========================================================================================================\nclass Isa extends Analyzing_attributor\n\n  #---------------------------------------------------------------------------------------------------------\n  @__cache: new Map Object.entries\n    null:       ( x ) -> x is null\n    undefined:  ( x ) -> x is undefined\n    boolean:    ( x ) -> ( x is true ) or ( x is false )\n    float:      ( x ) -> Number.isFinite x\n\n  #---------------------------------------------------------------------------------------------------------\n  __create_handler: ( phrase ) ->\n    return ( details ) -> 'Yo'\n\n#===========================================================================================================\nif module is require.main then do =>\n  isa = new Isa()\n  debug '^98-2^', isa.__cache\n  try debug '^98-3^', ( new Attributor() ).__do() catch e then warn GUY.trm.reverse e.message\n  # info '^98-4^', isa\n  debug '^98-5^', isa 'float', 42\n  debug '^98-8^', isa.float 42\n  debug '^98-9^', isa.float NaN\n  debug '^98-10^', isa.float '22'\n  # debug '^98-7^', isa.float_or_text 42\n  debug '^98-11^', isa.float___or_text 42\n  debug '^98-12^', isa 'float   or text', 42\n\n\n\n\n\n\n\n"
  ]
}