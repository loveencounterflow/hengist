{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require '../../../apps/guy-test'\nequals                    = require '../../../apps/guy-test/node_modules/intertype/deps/jkroso-equals'\nTMP_types                 = new ( require 'intertype' ).Intertype()\n#-----------------------------------------------------------------------------------------------------------\n# s                         = ( name ) -> Symbol.for  name\n# ps                        = ( name ) -> Symbol      name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n\n############################################################################################################\n#\n# #===========================================================================================================\n# isa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n# as_object = ( x ) ->\n#   return x unless isa_object x\n#   R       = {}\n#   R[ k ]  = as_object v for k, v of x\n#   return R\n\n#===========================================================================================================\nsample_declarations =\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  float:                  ( x ) -> Number.isFinite x\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n\n\n#===========================================================================================================\n###\n\nMethod to replace `T.throws()` and `try_and_show()`; takes 2, 3, or 4 arguments; with 4 arguments, second\nargument should be error class\n\n###\nthrows = ( T, matcher, f ) ->\n  switch arity = arguments.length\n    when 2 then [ T, matcher, f, ] = [ T, null, matcher, ]\n    when 3 then null\n    else throw new Error \"`throws()` needs 2 or 3 arguments, got #{arity}\"\n  #.........................................................................................................\n  error       = null\n  is_matching = null\n  #.........................................................................................................\n  try ( urge '^992-1^', \"`throws()` result of call:\", f() ) catch error\n    #.......................................................................................................\n    if matcher?\n      is_matching = false\n      switch matcher_type = TMP_types.type_of matcher\n        when 'text'\n          is_matching = error.message is matcher\n        when 'regex'\n          matcher.lastIndex = 0\n          is_matching = matcher.test error.message\n        else\n          throw new Error \"^992-2^ expected a regex or a text, got a #{matcher_type}\"\n      if is_matching\n        help '^992-3^', \"OK           \", reverse error.message\n      else\n        urge '^992-4^', \"error        \", reverse error.message\n        warn '^992-5^', \"doesn't match\", reverse rpr matcher\n        T?.fail \"^992-6^ error #{rpr error.message} doesn't match #{rpr matcher}\"\n    #.......................................................................................................\n    else\n      help '^992-7^', \"error        \", reverse error.message\n  #.........................................................................................................\n  unless error?\n    warn '^992-8^', reverse message = \"`throws()`: expected an error but none was thrown\"\n    T?.fail \"^992-9^ `throws()`: expected an error but none was thrown\"\n  #.........................................................................................................\n  return null\n\n#===========================================================================================================\neq = ( ref, T, result, matcher ) ->\n  ref = ref.padEnd 15\n  if T?\n    T.eq result, matcher\n  else\n    if equals result, matcher\n      help ref, \"EQ OK\"\n    else\n      warn ref, \"not equal: \"\n      warn ref, \"result:    \", rpr result\n      warn ref, \"matcher:   \", rpr matcher\n  return null\n\n#===========================================================================================================\ntry_and_show = ( T, f ) ->\n  error = null\n  try ( urge '^992-10^', \"`try_and_show():` result of call:\", f() ) catch error\n    help '^992-11^', reverse \"`try_and_show()`: #{rpr error.message}\"\n  unless error?\n    warn '^992-12^', reverse message = \"`try_and_show()`: expected an error but none was thrown\"\n    T?.fail \"^992-13^ `try_and_show()`: expected an error but none was thrown\"\n  return null\n\n#===========================================================================================================\nsafeguard = ( T, f ) ->\n  error = null\n  try f() catch error\n    throw error unless T?\n    warn '^992-14^', reverse message = \"`safeguard()`: #{rpr error.message}\"\n    T?.fail message\n  return null\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTYPE     = require '../../../apps/intertype'\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  T?.eq ( TMP_types.isa.undefined INTERTYPE.types.get_isa                       ), true\n  T?.eq ( TMP_types.isa.undefined INTERTYPE.types.get_isa_optional              ), true\n  T?.eq ( TMP_types.isa.undefined INTERTYPE.types.get_validate                  ), true\n  T?.eq ( TMP_types.isa.undefined INTERTYPE.types.get_validate_optional         ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types._get_isa                      ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types._get_isa_optional             ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types._get_validate                 ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types._get_validate_optional        ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.isa                           ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.optional                  ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.validate                      ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.validate.optional             ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.boolean                   ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.optional.boolean          ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.validate.boolean              ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.validate.optional.boolean     ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.create                        ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.text                      ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.create.text                   ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.declarations                  ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.declarations.text             ), true\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_types_object = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  types         = new INTERTYPE.Intertype_minimal sample_declarations\n  T?.eq ( types.isa.boolean           false               ), true\n  T?.eq ( types.isa.boolean           true                ), true\n  T?.eq ( types.isa.boolean           null                ), false\n  T?.eq ( types.isa.boolean           1                   ), false\n  T?.eq ( types.isa.optional.boolean  false               ), true\n  T?.eq ( types.isa.optional.boolean  true                ), true\n  T?.eq ( types.isa.optional.boolean  null                ), true\n  T?.eq ( types.isa.optional.boolean  1                   ), false\n  #.........................................................................................................\n  T?.eq ( types.validate.boolean               false      ), false\n  T?.eq ( types.validate.boolean               true       ), true\n  T?.eq ( types.validate.optional.boolean      true       ), true\n  T?.eq ( types.validate.optional.boolean      false      ), false\n  T?.eq ( types.validate.optional.boolean      undefined  ), undefined\n  T?.eq ( types.validate.optional.boolean      null       ), null\n  try_and_show T,                           -> types.validate.boolean           1\n  try_and_show T,                           -> types.validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> types.validate.boolean           1\n  throws T, /expected an optional boolean/, -> types.validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( types.type_of null            ), 'null'\n  T?.eq ( types.type_of undefined       ), 'undefined'\n  T?.eq ( types.type_of false           ), 'boolean'\n  T?.eq ( types.type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( types.type_of {}              ), 'object'\n  T?.eq ( types.type_of NaN             ), 'unknown'\n  T?.eq ( types.type_of +Infinity       ), 'unknown'\n  T?.eq ( types.type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  debug '^4324^', 'null           ', types.declarations.null\n  debug '^4324^', 'function       ', types.declarations.function\n  debug '^4324^', 'boolean        ', types.declarations.boolean\n  debug '^4324^', 'text           ', types.declarations.text\n  debug '^4324^', 'asyncfunction  ', types.declarations.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.isa.null\n  debug '^4324^', 'function       ', types.isa.function\n  debug '^4324^', 'boolean        ', types.isa.boolean\n  debug '^4324^', 'text           ', types.isa.text\n  debug '^4324^', 'asyncfunction  ', types.isa.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.isa.optional.null\n  debug '^4324^', 'function       ', types.isa.optional.function\n  debug '^4324^', 'boolean        ', types.isa.optional.boolean\n  debug '^4324^', 'text           ', types.isa.optional.text\n  debug '^4324^', 'asyncfunction  ', types.isa.optional.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.validate.null\n  debug '^4324^', 'function       ', types.validate.function\n  debug '^4324^', 'boolean        ', types.validate.boolean\n  debug '^4324^', 'text           ', types.validate.text\n  debug '^4324^', 'asyncfunction  ', types.validate.asyncfunction\n  T?.eq ( types.isa.asyncfunction.name               ), 'isa.asyncfunction'\n  T?.eq ( types.isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n  T?.eq ( types.validate.asyncfunction.name          ), 'validate.asyncfunction'\n  T?.eq ( types.validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n  T?.eq types.declarations.null?.type,          'null'\n  T?.eq types.declarations.function?.type,      'function'\n  T?.eq types.declarations.boolean?.type,       'boolean'\n  T?.eq types.declarations.text?.type,          'text'\n  T?.eq types.declarations.asyncfunction?.type, 'asyncfunction'\n  T?.eq types.isa.null?.name,                   'isa.null'\n  T?.eq types.isa.function?.name,               'isa.function'\n  T?.eq types.isa.boolean?.name,                'isa.boolean'\n  T?.eq types.isa.text?.name,                   'isa.text'\n  T?.eq types.isa.asyncfunction?.name,          'isa.asyncfunction'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_standalone_methods = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n  T?.eq ( isa.boolean           false               ), true\n  T?.eq ( isa.boolean           true                ), true\n  T?.eq ( isa.boolean           null                ), false\n  T?.eq ( isa.boolean           1                   ), false\n  T?.eq ( isa.unknown           1                   ), false\n  T?.eq ( isa.unknown           Infinity            ), true\n  T?.eq ( isa.optional.boolean  false               ), true\n  T?.eq ( isa.optional.boolean  true                ), true\n  T?.eq ( isa.optional.boolean  null                ), true\n  T?.eq ( isa.optional.boolean  1                   ), false\n  T?.eq ( isa.optional.unknown  1                   ), false\n  T?.eq ( isa.optional.unknown  Infinity            ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  #.........................................................................................................\n  T?.eq ( validate.boolean               false      ), false\n  T?.eq ( validate.boolean               true       ), true\n  T?.eq ( validate.optional.boolean      true       ), true\n  T?.eq ( validate.optional.boolean      false      ), false\n  T?.eq ( validate.optional.boolean      undefined  ), undefined\n  T?.eq ( validate.optional.boolean      null       ), null\n  try_and_show T,                           -> validate.boolean           1\n  try_and_show T,                           -> validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> validate.boolean           1\n  throws T, /expected an optional boolean/, -> validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( type_of null            ), 'null'\n  T?.eq ( type_of undefined       ), 'undefined'\n  T?.eq ( type_of false           ), 'boolean'\n  T?.eq ( type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( type_of {}              ), 'object'\n  T?.eq ( type_of NaN             ), 'unknown'\n  T?.eq ( type_of +Infinity       ), 'unknown'\n  T?.eq ( type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  T?.eq ( isa.asyncfunction.name               ), 'isa.asyncfunction'\n  T?.eq ( isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n  T?.eq ( validate.asyncfunction.name          ), 'validate.asyncfunction'\n  T?.eq ( validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n  #.........................................................................................................\n  throws T, /expected 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.float()\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@methods_check_arity = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n  #.........................................................................................................\n  throws T, /expected 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.float()\n  throws T, /expected 1 arguments, got 2/, -> isa.optional.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.optional.float()\n  throws T, /expected 1 arguments, got 2/, -> validate.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> validate.float()\n  throws T, /expected 1 arguments, got 2/, -> validate.optional.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> validate.optional.float()\n  throws T, /expected 1 arguments, got 2/, -> type_of 3, 4\n  throws T, /expected 1 arguments, got 0/, -> type_of()\n  try_and_show T, -> isa.float 3, 4\n  try_and_show T, -> isa.float()\n  try_and_show T, -> isa.optional.float 3, 4\n  try_and_show T, -> isa.optional.float()\n  try_and_show T, -> validate.float 3, 4\n  try_and_show T, -> validate.float()\n  try_and_show T, -> validate.optional.float 3, 4\n  try_and_show T, -> validate.optional.float()\n  try_and_show T, -> type_of 3, 4\n  try_and_show T, -> type_of()\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_on_missing_type = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype()\n  #.........................................................................................................\n  try_and_show T, -> isa.quux\n  try_and_show T, -> isa.quux()\n  try_and_show T, -> isa.quux 3\n  try_and_show T, -> isa.quux 3, 4\n  try_and_show T, -> isa.optional.quux\n  try_and_show T, -> isa.optional.quux()\n  try_and_show T, -> isa.optional.quux 3\n  try_and_show T, -> isa.optional.quux 3, 4\n  try_and_show T, -> validate.quux\n  try_and_show T, -> validate.quux()\n  try_and_show T, -> validate.quux 3\n  try_and_show T, -> validate.quux 3, 4\n  try_and_show T, -> validate.optional.quux\n  try_and_show T, -> validate.optional.quux()\n  try_and_show T, -> validate.optional.quux 3\n  try_and_show T, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  throws T, /unknown type 'quux'/, -> isa.quux\n  throws T, /unknown type 'quux'/, -> isa.quux()\n  throws T, /unknown type 'quux'/, -> isa.quux 3\n  throws T, /unknown type 'quux'/, -> isa.quux 3, 4\n  throws T, /unknown type 'quux'/, -> isa.optional.quux\n  throws T, /unknown type 'quux'/, -> isa.optional.quux()\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.quux\n  throws T, /unknown type 'quux'/, -> validate.quux()\n  throws T, /unknown type 'quux'/, -> validate.quux 3\n  throws T, /unknown type 'quux'/, -> validate.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.optional.quux\n  throws T, /unknown type 'quux'/, -> validate.optional.quux()\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_optional_is_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  throws T, /not allowed to re-declare type 'optional'/, -> new INTERTYPE.Intertype_minimal \\\n    { optional: ( ( x ) -> true ), }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_wrong_type_of_isa_test_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  debug '^509-1^'; try_and_show T, -> new Intertype { foo: ( -> ), }\n  debug '^509-2^'; try_and_show T, -> new Intertype { foo: ( ( a, b ) -> ), }\n  debug '^509-3^'; try_and_show T, -> new Intertype { foo: true, }\n  debug '^509-4^'; try_and_show T, -> new Intertype { foo: undefined, }\n  debug '^509-5^'; try_and_show T, -> new Intertype { foo: null, }\n  debug '^509-6^'; try_and_show T, -> new Intertype { foo: {}, }\n  debug '^509-7^'; try_and_show T, -> new Intertype { foo: { test: null, }, }\n  debug '^509-8^'; try_and_show T, -> new Intertype { foo: { test: false, }, }\n  debug '^509-9^'; try_and_show T, -> new Intertype { foo: { test: ( ( a, b ) -> ), }, }\n  debug '^509-10^'; try_and_show T, -> new Intertype { foo: 'quux', }\n  throws T, /expected function with 1 parameters, got one with 0/, -> new Intertype { foo: ( -> ), }\n  throws T, /expected function with 1 parameters, got one with 2/, -> new Intertype { foo: ( ( a, b ) -> ), }\n  throws T, /expected type name, test method, or object, got a boolean/,    -> new Intertype { foo: true, }\n  throws T, /expected type name, test method, or object, got a undefined/,  -> new Intertype { foo: undefined, }\n  throws T, /expected type name, test method, or object, got a null/,       -> new Intertype { foo: null, }\n  throws T, /expected type name, test method, or object, got a undefined/,  -> new Intertype { foo: {}, }\n  throws T, /expected type name, test method, or object, got a null/,       -> new Intertype { foo: { test: null, }, }\n  throws T, /expected type name, test method, or object, got a boolean/,    -> new Intertype { foo: { test: false, }, }\n  throws T, /expected function with 1 parameters, got one with 2/, -> new Intertype { foo: { test: ( ( a, b ) -> ), }, }\n  throws T, /unknown type 'quux'/, -> new Intertype { foo: 'quux', }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@allow_declaration_objects = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    types = new Intertype_minimal declarations\n    T?.eq ( TMP_types.isa.function types.isa.integer  ), true\n    T?.eq ( types.isa.integer.length                  ), 1\n    T?.eq ( types.isa.integer 123                     ), true\n    T?.eq ( types.isa.integer 123.456                 ), false\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@create_entries_must_be_sync_functions = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      create:   -> await 0\n    try_and_show T, -> new Intertype_minimal declarations\n    throws T, /expected a function for `create` entry of type 'integer', got a asyncfunction/, -> new Intertype_minimal declarations\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@template_methods_must_be_nullary = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.foolist =\n      test:     ( x ) -> true\n      template: ( n ) -> [ n, ]\n    try_and_show T, -> new Intertype_minimal declarations\n    throws T, /template method for type 'foolist' has arity 1 but must be nullary/, -> new Intertype_minimal declarations\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@intertype_knows_its_base_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { isa } = require '../../../apps/intertype'\n  #.........................................................................................................\n  T?.eq ( isa.basetype 'optional'   ), false\n  T?.eq ( isa.basetype 'anything'   ), true\n  T?.eq ( isa.basetype 'nothing'    ), true\n  T?.eq ( isa.basetype 'something'  ), true\n  T?.eq ( isa.basetype 'null'       ), true\n  T?.eq ( isa.basetype 'undefined'  ), true\n  T?.eq ( isa.basetype 'unknown'    ), true\n  T?.eq ( isa.basetype 'integer'    ), false\n  T?.eq ( isa.basetype 'float'      ), false\n  T?.eq ( isa.basetype 'basetype'   ), false\n  T?.eq ( isa.basetype 'quux'       ), false\n  T?.eq ( isa.basetype 'toString'   ), false\n  T?.eq ( isa.basetype null         ), false\n  T?.eq ( isa.basetype undefined    ), false\n  T?.eq ( isa.basetype 4            ), false\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@disallow_licensed_overrides = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      float:\n        test:       ( x ) -> x is 'float'\n    try_and_show T, -> ( types.declare overrides )\n    throws T, /not allowed to re-declare type 'float'/, -> ( types.declare overrides )\n    #.......................................................................................................\n    ### pre-existing declaration remains valid: ###\n    T?.eq ( types.isa.float 4       ), true\n    T?.eq ( types.isa.float 'float' ), false\n    return null\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      float:\n        override:   true\n        test:       ( x ) -> x is 'float'\n    throws T, /not allowed to re-declare type 'float'/, -> ( types.declare overrides )\n    return null\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      anything:\n        override:   true\n        test:       ( x ) -> true\n    try_and_show T, -> ( types.declare overrides )\n    throws T, /not allowed to re-declare basetype 'anything'/, -> ( types.declare overrides )\n    #.......................................................................................................\n    ### pre-existing declaration remains valid: ###\n    T?.eq ( types.isa.anything 4       ), true\n    T?.eq ( types.isa.anything 'float' ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_create_types_with_templates_and_create = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    declarations.text = { template: '', test: ( ( x ) -> ( typeof x ) is 'string' ), }\n    declarations.float =\n      test:     ( x ) -> Number.isFinite x\n      create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n      template: 0\n    declarations.nan = ( x ) -> Number.isNaN x\n    #.......................................................................................................\n    types = new Intertype_minimal declarations\n    T?.eq ( TMP_types.isa.object types.declarations       ), true\n    T?.eq ( TMP_types.isa.object types.declarations.float ), true\n    T?.eq ( TMP_types.isa.object types.declarations.text  ), true\n    #.......................................................................................................\n    try_and_show T, -> types.create.boolean()\n    throws T, /type declaration of 'boolean' has no `create` and no `template` entries, cannot be created/, \\\n      -> types.create.boolean()\n    try_and_show T, -> types.create.text 'foo'\n    throws T, /expected 0 arguments, got 1/, -> types.create.text 'foo'\n    #.......................................................................................................\n    T?.eq types.create.text(), ''\n    T?.eq types.create.integer(), 0\n    T?.eq types.create.float(), 0\n    T?.eq ( types.create.float '123.45' ), 123.45\n    try_and_show T, -> types.create.float '***'\n    throws T, /expected `create\\.float\\(\\)` to return a float but it returned a nan/, -> types.create.float '***'\n    #.......................................................................................................\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@intertype_minimal_has_only_base_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  types = new Intertype_minimal()\n  T?.eq ( Object.keys types.declarations ).sort(), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown' ]\n  types.declare { z: ( ( x ) -> ), }\n  T?.eq ( Object.keys types.declarations ).sort(), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown', 'z' ]\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_type_name_for_test = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    # try_and_show T, -> types.declare { z: 'quux', }\n    throws T, /unknown type 'quux'/, -> types.declare { z: 'quux', }\n    types.declare { z: 'float', }\n    T?.eq ( types.isa.z 12 ), true\n    T?.eq types.isa.float.name, 'isa.float'\n    T?.eq types.declarations.float.type, 'float'\n    T?.eq types.declarations.float.test.name, 'float'\n    T?.eq types.isa.z.name, 'isa.z'\n    T?.eq types.declarations.z.type, 'z'\n    T?.eq types.declarations.z.test.name, 'z' # ?\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    # try_and_show T, -> types.declare { z: { test: 'quux', }, }\n    throws T, /unknown type 'quux'/, -> types.declare { z: { test: 'quux', }, }\n    types.declare { z: { test: 'float', }, }\n    T?.eq ( types.isa.z 12 ), true\n    T?.eq types.isa.float.name, 'isa.float'\n    T?.eq types.declarations.float.type, 'float'\n    T?.eq types.declarations.float.test.name, 'float'\n    T?.eq types.isa.z.name, 'isa.z'\n    T?.eq types.declarations.z.type, 'z'\n    T?.eq types.declarations.z.test.name, 'z'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@resolve_dotted_type = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    T?.eq ( Reflect.has types.declarations, 'foo'         ), false\n    types.declare { foo: 'object', }\n    T?.eq ( Reflect.has types.declarations, 'foo'         ), true\n    T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), false\n    types.declare { 'foo.bar': 'object', }\n    T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), true\n    T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), false\n    types.declare { 'foo.bar.baz': 'float', }\n    T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), true\n    T?.eq ( types.isa.foo.bar.baz null ), false\n    T?.eq ( types.isa.foo.bar.baz 4 ), true\n    T?.eq ( types.isa.foo.bar.baz +Infinity ), false\n    # T?.eq types.declarations[ 'foo.bar.baz' ].test, types.declarations.float.test\n    # types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n    try_and_show T, -> types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n    return null\n  # #.........................................................................................................\n  # do =>\n  #   types = new Intertype()\n  #   T?.eq ( Reflect.has types.declarations, 'foo'         ), false\n  #   types.declare { foo: 'object', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo'         ), true\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), false\n  #   types.declare { 'foo.bar': 'object', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), true\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), false\n  #   types.declare { 'foo.bar.baz': 'optional.float', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), true\n  #   T?.eq ( types.isa.foo.bar.baz null ), true\n  #   T?.eq ( types.isa.foo.bar.baz 4 ), true\n  #   T?.eq ( types.isa.foo.bar.baz +Infinity ), false\n  #   # T?.eq types.declarations[ 'foo.bar.baz' ].test, types.declarations.float.test\n  #   # types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n  #   try_and_show T, -> types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n  #   return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@dotted_types_are_test_methods = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { quantity: 'object', }\n    types.declare { 'quantity.q': 'float', }\n    types.declare { 'quantity.u': 'text', }\n    T?.eq types.isa[ 'quantity.q' ], types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n    T?.eq types.isa[ 'quantity.q' ], types.isa.quantity.q\n    # debug '^409-1^', types.declarations\n    T?.eq ( types.isa.quantity {}                 ), false\n    T?.eq ( types.isa.quantity { q: {}, }         ), false\n    T?.eq ( types.isa.quantity { q: 3, }          ), false\n    T?.eq ( types.isa.quantity { q: 3, u: 'm', }  ), true\n    T?.eq ( types.isa.quantity.q 3                ), true\n    T?.eq ( types.isa.quantity.q 3.1              ), true\n    T?.eq ( types.isa.quantity.q '3.1'            ), false\n    T?.eq ( types.isa.quantity.u 'm'              ), true\n    T?.eq ( types.isa.quantity.u null             ), false\n    T?.eq ( types.isa.quantity.u 3                ), false\n    debug '^433-1^', types.declarations[ 'quantity' ]\n    debug '^433-1^', types.declarations[ 'quantity.q' ]\n    debug '^433-1^', types.declarations[ 'quantity.u' ]\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    # T?.eq types.isa[ 'quantity.q' ], types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n    # T?.eq types.isa[ 'quantity.q' ], types.isa.quantity.q\n    T?.eq ( types.isa.person.address.city.name 'P'  ), true\n    T?.eq ( types.isa.person.address.city.name 1234 ), false\n    T?.eq ( types.isa.person 1234 ), false\n    T?.eq ( types.isa.person { name: 'Bob', } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: {}, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: {}, }, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: { name: 'P', }, }, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: { name: 'P', postcode: 'SO36', }, }, } ), true\n    T?.eq ( types.isa.person.address.city.name     'P'                                ), true\n    T?.eq ( types.isa.person.address.city.postcode 'SO36'                             ), true\n    T?.eq ( types.isa.person.address.city {         name: 'P', postcode: 'SO36', }    ), true\n    T?.eq ( types.isa.person.address      { city: { name: 'P', postcode: 'SO36', }, } ), true\n    help '^322-1^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person'               ].sub_tests )\n    help '^322-2^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address'       ].sub_tests )\n    help '^322-3^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address.city'  ].sub_tests )\n    T?.eq ( Object.keys types.declarations[ 'person'               ].sub_tests ), [ 'name', 'address', ]\n    T?.eq ( Object.keys types.declarations[ 'person.address'       ].sub_tests ), [ 'city', ]\n    T?.eq ( Object.keys types.declarations[ 'person.address.city'  ].sub_tests ), [ 'name', 'postcode', ]\n    T?.eq ( types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address'      ].sub_tests ), true\n    T?.eq ( types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address.city' ].sub_tests ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':      'float', }\n    types.declare { 'foo.bar':  'text',   }\n    do =>\n      d = 3\n      # d.bar = '?' # Cannot create property in strict mode, so can never satisfy test\n      T?.eq ( types.isa.foo d ), false\n      return null\n    do =>\n      d = new Number 3\n      d.bar = '?'\n      T?.eq ( d.bar ), '?'\n      # still won't work b/c `float` doesn't accept objects (which is a good thing):\n      T?.eq ( types.isa.foo d ), false\n      return null\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':        'object', }\n    types.declare { 'foo.bind':   'float',   }\n    types.declare { 'foo.apply':  'float',   }\n    types.declare { 'foo.call':   'float',   }\n    types.declare { 'foo.name':   'float',   }\n    types.declare { 'foo.length': 'float',   }\n    T?.eq ( types.isa.foo {} ), false\n    T?.eq ( types.isa.foo { bind: 1, apply: 2, call: 3, name: 4, length: 5, } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':        'object',           }\n    types.declare { 'foo.text':   ( ( x ) -> x is 1 ) }\n    types.declare { 'foo.float':  ( ( x ) -> x is 2 ) }\n    T?.eq ( types.isa.foo {} ), false\n    T?.eq ( types.isa.foo { text: 1, float: 2, } ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_refs_to_dotted_types = ( T, done ) ->\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       ( ( x ) -> @isa.person.address.city x ), }\n    # debug '^434-1^', types.declarations[ 'person.address.city' ]\n    # debug '^434-2^', types.declarations.mycity\n    urge '^342-1^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), false\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       'person.address.city', }\n    # debug '^434-3^', types.declarations[ 'person.address.city' ]\n    # debug '^434-4^', types.declarations.mycity\n    urge '^342-2^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), false\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       ( ( x ) -> @isa.optional.person.address.city x ), }\n    # debug '^434-5^', types.declarations[ 'person.address.city' ]\n    # debug '^434-6^', types.declarations.mycity\n    urge '^342-3^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.optional.person.address.city {} ), false\n    T?.eq ( types.isa.optional.person.address.city null ), true\n    T?.eq ( types.isa.optional.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), true\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @can_use_optional_refs_to_dotted_types = ( T, done ) ->\n#   { Intertype } = require '../../../apps/intertype'\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { maybefloat1: 'optional.float', }\n#     #.......................................................................................................\n#     T?.eq ( isa.float       null  ), false\n#     T?.eq ( isa.float       true  ), false\n#     T?.eq ( isa.float       0     ), true\n#     T?.eq ( isa.maybefloat1 null  ), true\n#     T?.eq ( isa.maybefloat1 true  ), false\n#     T?.eq ( isa.maybefloat1 0     ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { 'q':              'object', }\n#     declare { 'q.maybefloat2':  'optional.float', }\n#     #.......................................................................................................\n#     T?.eq ( isa.q             null                    ), false\n#     T?.eq ( isa.q             {}                      ), true\n#     T?.eq ( isa.q             { maybefloat2: null }   ), true\n#     T?.eq ( isa.q             { maybefloat2: false }  ), false\n#     T?.eq ( isa.q             { maybefloat2: 3 }      ), true\n#     T?.eq ( isa.q.maybefloat2  null                   ), true\n#     T?.eq ( isa.q.maybefloat2  true                   ), false\n#     T?.eq ( isa.q.maybefloat2  0                      ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { 'q':              'optional.object', }\n#     declare { 'q.maybefloat3':  'optional.float', }\n#     # isa.q null\n#     #.......................................................................................................\n#     safeguard T, => T?.eq ( isa.q             null                    ), true\n#     safeguard T, => T?.eq ( isa.q             {}                      ), true\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: null }   ), true\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: false }  ), false\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: 3 }      ), true\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  null                   ), true\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  true                   ), false\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  0                      ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       validate\n#       isa } = types\n#     declare { 'person':                       'object', }\n#     declare { 'person.name':                  'text',   }\n#     declare { 'person.address':               'object', }\n#     declare { 'person.address.city':          'object', }\n#     declare { 'person.address.city.name':     'text',   }\n#     declare { 'person.address.city.postcode': 'text',   }\n#     declare { 'maybesomeone':                 'optional.person', }\n#     declare { 'mycity':                       'optional.person.address.city', }\n#     #.......................................................................................................\n#     T?.eq ( isa.person        null                                                            ), false\n#     T?.eq ( isa.person        {}                                                              ), false\n#     T?.eq ( isa.person        { name: 'Fred',                                               } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: {},                                  } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: { city: 'Town', },                   } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  } ), true # ???????????????????????\n#     debug '^12434^', validate.person        { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  }\n#     T?.eq ( isa.maybesomeone  null                                                            ), true\n#     # T?.eq ( isa.maybesomeone  {}                                                              ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred',                                               } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: {},                                  } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: { city: 'Town', },                   } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  } ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@forbidden_to_define_fields_on_basetypes = ( T, done ) ->\n  T?.halt_on_error()\n  { Intertype\n    declarations  } = require '../../../apps/intertype'\n  #.........................................................................................................\n  await do =>\n    types         = new Intertype()\n    { declare\n      validate\n      isa } = types\n    try_and_show T, -> types.declare { 'optional.d':    ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'anything.d':    ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'nothing.d':     ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'something.d':   ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'null.d':        ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'undefined.d':   ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'unknown.d':     ( ( x ) -> ), }\n    throws T, /illegal use of 'optional' in declaration of type 'optional.d'/,             -> types.declare { 'optional.d':    ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'anything' in declaration of type 'anything.d'/,   -> types.declare { 'anything.d':    ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'nothing' in declaration of type 'nothing.d'/,     -> types.declare { 'nothing.d':     ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'something' in declaration of type 'something.d'/, -> types.declare { 'something.d':   ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'null' in declaration of type 'null.d'/,           -> types.declare { 'null.d':        ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'undefined' in declaration of type 'undefined.d'/, -> types.declare { 'undefined.d':   ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'unknown' in declaration of type 'unknown.d'/,     -> types.declare { 'unknown.d':     ( ( x ) -> ), }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@internal_type_of_method = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype\n    declarations  } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.__type_of declarations, null          ), 'null'\n    T?.eq ( types.__type_of declarations, undefined     ), 'undefined'\n    T?.eq ( types.__type_of declarations, 4             ), 'float'\n    T?.eq ( types.__type_of declarations, ->            ), 'function'\n    T?.eq ( types.__type_of declarations, -> await null ), 'asyncfunction'\n    T?.eq ( types.__type_of declarations, {}            ), 'object'\n    T?.eq ( types.__type_of declarations, []            ), 'list'\n    T?.eq ( types.__type_of declarations, +Infinity     ), 'infinity'\n    T?.eq ( types.__type_of declarations, -Infinity     ), 'infinity'\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@validate_dotted_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    { validate }  = types\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    #.......................................................................................................\n    throws T, -> validate.person null\n    throws T, -> validate.person.address null\n    throws T, -> validate.person.address.city null\n    throws T, -> validate.person.address.city.postcode null\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city.postcode 3 ), false\n    throws T, /expected a person.address.city.postcode/, -> validate.person.address.city.postcode 3\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { name: 'P', } ), false\n    throws T, /expected a person.address.city/, -> validate.person.address.city { name: 'P', }\n    # #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { postcode: '3421', } ), false\n    throws T, /expected 1 arguments, got 0/, -> validate.person.address.city()\n    throws T, /expected a person.address.city/, -> validate.person.address.city null\n    throws T, /expected a person.address.city/, -> validate.person.address.city '3421'\n    throws T, /expected a person.address.city/, -> validate.person.address.city { postcode: '3421', }\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: '3421', } ), true\n    T?.eq ( validate.person.address.city { name: 'P', postcode: '3421', } ), { name: 'P', postcode: '3421', }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_namespaces = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations =\n      'foo.bar':      ( x ) -> x is 'foo.bar'\n      'foo.bar.baz':  ( x ) -> x is 'foo.bar.baz'\n    try_and_show T, -> types = new Intertype declarations\n    throws T, /unknown partial type 'foo'/, -> types = new Intertype declarations\n    return null\n  #.........................................................................................................\n  do =>\n    declarations =\n      'quantity':         'object'\n      'quantity.q':       'float'\n      'quantity.u':       'text'\n    types = new Intertype declarations\n    T?.eq ( types.isa.quantity {}                   ), false\n    T?.eq ( types.isa.quantity { q: 12, u: 'kg', }  ), true\n    T?.eq ( types.isa[ 'quantity.q' ] 12            ), true\n    T?.eq ( types.isa[ 'quantity.u' ] 'kg'          ), true\n    T?.eq ( types.isa.quantity.q 12                 ), true\n    T?.eq ( types.isa.quantity.u 'kg'               ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@disallow_rhs_optional = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    ### TAINT observe the out-comment messages would perhaps make more sense as they are more specific ###\n    T?.eq ( ( new Intertype() ).declare { foo: 'float', } ), null\n    T?.eq ( ( new Intertype() ).declare { foo: 'text',  } ), null\n    # ( new Intertype() ).declare { foo: 'optional', }\n    throws T, /illegal use of 'optional' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'optional', }\n    throws T, /unknown type 'qqq'/,             -> ( new Intertype() ).declare { foo: 'qqq', }\n    throws T, /illegal use of 'optional' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'optional.float', }\n    throws T, /illegal use of basetype 'anything' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'anything.float', }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@parallel_behavior_of_isa_validate_mandatory_and_optional = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  # #.........................................................................................................\n  # do =>\n  #   { isa\n  #     validate  } = new Intertype\n  #       normalfloat: ( ( x ) -> ( @isa.float x ) and ( 0 <= x <= 1 ) )\n  #   T?.eq ( isa.normalfloat                     0     ), true\n  #   T?.eq ( isa.normalfloat                     null  ), false\n  #   T?.eq ( isa.normalfloat                     -1    ), false\n  #   T?.eq ( isa.normalfloat                     '?'   ), false\n  #   T?.eq ( isa.optional.normalfloat            0     ), true\n  #   T?.eq ( isa.optional.normalfloat            null  ), true\n  #   T?.eq ( isa.optional.normalfloat            -1    ), false\n  #   T?.eq ( isa.optional.normalfloat            '?'   ), false\n  #   T?.eq ( validate.normalfloat                0     ), 0\n  #   T?.eq ( validate.optional.normalfloat       0     ), 0\n  #   T?.eq ( validate.optional.normalfloat       null  ), null\n  #   throws T, /expected a normalfloat, got a null/,             -> validate.normalfloat           null\n  #   throws T, /expected a normalfloat, got a float/,            -> validate.normalfloat           -1\n  #   throws T, /expected a normalfloat, got a text/,             -> validate.normalfloat           '?'\n  #   throws T, /expected an optional normalfloat, got a float/,  -> validate.optional.normalfloat  -1\n  #   throws T, /expected an optional normalfloat, got a text/,   -> validate.optional.normalfloat  '?'\n  #   return null\n  # #.........................................................................................................\n  do =>\n    my_types =\n      'quantity':     'object'\n      'quantity.q':   'float'\n      'quantity.u':   'text'\n      'foo':          'object'\n      'foo.bar':      'object'\n      'foo.bar.baz':  'float'\n    { isa\n      validate  } = types = new Intertype my_types\n    debug '^234244^', ( k for k of isa )\n    debug '^234244^', ( k for k of isa.optional )\n    eq '^t1^', T, ( isa.quantity            { q: 1, u: 'm', }   ), true\n    eq '^t2^', T, ( isa.quantity            null                ), false\n    eq '^t3^', T, ( isa.optional.quantity   { q: 2, u: 'm', }   ), true\n    eq '^t4^', T, ( isa.optional.quantity   null                ), true\n    eq '^t5^', T, ( validate.quantity               { q: 3, u: 'm', } ), { q: 3, u: 'm', }\n    eq '^t6^', T, ( validate.optional.quantity      { q: 4, u: 'm', } ), { q: 4, u: 'm', }\n    throws T, -> validate.quantity  { q: 5, }\n    # T?.eq ( isa.quantity                     null               ), false\n    # T?.eq ( isa.quantity                     -1                 ), false\n    # T?.eq ( isa.quantity                     '?'                ), false\n    # T?.eq ( isa.quantity.q                   '?'                ), false\n    # T?.eq ( isa.quantity.q                   3                  ), true\n    # T?.eq ( isa.optional.quantity            { q: 1, u: 'm', }  ), true\n    # T?.eq ( isa.optional.quantity            null               ), true\n    # T?.eq ( isa.optional.quantity            -1                 ), false\n    # T?.eq ( isa.optional.quantity            '?'                ), false\n    # T?.eq ( isa.optional.quantity.q          '?'                ), false\n    # T?.eq ( isa.optional.quantity.q          3                  ), true\n    # debug '^332-1^', isa.optional.quantity.q is Reflect.get isa, 'quantity.q'\n    # debug '^332-1^', isa.optional.quantity.q is isa[ 'optional.quantity.q' ]\n    # process.exit 111 #########################################################################################################\n    T?.eq ( validate.quantity                { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n    T?.eq ( validate.optional.quantity       { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n    T?.eq ( validate.optional.quantity       null               ), null\n    throws T, /expected a quantity, got a null/,              -> validate.quantity           null\n    throws T, /expected a quantity, got a float/,             -> validate.quantity           -1\n    throws T, /expected a quantity, got a text/,              -> validate.quantity           '?'\n    throws T, /expected a quantity, got a object/,            -> validate.quantity           { q: 1, } ### TAINT message should be more specific ###\n    throws T, /expected an optional quantity, got a float/,   -> validate.optional.quantity  -1\n    throws T, /expected an optional quantity, got a object/,  -> validate.optional.quantity  { q: 1, } ### TAINT message should be more specific ###\n    debug '^830-1^', ( k for k of isa )\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@_________________can_use_fields = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype\n      quantity:\n        fields:\n          q:    ''\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@minimal_type_of_results = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  { isa\n    validate\n    create\n    declare\n    type_of           } = new Intertype_minimal()\n  #.........................................................................................................\n  do =>\n    T?.eq ( type_of null              ), 'null'\n    T?.eq ( type_of undefined         ), 'undefined'\n    T?.eq ( type_of +Infinity         ), 'unknown'\n    T?.eq ( type_of 4                 ), 'unknown'\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   1          ), true\n    T?.eq ( isa.nothing    1          ), false\n    T?.eq ( isa.something  1          ), true\n    T?.eq ( isa.unknown    1          ), true\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   null       ), true\n    T?.eq ( isa.nothing    null       ), true\n    T?.eq ( isa.something  null       ), false\n    T?.eq ( isa.unknown    null       ), false\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   undefined  ), true\n    T?.eq ( isa.nothing    undefined  ), true\n    T?.eq ( isa.something  undefined  ), false\n    T?.eq ( isa.unknown    undefined  ), false\n    return null\n  #.........................................................................................................\n  do =>\n    throws T, /`optional` is not a legal type for `isa` methods/,       -> isa.optional 1\n    throws T, /`optional` is not a legal type for `validate` methods/,  -> validate.optional 1\n    throws T, /`optional` is not a legal type for `create` methods/,    -> create.optional 1\n    return null\n  #.........................................................................................................\n  do =>\n    try_and_show T?, -> declare 'anything',   ( x ) ->\n    try_and_show T?, -> declare 'nothing',    ( x ) ->\n    try_and_show T?, -> declare 'something',  ( x ) ->\n    try_and_show T?, -> declare 'null',       ( x ) ->\n    try_and_show T?, -> declare 'undefined',  ( x ) ->\n    try_and_show T?, -> declare 'unknown',    ( x ) ->\n    try_and_show T?, -> declare 'optional',   ( x ) ->\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  # T?.halt_on_error()\n  { Intertype_minimal, } = require '../../../apps/intertype'\n  #.........................................................................................................\n  declarations  =\n    integer:\n      test:     ( x ) -> Number.isInteger x\n      create:   ( p = null ) -> parseInt ( p ? @declarations.integer.template ), 10\n      template: 0\n    text:\n      template: ''\n      test:     ( ( x ) -> ( typeof x ) is 'string' )\n    float:\n      test:     ( x ) -> Number.isFinite x\n      create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n      template: 0\n  #.........................................................................................................\n  declarations = { sample_declarations..., declarations..., }\n  types = new Intertype_minimal declarations\n  #.........................................................................................................\n  debug '^233-1^', types.create.float '345.678'\n  debug '^233-1^', types.create.integer '345.678'\n  try_and_show null, -> types.create.float '***'\n  try_and_show null, -> types.create.integer '***'\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # @basic_functionality_using_types_object()\n  # test @basic_functionality_using_types_object\n  # @allow_declaration_objects()\n  # demo_1()\n  # @can_use_type_name_for_test()\n  # test @can_use_type_name_for_test\n  # await test @create_entries_must_be_sync_functions\n  # await test @template_methods_must_be_nullary\n  # @throw_instructive_error_on_missing_type()\n  # @disallow_licensed_overrides()\n  # await test @disallow_licensed_overrides\n  # @throw_instructive_error_when_wrong_type_of_isa_test_declared()\n  # await test @throw_instructive_error_when_wrong_type_of_isa_test_declared\n  # @resolve_dotted_type()\n  # test @resolve_dotted_type\n  # @dotted_types_are_test_methods()\n  # test @dotted_types_are_test_methods\n  # @can_use_refs_to_dotted_types()\n  # test @can_use_refs_to_dotted_types\n  # test @can_use_type_name_for_test\n  # @internal_type_of_method()\n  # test @internal_type_of_method\n  # @validate_dotted_types()\n  # test @validate_dotted_types\n  # @forbidden_to_define_fields_on_basetypes()\n  # test @forbidden_to_define_fields_on_basetypes\n  # @can_use_optional_refs_to_dotted_types()\n  # test @can_use_optional_refs_to_dotted_types\n  # @minimal_type_of_results()\n  # test @minimal_type_of_results\n  # @disallow_rhs_optional()\n  # test @disallow_rhs_optional\n  @parallel_behavior_of_isa_validate_mandatory_and_optional()\n  # test @parallel_behavior_of_isa_validate_mandatory_and_optional\n  await test @\n\n\n"
  ]
}