{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require '../../../apps/guy-test'\nTMP_types                 = new ( require 'intertype' ).Intertype()\n_equals                   = require '../../../apps/guy-test/node_modules/intertype/deps/jkroso-equals'\n# equals                    = require '/home/flow/jzr/intertype-legacy/deps/jkroso-equals.js'\n# equals                    = require '/home/flow/jzr/hengist/dev/intertype-2024-04-15/src/basics.test.coffee'\n# equals                    = require ( require 'util' ).isDeepStrictEqual\ntest_mode                 = 'throw_failures'\ntest_mode                 = 'throw_errors'\ntest_mode                 = 'failsafe'\n\n#===========================================================================================================\n# IMPLEMENT SET EQUALITY\n#-----------------------------------------------------------------------------------------------------------\n_set_contains = ( set, value ) ->\n  for element from set\n    return true if equals element, value\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\nequals = ( a, b ) ->\n  switch true\n    when TMP_types.isa.set a\n      return false unless TMP_types.isa.set b\n      return false unless a.size is b.size\n      for element from a\n        return false unless _set_contains b, element\n      return true\n  return _equals a, b\n\n#-----------------------------------------------------------------------------------------------------------\ntest_set_equality_by_value = ->\n  echo()\n  result    = [ 1, [ 2 ], ]\n  matcher1  = [ 1, [ 2 ], ]\n  matcher2  = [ 1, [ 3 ], ]\n  debug '^810-1^', equals result, matcher1\n  debug '^810-2^', equals result, matcher2\n  echo()\n  result    = new Set [ 1, 2, ]\n  matcher1  = new Set [ 1, 2, ]\n  matcher2  = new Set [ 1, 3, ]\n  debug '^810-3^', equals result, matcher1\n  debug '^810-4^', equals result, matcher2\n  echo()\n  result    = new Set [ 1, [ 2 ], ]\n  matcher1  = new Set [ 1, [ 2 ], ]\n  matcher2  = new Set [ 1, [ 3 ], ]\n  debug '^810-5^', equals result, matcher1\n  debug '^810-6^', equals result, matcher2\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n# s                         = ( name ) -> Symbol.for  name\n# ps                        = ( name ) -> Symbol      name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n\n############################################################################################################\n#\n# #===========================================================================================================\n# isa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n# as_object = ( x ) ->\n#   return x unless isa_object x\n#   R       = {}\n#   R[ k ]  = as_object v for k, v of x\n#   return R\n\n#===========================================================================================================\nsample_declarations =\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  float:                  ( x ) -> Number.isFinite x\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n\n\n#===========================================================================================================\n###\n\nMethod to replace `T.throws()` and `try_and_show()`; takes 2, 3, or 4 arguments; with 4 arguments, second\nargument should be error class\n\n###\nthrows = ( T, matcher, f ) ->\n  switch arity = arguments.length\n    when 2 then [ T, matcher, f, ] = [ T, null, matcher, ]\n    when 3 then null\n    else throw new Error \"`throws()` needs 2 or 3 arguments, got #{arity}\"\n  #.........................................................................................................\n  error       = null\n  is_matching = null\n  #.........................................................................................................\n  try ( urge '^992-1^', \"`throws()` result of call:\", f() ) catch error\n    #.......................................................................................................\n    if matcher?\n      is_matching = false\n      switch matcher_type = TMP_types.type_of matcher\n        when 'text'\n          is_matching = error.message is matcher\n        when 'regex'\n          matcher.lastIndex = 0\n          is_matching = matcher.test error.message\n        else\n          throw new Error \"^992-2^ expected a regex or a text, got a #{matcher_type}\"\n      if is_matching\n        help '^992-3^', \"OK           \", reverse error.message\n      else\n        urge '^992-4^', \"error        \", reverse error.message\n        warn '^992-5^', \"doesn't match\", reverse rpr matcher\n        T?.fail \"^992-6^ error #{rpr error.message} doesn't match #{rpr matcher}\"\n    #.......................................................................................................\n    else\n      help '^992-7^', \"error        \", reverse error.message\n  #.........................................................................................................\n  unless error?\n    warn '^992-8^', reverse message = \"`throws()`: expected an error but none was thrown\"\n    T?.fail \"^992-9^ `throws()`: expected an error but none was thrown\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n_match_error = ( error, matcher ) ->\n  switch matcher_type = TMP_types.type_of matcher\n    when 'text'\n      return error.message is matcher\n    when 'regex'\n      matcher.lastIndex = 0\n      return matcher.test error.message\n  return matcher_type\n\n#-----------------------------------------------------------------------------------------------------------\nthrows2 = ( T, f, matcher ) ->\n  throw new Error \"^992-1^ test method should be named, got #{rpr f}\" if ( ref = f.name ) is ''\n  error = null\n  #.........................................................................................................\n  try ( urge \"^#{ref}^ `throws()` result of call:\", f() ) catch error\n    unless matcher?\n      help \"^#{ref} ◀ throw2@1^ error        \", reverse error.message\n      T?.ok true\n      return null\n    #.......................................................................................................\n    switch matcher_type = _match_error error, matcher\n      when true\n        help \"^#{ref} ◀ throw2@2^ OK           \", reverse error.message\n        T?.ok true\n      when false\n        urge \"^#{ref} ◀ throw2@3^ error        \", reverse error.message\n        warn \"^#{ref} ◀ throw2@4^ doesn't match\", reverse rpr matcher\n        T?.fail \"^#{ref} ◀ throw2@5^ error #{rpr error.message} doesn't match #{rpr matcher}\"\n      else\n        message = \"expected a regex or a text, got a #{matcher_type}\"\n        warn \"^#{ref} ◀ throw2@6^\", reverse message\n        T?.fail \"^#{ref} ◀ throw2@7^ #{message}\"\n  #.........................................................................................................\n  unless error?\n    message = \"`throws()`: expected an error but none was thrown\"\n    warn \"^#{ref} ◀ throw2@8^\", reverse message\n    T?.fail \"^#{ref} ◀ throw2@9^ #{message}\"\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\neq = ( ref, T, result, matcher ) ->\n  ref = ref.padEnd 15\n  if equals result, matcher\n    help ref, \"EQ OK\"\n    T?.ok true\n  else\n    warn ref, ( reverse ' neq ' ), \"result:     \", ( reverse ' ' + ( rpr result   ) + ' ' )\n    warn ref, ( reverse ' neq ' ), \"matcher:    \", ( reverse ' ' + ( rpr matcher  ) + ' ' )\n    T?.ok false\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\neq2 = ( T, f, matcher ) ->\n  throw new Error \"^992-1^ test method should be named, got #{rpr f}\" if ( ref = f.name ) is ''\n  try ( result = f() ) catch error\n    message = \"`eq2()`: ^#{ref}^ expected a result but got an an error: #{error.message}\"\n    warn '^992-12^', reverse message\n    T?.fail \"^992-13^ #{message}\"\n    debug '^25235234^', { test_mode}\n    if test_mode is 'throw_errors'\n      throw new Error message\n  return eq ref, T, result, matcher\n\n#===========================================================================================================\ntry_and_show = ( T, f ) ->\n  error = null\n  try ( urge '^992-10^', \"`try_and_show():` result of call:\", f() ) catch error\n    help '^992-11^', reverse \"`try_and_show()`: #{rpr error.message}\"\n  unless error?\n    warn '^992-12^', reverse message = \"`try_and_show()`: expected an error but none was thrown\"\n    T?.fail \"^992-13^ `try_and_show()`: expected an error but none was thrown\"\n  return null\n\n#===========================================================================================================\nsafeguard = ( T, f ) ->\n  error = null\n  try f() catch error\n    # throw error unless T?\n    warn '^992-14^', reverse message = \"`safeguard()`: #{rpr error.message}\"\n    T?.fail message\n  return null\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTYPE     = require '../../../apps/intertype'\n  eq '^intertype-t1^', T, ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  eq '^intertype-t2^', T, ( TMP_types.isa.undefined INTERTYPE.types.get_isa                       ), true\n  eq '^intertype-t3^', T, ( TMP_types.isa.undefined INTERTYPE.types.get_isa_optional              ), true\n  eq '^intertype-t4^', T, ( TMP_types.isa.undefined INTERTYPE.types.get_validate                  ), true\n  eq '^intertype-t5^', T, ( TMP_types.isa.undefined INTERTYPE.types.get_validate_optional         ), true\n  eq '^intertype-t6^', T, ( TMP_types.isa.function  INTERTYPE.types._get_isa                      ), true\n  eq '^intertype-t7^', T, ( TMP_types.isa.function  INTERTYPE.types._get_isa_optional             ), true\n  eq '^intertype-t8^', T, ( TMP_types.isa.function  INTERTYPE.types._get_validate                 ), true\n  eq '^intertype-t9^', T, ( TMP_types.isa.function  INTERTYPE.types._get_validate_optional        ), true\n  eq '^intertype-t10^', T, ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  eq '^intertype-t11^', T, ( TMP_types.isa.object    INTERTYPE.types.isa                           ), true\n  # eq '^intertype-t12^', T, ( TMP_types.isa.function  INTERTYPE.types.isa.optional                  ), true\n  eq '^intertype-t13^', T, ( TMP_types.isa.object    INTERTYPE.types.validate                      ), true\n  # eq '^intertype-t14^', T, ( TMP_types.isa.function  INTERTYPE.types.validate.optional             ), true\n  eq '^intertype-t15^', T, ( TMP_types.isa.function  INTERTYPE.types.isa.boolean                   ), true\n  eq '^intertype-t16^', T, ( TMP_types.isa.function  INTERTYPE.types.isa.optional.boolean          ), true\n  eq '^intertype-t17^', T, ( TMP_types.isa.function  INTERTYPE.types.validate.boolean              ), true\n  eq '^intertype-t18^', T, ( TMP_types.isa.function  INTERTYPE.types.validate.optional.boolean     ), true\n  eq '^intertype-t19^', T, ( TMP_types.isa.object    INTERTYPE.types.create                        ), true\n  eq '^intertype-t20^', T, ( TMP_types.isa.function  INTERTYPE.types.isa.text                      ), true\n  eq '^intertype-t21^', T, ( TMP_types.isa.function  INTERTYPE.types.create.text                   ), true\n  eq '^intertype-t22^', T, ( TMP_types.isa.object    INTERTYPE.types.declarations                  ), true\n  eq '^intertype-t23^', T, ( TMP_types.isa.object    INTERTYPE.types.declarations.text             ), true\n  #.........................................................................................................\n  # eq '^intertype-t24^', T, ( INTERTYPE.types.isa.name           ), 'isa'\n  # eq '^intertype-t24^', T, ( INTERTYPE.types.evaluate.name      ), 'evaluate'\n  # eq '^intertype-t24^', T, ( INTERTYPE.types.validate.name      ), 'validate'\n  # eq '^intertype-t24^', T, ( INTERTYPE.types.create.name        ), 'create'\n  eq '^intertype-t24^', T, ( INTERTYPE.types.declare.name       ), 'declare'\n  eq '^intertype-t25^', T, ( INTERTYPE.types.type_of.name       ), 'type_of'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_types_object = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  types         = new INTERTYPE.Intertype_minimal sample_declarations\n  T?.eq ( types.isa.boolean           false               ), true\n  T?.eq ( types.isa.boolean           true                ), true\n  T?.eq ( types.isa.boolean           null                ), false\n  T?.eq ( types.isa.boolean           1                   ), false\n  T?.eq ( types.isa.optional.boolean  false               ), true\n  T?.eq ( types.isa.optional.boolean  true                ), true\n  T?.eq ( types.isa.optional.boolean  null                ), true\n  T?.eq ( types.isa.optional.boolean  1                   ), false\n  #.........................................................................................................\n  T?.eq ( types.validate.boolean               false      ), false\n  T?.eq ( types.validate.boolean               true       ), true\n  T?.eq ( types.validate.optional.boolean      true       ), true\n  T?.eq ( types.validate.optional.boolean      false      ), false\n  T?.eq ( types.validate.optional.boolean      undefined  ), undefined\n  T?.eq ( types.validate.optional.boolean      null       ), null\n  try_and_show T,                           -> types.validate.boolean           1\n  try_and_show T,                           -> types.validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> types.validate.boolean           1\n  throws T, /expected an optional boolean/, -> types.validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( types.type_of null            ), 'null'\n  T?.eq ( types.type_of undefined       ), 'undefined'\n  T?.eq ( types.type_of false           ), 'boolean'\n  T?.eq ( types.type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( types.type_of {}              ), 'object'\n  T?.eq ( types.type_of NaN             ), 'unknown'\n  T?.eq ( types.type_of +Infinity       ), 'unknown'\n  T?.eq ( types.type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  debug '^4324^', 'null           ', types.declarations.null\n  debug '^4324^', 'function       ', types.declarations.function\n  debug '^4324^', 'boolean        ', types.declarations.boolean\n  debug '^4324^', 'text           ', types.declarations.text\n  debug '^4324^', 'asyncfunction  ', types.declarations.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.isa.null\n  debug '^4324^', 'function       ', types.isa.function\n  debug '^4324^', 'boolean        ', types.isa.boolean\n  debug '^4324^', 'text           ', types.isa.text\n  debug '^4324^', 'asyncfunction  ', types.isa.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.isa.optional.null\n  debug '^4324^', 'function       ', types.isa.optional.function\n  debug '^4324^', 'boolean        ', types.isa.optional.boolean\n  debug '^4324^', 'text           ', types.isa.optional.text\n  debug '^4324^', 'asyncfunction  ', types.isa.optional.asyncfunction\n  debug '^4324^'\n  debug '^4324^', 'null           ', types.validate.null\n  debug '^4324^', 'function       ', types.validate.function\n  debug '^4324^', 'boolean        ', types.validate.boolean\n  debug '^4324^', 'text           ', types.validate.text\n  debug '^4324^', 'asyncfunction  ', types.validate.asyncfunction\n  T?.eq ( types.isa.asyncfunction.name               ), 'isa.asyncfunction'\n  T?.eq ( types.isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n  T?.eq ( types.validate.asyncfunction.name          ), 'validate.asyncfunction'\n  T?.eq ( types.validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n  T?.eq types.declarations.null?.type,          'null'\n  T?.eq types.declarations.function?.type,      'function'\n  T?.eq types.declarations.boolean?.type,       'boolean'\n  T?.eq types.declarations.text?.type,          'text'\n  T?.eq types.declarations.asyncfunction?.type, 'asyncfunction'\n  T?.eq types.isa.null?.name,                   'isa.null'\n  T?.eq types.isa.function?.name,               'isa.function'\n  T?.eq types.isa.boolean?.name,                'isa.boolean'\n  T?.eq types.isa.text?.name,                   'isa.text'\n  T?.eq types.isa.asyncfunction?.name,          'isa.asyncfunction'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_standalone_methods = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n  T?.eq ( isa.boolean           false               ), true\n  T?.eq ( isa.boolean           true                ), true\n  T?.eq ( isa.boolean           null                ), false\n  T?.eq ( isa.boolean           1                   ), false\n  T?.eq ( isa.unknown           1                   ), false\n  T?.eq ( isa.unknown           Infinity            ), true\n  T?.eq ( isa.optional.boolean  false               ), true\n  T?.eq ( isa.optional.boolean  true                ), true\n  T?.eq ( isa.optional.boolean  null                ), true\n  T?.eq ( isa.optional.boolean  1                   ), false\n  T?.eq ( isa.optional.unknown  1                   ), false\n  T?.eq ( isa.optional.unknown  Infinity            ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  #.........................................................................................................\n  T?.eq ( validate.boolean               false      ), false\n  T?.eq ( validate.boolean               true       ), true\n  T?.eq ( validate.optional.boolean      true       ), true\n  T?.eq ( validate.optional.boolean      false      ), false\n  T?.eq ( validate.optional.boolean      undefined  ), undefined\n  T?.eq ( validate.optional.boolean      null       ), null\n  try_and_show T,                           -> validate.boolean           1\n  try_and_show T,                           -> validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> validate.boolean           1\n  throws T, /expected an optional boolean/, -> validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( type_of null            ), 'null'\n  T?.eq ( type_of undefined       ), 'undefined'\n  T?.eq ( type_of false           ), 'boolean'\n  T?.eq ( type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( type_of {}              ), 'object'\n  T?.eq ( type_of NaN             ), 'unknown'\n  T?.eq ( type_of +Infinity       ), 'unknown'\n  T?.eq ( type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  T?.eq ( isa.asyncfunction.name               ), 'isa.asyncfunction'\n  T?.eq ( isa.optional.asyncfunction.name      ), 'isa.optional.asyncfunction'\n  T?.eq ( validate.asyncfunction.name          ), 'validate.asyncfunction'\n  T?.eq ( validate.optional.asyncfunction.name ), 'validate.optional.asyncfunction'\n  #.........................................................................................................\n  throws T, /method 'isa.float' expects 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /method 'isa.float' expects 1 arguments, got 0/, -> isa.float()\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@methods_check_arity = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype_minimal sample_declarations\n  #.........................................................................................................\n  throws T, /method 'isa.float' expects 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /method 'isa.float' expects 1 arguments, got 0/, -> isa.float()\n  throws T, /method 'isa.optional.float' expects 1 arguments, got 2/, -> isa.optional.float 3, 4\n  throws T, /method 'isa.optional.float' expects 1 arguments, got 0/, -> isa.optional.float()\n  throws T, /method 'validate.float' expects 1 arguments, got 2/, -> validate.float 3, 4\n  throws T, /method 'validate.float' expects 1 arguments, got 0/, -> validate.float()\n  throws T, /method 'validate.optional.float' expects 1 arguments, got 2/, -> validate.optional.float 3, 4\n  throws T, /method 'validate.optional.float' expects 1 arguments, got 0/, -> validate.optional.float()\n  throws T, /expected 1 arguments, got 2/, -> type_of 3, 4\n  throws T, /expected 1 arguments, got 0/, -> type_of()\n  try_and_show T, -> isa.float 3, 4\n  try_and_show T, -> isa.float()\n  try_and_show T, -> isa.optional.float 3, 4\n  try_and_show T, -> isa.optional.float()\n  try_and_show T, -> validate.float 3, 4\n  try_and_show T, -> validate.float()\n  try_and_show T, -> validate.optional.float 3, 4\n  try_and_show T, -> validate.optional.float()\n  try_and_show T, -> type_of 3, 4\n  try_and_show T, -> type_of()\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@same_basic_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { isa\n    validate\n    type_of   } = require '../../../apps/intertype'\n  #.........................................................................................................\n  boolean                 = false\n  $function               = ->\n  asyncfunction           = -> await null\n  generatorfunction       = ( -> yield null )\n  generator               = ( -> yield null )()\n  asyncgeneratorfunction  = ( -> yield await null )\n  asyncgenerator          = ( -> yield await null )()\n  symbol                  = Symbol 'what'\n  #.........................................................................................................\n  eq '^intertype-t26^', T, ( isa.boolean                     boolean                 ), true\n  eq '^intertype-t27^', T, ( isa.function                    $function               ), true\n  eq '^intertype-t28^', T, ( isa.asyncfunction               asyncfunction           ), true\n  eq '^intertype-t29^', T, ( isa.generatorfunction           generatorfunction       ), true\n  eq '^intertype-t30^', T, ( isa.asyncgeneratorfunction      asyncgeneratorfunction  ), true\n  eq '^intertype-t31^', T, ( isa.asyncgenerator              asyncgenerator          ), true\n  eq '^intertype-t32^', T, ( isa.generator                   generator               ), true\n  eq '^intertype-t33^', T, ( isa.symbol                      symbol                  ), true\n  #.........................................................................................................\n  eq '^intertype-t34^', T, ( validate.boolean                boolean                 ), boolean\n  eq '^intertype-t35^', T, ( validate.function               $function               ), $function\n  eq '^intertype-t36^', T, ( validate.asyncfunction          asyncfunction           ), asyncfunction\n  eq '^intertype-t37^', T, ( validate.generatorfunction      generatorfunction       ), generatorfunction\n  eq '^intertype-t38^', T, ( validate.asyncgeneratorfunction asyncgeneratorfunction  ), asyncgeneratorfunction\n  eq '^intertype-t39^', T, ( validate.asyncgenerator         asyncgenerator          ), asyncgenerator\n  eq '^intertype-t40^', T, ( validate.generator              generator               ), generator\n  eq '^intertype-t41^', T, ( validate.symbol                 symbol                  ), symbol\n  #.........................................................................................................\n  eq '^intertype-t42^', T, ( type_of boolean                                         ), 'boolean'\n  eq '^intertype-t43^', T, ( type_of $function                                       ), 'function'\n  eq '^intertype-t44^', T, ( type_of asyncfunction                                   ), 'asyncfunction'\n  eq '^intertype-t45^', T, ( type_of generatorfunction                               ), 'generatorfunction'\n  eq '^intertype-t46^', T, ( type_of asyncgeneratorfunction                          ), 'asyncgeneratorfunction'\n  eq '^intertype-t47^', T, ( type_of asyncgenerator                                  ), 'asyncgenerator'\n  eq '^intertype-t48^', T, ( type_of generator                                       ), 'generator'\n  eq '^intertype-t49^', T, ( type_of symbol                                          ), 'symbol'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_on_missing_type = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype()\n  #.........................................................................................................\n  try_and_show T, -> isa.quux\n  try_and_show T, -> isa.quux()\n  try_and_show T, -> isa.quux 3\n  try_and_show T, -> isa.quux 3, 4\n  try_and_show T, -> isa.optional.quux\n  try_and_show T, -> isa.optional.quux()\n  try_and_show T, -> isa.optional.quux 3\n  try_and_show T, -> isa.optional.quux 3, 4\n  try_and_show T, -> validate.quux\n  try_and_show T, -> validate.quux()\n  try_and_show T, -> validate.quux 3\n  try_and_show T, -> validate.quux 3, 4\n  try_and_show T, -> validate.optional.quux\n  try_and_show T, -> validate.optional.quux()\n  try_and_show T, -> validate.optional.quux 3\n  try_and_show T, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  throws T, /unknown type 'quux'/, -> isa.quux\n  throws T, /unknown type 'quux'/, -> isa.quux()\n  throws T, /unknown type 'quux'/, -> isa.quux 3\n  throws T, /unknown type 'quux'/, -> isa.quux 3, 4\n  throws T, /unknown type 'quux'/, -> isa.optional.quux\n  throws T, /unknown type 'quux'/, -> isa.optional.quux()\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.quux\n  throws T, /unknown type 'quux'/, -> validate.quux()\n  throws T, /unknown type 'quux'/, -> validate.quux 3\n  throws T, /unknown type 'quux'/, -> validate.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.optional.quux\n  throws T, /unknown type 'quux'/, -> validate.optional.quux()\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_optional_is_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  throws T, /not allowed to re-declare type 'optional'/, -> new INTERTYPE.Intertype_minimal \\\n    { optional: ( ( x ) -> true ), }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_wrong_type_of_isa_test_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  try_and_show T, -> new Intertype { foo: ( -> ), }\n  try_and_show T, -> new Intertype { foo: ( ( a, b ) -> ), }\n  try_and_show T, -> new Intertype { foo: true, }\n  try_and_show T, -> new Intertype { foo: undefined, }\n  try_and_show T, -> new Intertype { foo: null, }\n  try_and_show T, -> new Intertype { foo: {}, }\n  try_and_show T, -> new Intertype { foo: { test: null, }, }\n  try_and_show T, -> new Intertype { foo: { test: false, }, }\n  try_and_show T, -> new Intertype { foo: { test: ( ( a, b ) -> ), }, }\n  try_and_show T, -> new Intertype { foo: 'quux', }\n  throws T, /expected function with 1 parameters, got one with 0/, -> new Intertype { foo: ( -> ), }\n  throws T, /expected function with 1 parameters, got one with 2/, -> new Intertype { foo: ( ( a, b ) -> ), }\n  throws T, /expected type name, method, or object to indicate test method, got a boolean/,    -> new Intertype { foo: true, }\n  throws T, /expected type name, method, or object to indicate test method, got a undefined/,  -> new Intertype { foo: undefined, }\n  throws T, /expected type name, method, or object to indicate test method, got a null/,       -> new Intertype { foo: null, }\n  throws T, /expected type name, method, or object to indicate test method, got a undefined/,  -> new Intertype { foo: {}, }\n  throws T, /expected type name, method, or object to indicate test method, got a null/,       -> new Intertype { foo: { test: null, }, }\n  throws T, /expected type name, method, or object to indicate test method, got a boolean/,    -> new Intertype { foo: { test: false, }, }\n  throws T, /expected function with 1 parameters, got one with 2/, -> new Intertype { foo: { test: ( ( a, b ) -> ), }, }\n  throws T, /unknown type 'quux'/, -> new Intertype { foo: 'quux', }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@allow_declaration_objects = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    types = new Intertype_minimal declarations\n    T?.eq ( TMP_types.isa.function types.isa.integer  ), true\n    T?.eq ( types.isa.integer.length                  ), 1\n    T?.eq ( types.isa.integer 123                     ), true\n    T?.eq ( types.isa.integer 123.456                 ), false\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@create_entries_must_be_sync_functions = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      create:   -> await 0\n    try_and_show T, -> new Intertype_minimal declarations\n    throws T, /expected a function for `create` entry of type 'integer', got a asyncfunction/, -> new Intertype_minimal declarations\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@template_methods_must_be_nullary = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.foolist =\n      test:     ( x ) -> true\n      template: ( n ) -> [ n, ]\n    try_and_show T, -> new Intertype_minimal declarations\n    throws T, /template method for type 'foolist' has arity 1 but must be nullary/, -> new Intertype_minimal declarations\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@intertype_knows_its_base_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { isa } = require '../../../apps/intertype'\n  #.........................................................................................................\n  T?.eq ( isa.basetype 'optional'   ), false\n  T?.eq ( isa.basetype 'anything'   ), true\n  T?.eq ( isa.basetype 'nothing'    ), true\n  T?.eq ( isa.basetype 'something'  ), true\n  T?.eq ( isa.basetype 'null'       ), true\n  T?.eq ( isa.basetype 'undefined'  ), true\n  T?.eq ( isa.basetype 'unknown'    ), true\n  T?.eq ( isa.basetype 'integer'    ), false\n  T?.eq ( isa.basetype 'float'      ), false\n  T?.eq ( isa.basetype 'basetype'   ), false\n  T?.eq ( isa.basetype 'quux'       ), false\n  T?.eq ( isa.basetype 'toString'   ), false\n  T?.eq ( isa.basetype null         ), false\n  T?.eq ( isa.basetype undefined    ), false\n  T?.eq ( isa.basetype 4            ), false\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@disallow_licensed_overrides = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      float:\n        test:       ( x ) -> x is 'float'\n    try_and_show T, -> ( types.declare overrides )\n    throws T, /not allowed to re-declare type 'float'/, -> ( types.declare overrides )\n    #.......................................................................................................\n    ### pre-existing declaration remains valid: ###\n    T?.eq ( types.isa.float 4       ), true\n    T?.eq ( types.isa.float 'float' ), false\n    return null\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      float:\n        override:   true\n        test:       ( x ) -> x is 'float'\n    throws T, /not allowed to re-declare type 'float'/, -> ( types.declare overrides )\n    return null\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    T?.eq ( types.isa.float 4 ), true\n    #.......................................................................................................\n    overrides     =\n      anything:\n        override:   true\n        test:       ( x ) -> true\n    try_and_show T, -> ( types.declare overrides )\n    throws T, /not allowed to re-declare basetype 'anything'/, -> ( types.declare overrides )\n    #.......................................................................................................\n    ### pre-existing declaration remains valid: ###\n    T?.eq ( types.isa.anything 4       ), true\n    T?.eq ( types.isa.anything 'float' ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_create_types_with_templates_and_create = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype\n    Intertype_minimal } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    declarations.text = { template: '', test: ( ( x ) -> ( typeof x ) is 'string' ), }\n    declarations.float =\n      test:     ( x ) -> Number.isFinite x\n      create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n      template: 0\n    declarations.nan = ( x ) -> Number.isNaN x\n    #.......................................................................................................\n    types = new Intertype_minimal declarations\n    eq '^intertype-t50^', T, ( TMP_types.isa.object types.declarations       ), true\n    eq '^intertype-t51^', T, ( TMP_types.isa.object types.declarations.float ), true\n    eq '^intertype-t52^', T, ( TMP_types.isa.object types.declarations.text  ), true\n    #.......................................................................................................\n    try_and_show T, -> types.create.boolean()\n    throws T, /type declaration of 'boolean' has no `create` and no `template` entries, cannot be created/, \\\n      -> types.create.boolean()\n    try_and_show T, -> types.create.text 'foo'\n    throws T, /expected 0 arguments, got 1/, -> types.create.text 'foo'\n    #.......................................................................................................\n    eq '^intertype-t53^', T, types.create.text(), ''\n    eq '^intertype-t54^', T, types.create.integer(), 0\n    eq '^intertype-t55^', T, types.create.float(), 0\n    eq '^intertype-t56^', T, ( types.create.float '123.45' ), 123.45\n    try_and_show T, -> types.create.float '***'\n    throws T, /expected `create\\.float\\(\\)` to return a float but it returned a nan/, -> types.create.float '***'\n    #.......................................................................................................\n    return null\n  #.........................................................................................................\n  do =>\n    declarations =\n      quantity:\n        test:       'object'\n        template:\n          q:        0\n          u:        'u'\n      'quantity.q': 'float'\n      'quantity.u': 'text'\n    { isa\n      validate\n      create    } = new Intertype declarations\n    eq '^intertype-t57^', T, ( create.quantity()    ), { q: 0, u: 'u', }\n    return null\n  #.........................................................................................................\n  do =>\n    declarations =\n      quantity:\n        test:       'object'\n        template:\n          q:        0\n          u:        'u'\n        fields:\n          q:        'float'\n          u:        'text'\n    { isa\n      validate\n      create    } = new Intertype declarations\n    eq '^intertype-t58^', T, ( create.quantity()                         ), { q: 0, u: 'u', }\n    eq '^intertype-t59^', T, ( create.quantity { q: 123, }               ), { q: 123, u: 'u', }\n    eq '^intertype-t60^', T, ( create.quantity { u: 'kg', }              ), { q: 0, u: 'kg', }\n    eq '^intertype-t61^', T, ( create.quantity { u: 'kg', foo: 'bar', }  ), { q: 0, u: 'kg', foo: 'bar', }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@builtin_types_support_create = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types       = new Intertype()\n    { create\n      type_of } = types\n    eq '^intertype-t62^', T, ( create.float()         ), 0\n    eq '^intertype-t63^', T, ( create.boolean()       ), false\n    eq '^intertype-t64^', T, ( create.object()        ), {}\n    eq '^intertype-t65^', T, ( create.float()         ), 0\n    eq '^intertype-t66^', T, ( create.infinity()      ), Infinity\n    eq '^intertype-t67^', T, ( create.text()          ), ''\n    eq '^intertype-t68^', T, ( create.list()          ), []\n    eq '^intertype-t69^', T, ( create.regex()         ), new RegExp()\n    eq '^intertype-t70^', T, ( type_of create.function()      ), 'function'\n    eq '^intertype-t71^', T, ( type_of create.asyncfunction() ), 'asyncfunction'\n    eq '^intertype-t72^', T, ( type_of create.symbol()        ), 'symbol'\n    throws T, /type declaration of 'basetype' has no `create` and no `template` entries, cannot be created/, -> ( create.basetype()      )\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@template_functions_are_called_in_template_fields = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types       = new Intertype()\n    { declare\n      create\n      isa\n      type_of\n      declarations  } = types\n    declare quantity:\n      test:     'object'\n      fields:\n        q:      'float'\n        u:      'text'\n      template:\n        q:      -> @create.float()\n        u:      -> 'u'\n    debug '^3234^', create.quantity()\n    debug '^3234^', declarations.quantity\n    eq '^intertype-t73^', T, ( create.quantity()                          ), { q: 0, u: 'u', }\n    eq '^intertype-t74^', T, ( isa.quantity { q: 9, }                     ), false\n    eq '^intertype-t75^', T, ( type_of declarations.quantity.sub_tests.q  ), 'function'\n    eq '^intertype-t76^', T, ( type_of declarations.quantity.sub_tests.u  ), 'function'\n    return null\n  #.........................................................................................................\n  do =>\n    types       = new Intertype()\n    { declare\n      create\n      type_of } = types\n    declare foo:\n      test:     'object'\n      fields:\n        foo:\n          test:   'object'\n          fields:\n            bar:\n              test:     'float'\n      template:\n        foo:\n          bar: 123\n    debug '^3234^', create.foo()\n    eq '^intertype-t77^', T, ( create.foo() ), { foo: { bar: 123, } }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@type_object_assumed_if_fields_present = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types       = new Intertype()\n    { declare\n      declarations\n      create\n      type_of\n      isa     } = types\n    declare quantity:\n      # test: 'object'\n      fields:\n        q:      'float'\n        u:      'text'\n    eq '^intertype-t78^', T, ( type_of declarations.quantity.test ), 'function'\n    debug '^342342^', declarations.quantity\n    eq '^intertype-t79^', T, ( type_of declarations.quantity.sub_tests.q ), 'function'\n    eq '^intertype-t80^', T, ( type_of declarations.quantity.sub_tests.u ), 'function'\n    eq '^intertype-t81^', T, ( isa.quantity { q: 987, u: 's', } ), true\n    eq '^intertype-t82^', T, ( isa.quantity { q: 987, } ), false\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@intertype_minimal_has_only_base_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  types = new Intertype_minimal()\n  T?.eq ( Object.keys types.declarations ).sort(), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown' ]\n  types.declare { z: ( ( x ) -> ), }\n  T?.eq ( Object.keys types.declarations ).sort(), [ 'anything', 'nothing', 'null', 'optional', 'something', 'undefined', 'unknown', 'z' ]\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_type_name_for_test = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    # try_and_show T, -> types.declare { z: 'quux', }\n    throws T, /unknown type 'quux'/, -> types.declare { z: 'quux', }\n    types.declare { z: 'float', }\n    T?.eq ( types.isa.z 12 ), true\n    T?.eq types.isa.float.name, 'isa.float'\n    T?.eq types.declarations.float.type, 'float'\n    T?.eq types.declarations.float.test.name, 'float'\n    T?.eq types.isa.z.name, 'isa.z'\n    T?.eq types.declarations.z.type, 'z'\n    T?.eq types.declarations.z.test.name, 'z' # ?\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    # try_and_show T, -> types.declare { z: { test: 'quux', }, }\n    throws T, /unknown type 'quux'/, -> types.declare { z: { test: 'quux', }, }\n    types.declare { z: { test: 'float', }, }\n    T?.eq ( types.isa.z 12 ), true\n    T?.eq types.isa.float.name, 'isa.float'\n    T?.eq types.declarations.float.type, 'float'\n    T?.eq types.declarations.float.test.name, 'float'\n    T?.eq types.isa.z.name, 'isa.z'\n    T?.eq types.declarations.z.type, 'z'\n    T?.eq types.declarations.z.test.name, 'z'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@resolve_dotted_type = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    T?.eq ( Reflect.has types.declarations, 'foo'         ), false\n    types.declare { foo: 'object', }\n    T?.eq ( Reflect.has types.declarations, 'foo'         ), true\n    T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), false\n    types.declare { 'foo.bar': 'object', }\n    T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), true\n    T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), false\n    types.declare { 'foo.bar.baz': 'float', }\n    T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), true\n    T?.eq ( types.isa.foo.bar.baz null ), false\n    T?.eq ( types.isa.foo.bar.baz 4 ), true\n    T?.eq ( types.isa.foo.bar.baz +Infinity ), false\n    # T?.eq types.declarations[ 'foo.bar.baz' ].test, types.declarations.float.test\n    # types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n    try_and_show T, -> types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n    return null\n  # #.........................................................................................................\n  # do =>\n  #   types = new Intertype()\n  #   T?.eq ( Reflect.has types.declarations, 'foo'         ), false\n  #   types.declare { foo: 'object', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo'         ), true\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), false\n  #   types.declare { 'foo.bar': 'object', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar'     ), true\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), false\n  #   types.declare { 'foo.bar.baz': 'optional.float', }\n  #   T?.eq ( Reflect.has types.declarations, 'foo.bar.baz' ), true\n  #   T?.eq ( types.isa.foo.bar.baz null ), true\n  #   T?.eq ( types.isa.foo.bar.baz 4 ), true\n  #   T?.eq ( types.isa.foo.bar.baz +Infinity ), false\n  #   # T?.eq types.declarations[ 'foo.bar.baz' ].test, types.declarations.float.test\n  #   # types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n  #   try_and_show T, -> types.declare { 'foo.bar.baz.quux.dax.dux': 'float', }\n  #   return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@dotted_types_are_test_methods = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { quantity: 'object', }\n    types.declare { 'quantity.q': 'float', }\n    types.declare { 'quantity.u': 'text', }\n    T?.eq types.isa[ 'quantity.q' ], types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n    T?.eq types.isa[ 'quantity.q' ], types.isa.quantity.q\n    # debug '^409-1^', types.declarations\n    T?.eq ( types.isa.quantity {}                 ), false\n    T?.eq ( types.isa.quantity { q: {}, }         ), false\n    T?.eq ( types.isa.quantity { q: 3, }          ), false\n    T?.eq ( types.isa.quantity { q: 3, u: 'm', }  ), true\n    T?.eq ( types.isa.quantity.q 3                ), true\n    T?.eq ( types.isa.quantity.q 3.1              ), true\n    T?.eq ( types.isa.quantity.q '3.1'            ), false\n    T?.eq ( types.isa.quantity.u 'm'              ), true\n    T?.eq ( types.isa.quantity.u null             ), false\n    T?.eq ( types.isa.quantity.u 3                ), false\n    debug '^433-1^', types.declarations[ 'quantity' ]\n    debug '^433-1^', types.declarations[ 'quantity.q' ]\n    debug '^433-1^', types.declarations[ 'quantity.u' ]\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    # T?.eq types.isa[ 'quantity.q' ], types.declarations[ 'quantity' ].sub_tests[ 'q' ]\n    # T?.eq types.isa[ 'quantity.q' ], types.isa.quantity.q\n    T?.eq ( types.isa.person.address.city.name 'P'  ), true\n    T?.eq ( types.isa.person.address.city.name 1234 ), false\n    T?.eq ( types.isa.person 1234 ), false\n    T?.eq ( types.isa.person { name: 'Bob', } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: {}, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: {}, }, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: { name: 'P', }, }, } ), false\n    T?.eq ( types.isa.person { name: 'Bob', address: { city: { name: 'P', postcode: 'SO36', }, }, } ), true\n    T?.eq ( types.isa.person.address.city.name     'P'                                ), true\n    T?.eq ( types.isa.person.address.city.postcode 'SO36'                             ), true\n    T?.eq ( types.isa.person.address.city {         name: 'P', postcode: 'SO36', }    ), true\n    T?.eq ( types.isa.person.address      { city: { name: 'P', postcode: 'SO36', }, } ), true\n    help '^322-1^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person'               ].sub_tests )\n    help '^322-2^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address'       ].sub_tests )\n    help '^322-3^', ( { \"#{k}\": f.name } for k, f of types.declarations[ 'person.address.city'  ].sub_tests )\n    T?.eq ( Object.keys types.declarations[ 'person'               ].sub_tests ), [ 'name', 'address', ]\n    T?.eq ( Object.keys types.declarations[ 'person.address'       ].sub_tests ), [ 'city', ]\n    T?.eq ( Object.keys types.declarations[ 'person.address.city'  ].sub_tests ), [ 'name', 'postcode', ]\n    T?.eq ( types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address'      ].sub_tests ), true\n    T?.eq ( types.declarations[ 'person' ].sub_tests isnt types.declarations[ 'person.address.city' ].sub_tests ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':      'float', }\n    types.declare { 'foo.bar':  'text',   }\n    do =>\n      d = 3\n      # d.bar = '?' # Cannot create property in strict mode, so can never satisfy test\n      T?.eq ( types.isa.foo d ), false\n      return null\n    do =>\n      d = new Number 3\n      d.bar = '?'\n      T?.eq ( d.bar ), '?'\n      # still won't work b/c `float` doesn't accept objects (which is a good thing):\n      T?.eq ( types.isa.foo d ), false\n      return null\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':        'object', }\n    types.declare { 'foo.bind':   'float',   }\n    types.declare { 'foo.apply':  'float',   }\n    types.declare { 'foo.call':   'float',   }\n    types.declare { 'foo.name':   'float',   }\n    types.declare { 'foo.length': 'float',   }\n    T?.eq ( types.isa.foo {} ), false\n    T?.eq ( types.isa.foo { bind: 1, apply: 2, call: 3, name: 4, length: 5, } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'foo':        'object',           }\n    types.declare { 'foo.text':   ( ( x ) -> x is 1 ) }\n    types.declare { 'foo.float':  ( ( x ) -> x is 2 ) }\n    T?.eq ( types.isa.foo {} ), false\n    T?.eq ( types.isa.foo { text: 1, float: 2, } ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_refs_to_dotted_types = ( T, done ) ->\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       ( ( x ) -> @isa.person.address.city x ), }\n    # debug '^434-1^', types.declarations[ 'person.address.city' ]\n    # debug '^434-2^', types.declarations.mycity\n    urge '^342-1^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), false\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       'person.address.city', }\n    # debug '^434-3^', types.declarations[ 'person.address.city' ]\n    # debug '^434-4^', types.declarations.mycity\n    urge '^342-2^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), false\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  do =>\n    types = new Intertype()\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'mycity':                       ( ( x ) -> @isa.optional.person.address.city x ), }\n    # debug '^434-5^', types.declarations[ 'person.address.city' ]\n    # debug '^434-6^', types.declarations.mycity\n    urge '^342-3^', ( types.declarations.mycity )\n    T?.eq ( types.isa.person.address.city {} ), false\n    T?.eq ( types.isa.person.address.city null ), false\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.optional.person.address.city {} ), false\n    T?.eq ( types.isa.optional.person.address.city null ), true\n    T?.eq ( types.isa.optional.person.address.city { name: 'P', postcode: 'SO36', } ), true\n    T?.eq ( types.isa.mycity {} ), false\n    T?.eq ( types.isa.mycity null ), true\n    T?.eq ( types.isa.mycity { name: 'P', postcode: 'SO36', } ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @can_use_optional_refs_to_dotted_types = ( T, done ) ->\n#   { Intertype } = require '../../../apps/intertype'\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { maybefloat1: 'optional.float', }\n#     #.......................................................................................................\n#     T?.eq ( isa.float       null  ), false\n#     T?.eq ( isa.float       true  ), false\n#     T?.eq ( isa.float       0     ), true\n#     T?.eq ( isa.maybefloat1 null  ), true\n#     T?.eq ( isa.maybefloat1 true  ), false\n#     T?.eq ( isa.maybefloat1 0     ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { 'q':              'object', }\n#     declare { 'q.maybefloat2':  'optional.float', }\n#     #.......................................................................................................\n#     T?.eq ( isa.q             null                    ), false\n#     T?.eq ( isa.q             {}                      ), true\n#     T?.eq ( isa.q             { maybefloat2: null }   ), true\n#     T?.eq ( isa.q             { maybefloat2: false }  ), false\n#     T?.eq ( isa.q             { maybefloat2: 3 }      ), true\n#     T?.eq ( isa.q.maybefloat2  null                   ), true\n#     T?.eq ( isa.q.maybefloat2  true                   ), false\n#     T?.eq ( isa.q.maybefloat2  0                      ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       isa } = types\n#     declare { 'q':              'optional.object', }\n#     declare { 'q.maybefloat3':  'optional.float', }\n#     # isa.q null\n#     #.......................................................................................................\n#     safeguard T, => T?.eq ( isa.q             null                    ), true\n#     safeguard T, => T?.eq ( isa.q             {}                      ), true\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: null }   ), true\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: false }  ), false\n#     safeguard T, => T?.eq ( isa.q             { maybefloat3: 3 }      ), true\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  null                   ), true\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  true                   ), false\n#     safeguard T, => T?.eq ( isa.q.maybefloat3  0                      ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   safeguard T, => do =>\n#     types   = new Intertype()\n#     { declare\n#       validate\n#       isa } = types\n#     declare { 'person':                       'object', }\n#     declare { 'person.name':                  'text',   }\n#     declare { 'person.address':               'object', }\n#     declare { 'person.address.city':          'object', }\n#     declare { 'person.address.city.name':     'text',   }\n#     declare { 'person.address.city.postcode': 'text',   }\n#     declare { 'maybesomeone':                 'optional.person', }\n#     declare { 'mycity':                       'optional.person.address.city', }\n#     #.......................................................................................................\n#     T?.eq ( isa.person        null                                                            ), false\n#     T?.eq ( isa.person        {}                                                              ), false\n#     T?.eq ( isa.person        { name: 'Fred',                                               } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: {},                                  } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: { city: 'Town', },                   } ), false\n#     T?.eq ( isa.person        { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  } ), true # ???????????????????????\n#     debug '^12434^', validate.person        { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  }\n#     T?.eq ( isa.maybesomeone  null                                                            ), true\n#     # T?.eq ( isa.maybesomeone  {}                                                              ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred',                                               } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: {},                                  } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: { city: 'Town', },                   } ), false\n#     # T?.eq ( isa.maybesomeone  { name: 'Fred', address: { city: 'Town', postcode: 'W23', },  } ), true\n#     # #.......................................................................................................\n#     return null\n#   #.........................................................................................................\n#   done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@forbidden_to_define_fields_on_basetypes = ( T, done ) ->\n  T?.halt_on_error()\n  { Intertype\n    declarations  } = require '../../../apps/intertype'\n  #.........................................................................................................\n  await do =>\n    types         = new Intertype()\n    { declare\n      validate\n      isa } = types\n    try_and_show T, -> types.declare { 'optional.d':    ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'anything.d':    ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'nothing.d':     ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'something.d':   ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'null.d':        ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'undefined.d':   ( ( x ) -> ), }\n    try_and_show T, -> types.declare { 'unknown.d':     ( ( x ) -> ), }\n    throws T, /illegal use of 'optional' in declaration of type 'optional.d'/,             -> types.declare { 'optional.d':    ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'anything' in declaration of type 'anything.d'/,   -> types.declare { 'anything.d':    ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'nothing' in declaration of type 'nothing.d'/,     -> types.declare { 'nothing.d':     ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'something' in declaration of type 'something.d'/, -> types.declare { 'something.d':   ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'null' in declaration of type 'null.d'/,           -> types.declare { 'null.d':        ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'undefined' in declaration of type 'undefined.d'/, -> types.declare { 'undefined.d':   ( ( x ) -> ), }\n    throws T, /illegal use of basetype 'unknown' in declaration of type 'unknown.d'/,     -> types.declare { 'unknown.d':     ( ( x ) -> ), }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@internal_type_of_method = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype\n    declarations\n    __type_of     } = require '../../../apps/intertype'\n  #.........................................................................................................\n  _isa = Object.fromEntries ( [ type, declaration.test, ] for type, declaration of declarations )\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    eq '^intertype-t83^', T, ( __type_of _isa, null          ), 'null'\n    eq '^intertype-t84^', T, ( __type_of _isa, undefined     ), 'undefined'\n    eq '^intertype-t85^', T, ( __type_of _isa, 4             ), 'float'\n    eq '^intertype-t86^', T, ( __type_of _isa, ->            ), 'function'\n    eq '^intertype-t87^', T, ( __type_of _isa, -> await null ), 'asyncfunction'\n    eq '^intertype-t88^', T, ( __type_of _isa, {}            ), 'object'\n    eq '^intertype-t89^', T, ( __type_of _isa, []            ), 'list'\n    eq '^intertype-t90^', T, ( __type_of _isa, +Infinity     ), 'infinity'\n    eq '^intertype-t91^', T, ( __type_of _isa, -Infinity     ), 'infinity'\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@deepmerge = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype\n    declarations\n    deepmerge   } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    sub = { foo: 3, }\n    probe =\n      bar:\n        baz:\n          sub: sub\n      gnu: 4\n    result = deepmerge probe\n    eq '^intertype-t92^', T, result, probe\n    eq '^intertype-t93^', T, ( result.bar         is probe.bar          ), false\n    eq '^intertype-t94^', T, ( result.bar.baz     is probe.bar.baz      ), false\n    eq '^intertype-t95^', T, ( result.bar.baz.sub is probe.bar.baz.sub  ), false\n    eq '^intertype-t96^', T, ( result.bar.baz.sub is sub                ), false\n    eq '^intertype-t97^', T, ( probe.bar.baz.sub  is sub                ), true\n    return null\n  #.........................................................................................................\n  do =>\n    sub = { foo: 3, }\n    probe =\n      bar:\n        baz:\n          sub: sub\n      gnu: 4\n    types = new Intertype { q: { test: 'object', template: probe, }, }\n    result = types.create.q()\n    eq '^intertype-t98^', T, result, probe\n    eq '^intertype-t99^', T, ( result.bar         is probe.bar          ), false\n    eq '^intertype-t100^', T, ( result.bar.baz     is probe.bar.baz      ), false\n    eq '^intertype-t101^', T, ( result.bar.baz.sub is probe.bar.baz.sub  ), false\n    eq '^intertype-t102^', T, ( result.bar.baz.sub is sub                ), false\n    eq '^intertype-t103^', T, ( probe.bar.baz.sub  is sub                ), true\n    return null\n  #.........................................................................................................\n  do =>\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@validate_dotted_types = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    { validate }  = types\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    #.......................................................................................................\n    throws T, -> validate.person null\n    throws T, -> validate.person.address null\n    throws T, -> validate.person.address.city null\n    throws T, -> validate.person.address.city.postcode null\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city.postcode 3 ), false\n    throws T, /expected a person.address.city.postcode/, -> validate.person.address.city.postcode 3\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { name: 'P', } ), false\n    throws T, /expected a person.address.city/, -> validate.person.address.city { name: 'P', }\n    # #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { postcode: '3421', } ), false\n    throws T, /method 'validate.person.address.city' expects 1 arguments, got 0/, -> validate.person.address.city()\n    throws T, /expected a person.address.city/, -> validate.person.address.city null\n    throws T, /expected a person.address.city/, -> validate.person.address.city '3421'\n    throws T, /expected a person.address.city/, -> validate.person.address.city { postcode: '3421', }\n    #.......................................................................................................\n    T?.eq ( types.isa.person.address.city { name: 'P', postcode: '3421', } ), true\n    T?.eq ( validate.person.address.city { name: 'P', postcode: '3421', } ), { name: 'P', postcode: '3421', }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@use_evaluate = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    { validate\n      isa\n      evaluate }  = types\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.name':                  'text',   }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    #.......................................................................................................\n    throws T, /`optional` is not a legal type for `evaluate` methods/, -> evaluate.optional 1\n    throws T, /`optional` is not a legal type for `evaluate` methods/, -> evaluate.optional.person 1\n    #.......................................................................................................\n    eq '^intertype-t104^', T, ( isa.person       { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), true\n    eq '^intertype-t105^', T, ( evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: true,  'person.name': true, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n    #.......................................................................................................\n    eq '^intertype-t106^', T, ( isa.person       { name: 'Alice', address: { city: { name: 'Atown', postcode: 12345678 } } } ), false\n    eq '^intertype-t107^', T, ( evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 12345678 } } } ), { person: false,  'person.name': true, 'person.address': false, 'person.address.city': false, 'person.address.city.name': true, 'person.address.city.postcode': false, }\n    #.......................................................................................................\n    eq '^intertype-t108^', T, ( isa.person       {                address: { city: { name: 'Atown', postcode: 12345678 } } } ), false\n    eq '^intertype-t109^', T, ( evaluate.person  {                address: { city: { name: 'Atown', postcode: 12345678 } } } ), { person: false,  'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': true, 'person.address.city.postcode': false, }\n    #.......................................................................................................\n    eq '^intertype-t110^', T, ( isa.person       {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), false\n    eq '^intertype-t111^', T, ( evaluate.person  {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: false, 'person.name': false, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n    #.......................................................................................................\n    eq '^intertype-t112^', T, ( isa.person       null  ), false\n    eq '^intertype-t113^', T, ( evaluate.person  null  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n    #.......................................................................................................\n    eq '^intertype-t114^', T, ( isa.person       {}    ), false\n    eq '^intertype-t115^', T, ( evaluate.person  {}    ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n    return null\n  #.........................................................................................................\n  do =>\n    types         = new Intertype()\n    { validate\n      isa\n      evaluate }  = types\n    types.declare { 'person':                       'object', }\n    types.declare { 'person.address':               'object', }\n    types.declare { 'person.address.city':          'object', }\n    types.declare { 'person.address.city.postcode': 'text',   }\n    types.declare { 'person.address.city.name':     'text',   }\n    types.declare { 'person.name':                  'text',   }\n    #.......................................................................................................\n    eq '^intertype-t116^', T, ( isa.person                   { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), true\n    eq '^intertype-t117^', T, ( evaluate.person              { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: true,  'person.name': true, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n    eq '^intertype-t118^', T, ( Object.keys evaluate.person  { name: 'Alice', address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n    #.......................................................................................................\n    eq '^intertype-t119^', T, ( isa.person                   {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), false\n    eq '^intertype-t120^', T, ( evaluate.person              {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), { person: false, 'person.name': false, 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n    eq '^intertype-t121^', T, ( Object.keys evaluate.person  {                address: { city: { name: 'Atown', postcode: 'VA1234' } } } ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n    #.......................................................................................................\n    eq '^intertype-t122^', T, ( isa.person                   null  ), false\n    eq '^intertype-t123^', T, ( evaluate.person              null  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n    eq '^intertype-t124^', T, ( Object.keys evaluate.person  null  ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n    #.......................................................................................................\n    eq '^intertype-t125^', T, ( isa.person                   {}  ), false\n    eq '^intertype-t126^', T, ( evaluate.person              {}  ), { person: false, 'person.name': false, 'person.address': false, 'person.address.city': false, 'person.address.city.name': false, 'person.address.city.postcode': false, }\n    eq '^intertype-t127^', T, ( Object.keys evaluate.person  {}  ), [ 'person', 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name', 'person.name' ]\n    #.......................................................................................................\n    eq '^intertype-t128^', T, ( isa.person.address                   { city: { name: 'Atown', postcode: 'VA1234' } } ), true\n    eq '^intertype-t129^', T, ( evaluate.person.address              { city: { name: 'Atown', postcode: 'VA1234' } } ), { 'person.address': true, 'person.address.city': true, 'person.address.city.name': true, 'person.address.city.postcode': true, }\n    eq '^intertype-t130^', T, ( Object.keys evaluate.person.address  { city: { name: 'Atown', postcode: 'VA1234' } } ), [ 'person.address', 'person.address.city', 'person.address.city.postcode', 'person.address.city.name' ]\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@walk_prefixes = ( T, done ) ->\n  # T?.halt_on_error()\n  { walk_prefixes\n    isa\n    type_of                     } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    eq '^intertype-t131^', T, ( isa.generatorfunction walk_prefixes ), true\n    eq '^intertype-t132^', T, [ ( walk_prefixes 'one'                )..., ], []\n    eq '^intertype-t133^', T, [ ( walk_prefixes 'one.two'            )..., ], [ 'one' ]\n    eq '^intertype-t134^', T, [ ( walk_prefixes 'one.two.three'      )..., ], [ 'one', 'one.two', ]\n    eq '^intertype-t135^', T, [ ( walk_prefixes 'one.two.three.four' )..., ], [ 'one', 'one.two', 'one.two.three', ]\n    ### TAINT should not allow empty namers: ###\n    eq '^intertype-t136^', T, [ ( walk_prefixes '.one.two.three'     )..., ], [ '', '.one', '.one.two', ]\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_namespaces = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations =\n      'foo.bar':      ( x ) -> x is 'foo.bar'\n      'foo.bar.baz':  ( x ) -> x is 'foo.bar.baz'\n    try_and_show T, -> types = new Intertype declarations\n    throws T, /unknown partial type 'foo'/, -> types = new Intertype declarations\n    return null\n  #.........................................................................................................\n  do =>\n    declarations =\n      'quantity':         'object'\n      'quantity.q':       'float'\n      'quantity.u':       'text'\n    types = new Intertype declarations\n    T?.eq ( types.isa.quantity {}                   ), false\n    T?.eq ( types.isa.quantity { q: 12, u: 'kg', }  ), true\n    T?.eq ( types.isa[ 'quantity.q' ] 12            ), true\n    T?.eq ( types.isa[ 'quantity.u' ] 'kg'          ), true\n    T?.eq ( types.isa.quantity.q 12                 ), true\n    T?.eq ( types.isa.quantity.u 'kg'               ), true\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_qualifiers = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations =\n      'empty':            { test: 'object', role: 'qualifier', }\n      'nonempty':         { test: 'object', role: 'qualifier', }\n      'empty.list':       ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n      'empty.text':       ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n      'empty.set':        ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n      'nonempty.list':    ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n      'nonempty.text':    ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n      'nonempty.set':     ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n    types   = new Intertype declarations\n    { isa } = types\n    eq2 T, ( Ω_intertype_1 = -> isa.empty.list    []          ), true\n    eq2 T, ( Ω_intertype_2 = -> isa.empty.list    [ 'A', ]    ), false\n    eq2 T, ( Ω_intertype_3 = -> isa.empty.list    4           ), false\n    eq2 T, ( Ω_intertype_4 = -> isa.nonempty.list []          ), false\n    eq2 T, ( Ω_intertype_5 = -> isa.nonempty.list [ 'A', ]    ), true\n    eq2 T, ( Ω_intertype_6 = -> isa.nonempty.list 4           ), false\n    eq2 T, ( Ω_intertype_7 = -> isa.empty.text    ''          ), true\n    eq2 T, ( Ω_intertype_8 = -> isa.empty.text    'A'         ), false\n    eq2 T, ( Ω_intertype_9 = -> isa.empty.text    4           ), false\n    eq2 T, ( Ω_intertype_10 = -> isa.nonempty.text ''          ), false\n    eq2 T, ( Ω_intertype_11 = -> isa.nonempty.text 'A'         ), true\n    eq2 T, ( Ω_intertype_12 = -> isa.nonempty.text 4           ), false\n    ### this doesn't make a terrible lot of sense: ###\n    eq2 T, ( Ω_intertype_13 = -> isa.empty { list: [], text: '', set: new Set() } ), false\n    return null\n  #.........................................................................................................\n  do =>\n    declarations =\n      'empty':            { role: 'qualifier', }\n      'nonempty':         { role: 'qualifier', }\n      'empty.list':       ( x ) -> ( @isa.list  x ) and ( x.length  is  0 )\n      'empty.text':       ( x ) -> ( @isa.text  x ) and ( x.length  is  0 )\n      'empty.set':        ( x ) -> ( @isa.set   x ) and ( x.size    is  0 )\n      'nonempty.list':    ( x ) -> ( @isa.list  x ) and ( x.length  >   0 )\n      'nonempty.text':    ( x ) -> ( @isa.text  x ) and ( x.length  >   0 )\n      'nonempty.set':     ( x ) -> ( @isa.set   x ) and ( x.size    >   0 )\n    types         = new Intertype declarations\n    { isa\n      validate  } = types\n    eq2 T, ( Ω_intertype_14 = -> isa.empty.list    []          ), true\n    eq2 T, ( Ω_intertype_15 = -> isa.empty.list    [ 'A', ]    ), false\n    eq2 T, ( Ω_intertype_16 = -> isa.empty.list    4           ), false\n    eq2 T, ( Ω_intertype_17 = -> isa.nonempty.list []          ), false\n    eq2 T, ( Ω_intertype_18 = -> isa.nonempty.list [ 'A', ]    ), true\n    eq2 T, ( Ω_intertype_19 = -> isa.nonempty.list 4           ), false\n    eq2 T, ( Ω_intertype_20 = -> isa.empty.text    ''          ), true\n    eq2 T, ( Ω_intertype_21 = -> isa.empty.text    'A'         ), false\n    eq2 T, ( Ω_intertype_22 = -> isa.empty.text    4           ), false\n    eq2 T, ( Ω_intertype_23 = -> isa.nonempty.text ''          ), false\n    eq2 T, ( Ω_intertype_24 = -> isa.nonempty.text 'A'         ), true\n    eq2 T, ( Ω_intertype_25 = -> isa.nonempty.text 4           ), false\n    #.......................................................................................................\n    eq2 T, ( Ω_intertype_26 = -> isa.empty []                  ), true\n    eq2 T, ( Ω_intertype_27 = -> isa.empty ''                  ), true\n    eq2 T, ( Ω_intertype_28 = -> isa.empty new Set()           ), true\n    eq2 T, ( Ω_intertype_29 = -> isa.empty [ 1, ]              ), false\n    eq2 T, ( Ω_intertype_30 = -> isa.empty 'A'                 ), false\n    eq2 T, ( Ω_intertype_31 = -> isa.empty new Set 'abc'       ), false\n    #.......................................................................................................\n    eq2 T, ( Ω_intertype_32 = -> validate.empty []                  ), []\n    eq2 T, ( Ω_intertype_33 = -> validate.empty ''                  ), ''\n    eq2 T, ( Ω_intertype_34 = -> validate.empty new Set()           ), new Set()\n    # throws T, /expected a empty, got a list/, -> ( validate.empty [ 1, ]              )\n    # throws T, /expected a empty, got a text/, -> ( validate.empty 'A'                 )\n    # throws T, /expected a empty, got a set/,  -> ( validate.empty new Set 'abc'       )\n    throws2 T, ( Ω_intertype_35 = -> validate.empty [ 1, ]              ), /expected a empty, got a list/\n    throws2 T, ( Ω_intertype_36 = -> validate.empty 'A'                 ), /expected a empty, got a text/\n    throws2 T, ( Ω_intertype_37 = -> validate.empty new Set 'abc'       ), /whatever/\n    throws2 T, ( Ω_intertype_40Ü = -> validate.empty new Set 'abc'       ), /expected a empty, got a set/\n    throws2 T, ( Ω_intertype_38 = -> validate.empty new Set 'abc'       ), 23453\n    throws2 T, ( Ω_intertype_40Ü = -> validate.empty new Set 'abc'       ), /expected a empty, got a set/\n    throws2 T, ( Ω_intertype_40Ü = -> validate.empty new Set()       ), /expected a empty, got a set/\n    throws2 T, ( Ω_intertype_39 = -> validate.empty new Set 'abc'       )\n    throws2 T, ( Ω_intertype_40 = -> validate.empty new Set 'abc'       ), /expected a empty, got a set/\n    return null\n    #.......................................................................................................\n    eq2 T, ( Ω_intertype_41 = -> isa.opttional.empty []                  ), true\n    eq2 T, ( Ω_intertype_42 = -> isa.opttional.empty ''                  ), true\n    eq2 T, ( Ω_intertype_43 = -> isa.opttional.empty new Set()           ), true\n    eq2 T, ( Ω_intertype_44 = -> isa.opttional.empty [ 1, ]              ), false\n    eq2 T, ( Ω_intertype_45 = -> isa.opttional.empty 'A'                 ), false\n    eq2 T, ( Ω_intertype_46 = -> isa.opttional.empty new Set 'abc'       ), false\n  #.........................................................................................................\n  done?()\n\n\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@disallow_rhs_optional = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    ### TAINT observe the out-comment messages would perhaps make more sense as they are more specific ###\n    T?.eq ( ( new Intertype() ).declare { foo: 'float', } ), null\n    T?.eq ( ( new Intertype() ).declare { foo: 'text',  } ), null\n    # ( new Intertype() ).declare { foo: 'optional', }\n    throws T, /illegal use of 'optional' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'optional', }\n    throws T, /unknown type 'qqq'/,             -> ( new Intertype() ).declare { foo: 'qqq', }\n    throws T, /illegal use of 'optional' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'optional.float', }\n    throws T, /illegal use of basetype 'anything' in declaration of type 'foo'/, -> ( new Intertype() ).declare { foo: 'anything.float', }\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@parallel_behavior_of_isa_validate_mandatory_and_optional = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    { isa\n      validate  } = new Intertype\n        normalfloat: ( ( x ) -> ( @isa.float x ) and ( 0 <= x <= 1 ) )\n    eq '^intertype-t168^', T, ( isa.normalfloat                     0     ), true\n    eq '^intertype-t169^', T, ( isa.normalfloat                     null  ), false\n    eq '^intertype-t170^', T, ( isa.normalfloat                     -1    ), false\n    eq '^intertype-t171^', T, ( isa.normalfloat                     '?'   ), false\n    eq '^intertype-t172^', T, ( isa.optional.normalfloat            0     ), true\n    eq '^intertype-t173^', T, ( isa.optional.normalfloat            null  ), true\n    eq '^intertype-t174^', T, ( isa.optional.normalfloat            -1    ), false\n    eq '^intertype-t175^', T, ( isa.optional.normalfloat            '?'   ), false\n    eq '^intertype-t176^', T, ( validate.normalfloat                0     ), 0\n    eq '^intertype-t177^', T, ( validate.optional.normalfloat       0     ), 0\n    eq '^intertype-t178^', T, ( validate.optional.normalfloat       null  ), null\n    throws T, /expected a normalfloat, got a null/,             -> validate.normalfloat           null\n    throws T, /expected a normalfloat, got a float/,            -> validate.normalfloat           -1\n    throws T, /expected a normalfloat, got a text/,             -> validate.normalfloat           '?'\n    throws T, /expected an optional normalfloat, got a float/,  -> validate.optional.normalfloat  -1\n    throws T, /expected an optional normalfloat, got a text/,   -> validate.optional.normalfloat  '?'\n    return null\n  #.........................................................................................................\n  do =>\n    my_types =\n      'quantity':     'object'\n      'quantity.q':   'float'\n      'quantity.u':   'text'\n      'foo':          'object'\n      'foo.bar':      'object'\n      'foo.bar.baz':  'float'\n    { isa\n      validate  } = types = new Intertype my_types\n    eq '^intertype-t179^', T, ( isa.quantity            { q: 1, u: 'm', }   ), true\n    eq '^intertype-t180^', T, ( isa.quantity            null                ), false\n    eq '^intertype-t181^', T, ( isa.optional.quantity   { q: 2, u: 'm', }   ), true\n    eq '^intertype-t182^', T, ( isa.optional.quantity   null                ), true\n    eq '^intertype-t183^', T, ( validate.quantity               { q: 3, u: 'm', } ), { q: 3, u: 'm', }\n    eq '^intertype-t184^', T, ( validate.optional.quantity      { q: 4, u: 'm', } ), { q: 4, u: 'm', }\n    eq '^intertype-t185^', T, ( validate.optional.quantity.q    null  ), null\n    eq '^intertype-t186^', T, ( validate.optional.quantity.q    111   ), 111\n    throws T, -> validate.quantity  { q: 5, }\n    eq '^intertype-t187^', T, ( isa.quantity                     null               ), false\n    eq '^intertype-t188^', T, ( isa.quantity                     -1                 ), false\n    eq '^intertype-t189^', T, ( isa.quantity                     '?'                ), false\n    eq '^intertype-t190^', T, ( isa.quantity.q                   '?'                ), false\n    eq '^intertype-t191^', T, ( isa.quantity.q                   3                  ), true\n    eq '^intertype-t192^', T, ( isa.optional.quantity            { q: 1, u: 'm', }  ), true\n    eq '^intertype-t193^', T, ( isa.optional.quantity            null               ), true\n    eq '^intertype-t194^', T, ( isa.optional.quantity            -1                 ), false\n    eq '^intertype-t195^', T, ( isa.optional.quantity            '?'                ), false\n    eq '^intertype-t196^', T, ( isa.optional.quantity.q          '?'                ), false\n    eq '^intertype-t197^', T, ( isa.optional.quantity.q          3                  ), true\n    eq '^intertype-t198^', T, ( validate.quantity                { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n    eq '^intertype-t199^', T, ( validate.optional.quantity       { q: 1, u: 'm', }  ), { q: 1, u: 'm', }\n    eq '^intertype-t200^', T, ( validate.optional.quantity       null               ), null\n    throws T, /expected a quantity, got a null/,                -> validate.quantity            null\n    throws T, /expected a quantity, got a float/,               -> validate.quantity            -1\n    throws T, /expected a quantity, got a text/,                -> validate.quantity            '?'\n    throws T, /expected a quantity, got a object/,              -> validate.quantity            { q: 1, } ### TAINT message should be more specific ###\n    throws T, /expected an optional quantity, got a float/,     -> validate.optional.quantity   -1\n    throws T, /expected an optional quantity, got a object/,    -> validate.optional.quantity   { q: 1, } ### TAINT message should be more specific ###\n    throws T, /expected an optional quantity.q, got a object/,  -> validate.optional.quantity.q { q: 1, }\n    throws T, /method 'validate.optional.quantity.q' expects 1 arguments, got 3/,  -> validate.optional.quantity.q 3, 4, 5\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@declaration_role_field = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    { declarations  } = new Intertype()\n    eq '^intertype-t201^', T, ( declarations.float.role     ), 'usertype'\n    eq '^intertype-t202^', T, ( declarations.null.role      ), 'basetype'\n    eq '^intertype-t203^', T, ( declarations.anything.role  ), 'basetype'\n    eq '^intertype-t204^', T, ( declarations.unknown.role   ), 'basetype'\n    eq '^intertype-t205^', T, ( declarations.optional.role  ), 'optional'\n    # throws T, /expected a normalfloat, got a null/,             -> validate.normalfloat           null\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@_________________can_use_fields = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    types = new Intertype\n      quantity:\n        fields:\n          q:    ''\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@minimal_type_of_results = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype_minimal } = require '../../../apps/intertype'\n  { isa\n    validate\n    create\n    declare\n    type_of           } = new Intertype_minimal()\n  #.........................................................................................................\n  do =>\n    T?.eq ( type_of null              ), 'null'\n    T?.eq ( type_of undefined         ), 'undefined'\n    T?.eq ( type_of +Infinity         ), 'unknown'\n    T?.eq ( type_of 4                 ), 'unknown'\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   1          ), true\n    T?.eq ( isa.nothing    1          ), false\n    T?.eq ( isa.something  1          ), true\n    T?.eq ( isa.unknown    1          ), true\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   null       ), true\n    T?.eq ( isa.nothing    null       ), true\n    T?.eq ( isa.something  null       ), false\n    T?.eq ( isa.unknown    null       ), false\n    return null\n  #.........................................................................................................\n  do =>\n    T?.eq ( isa.anything   undefined  ), true\n    T?.eq ( isa.nothing    undefined  ), true\n    T?.eq ( isa.something  undefined  ), false\n    T?.eq ( isa.unknown    undefined  ), false\n    return null\n  #.........................................................................................................\n  do =>\n    throws T, /`optional` is not a legal type for `isa` methods/,       -> isa.optional 1\n    throws T, /`optional` is not a legal type for `validate` methods/,  -> validate.optional 1\n    throws T, /`optional` is not a legal type for `create` methods/,    -> create.optional 1\n    return null\n  #.........................................................................................................\n  do =>\n    try_and_show T?, -> declare 'anything',   ( x ) ->\n    try_and_show T?, -> declare 'nothing',    ( x ) ->\n    try_and_show T?, -> declare 'something',  ( x ) ->\n    try_and_show T?, -> declare 'null',       ( x ) ->\n    try_and_show T?, -> declare 'undefined',  ( x ) ->\n    try_and_show T?, -> declare 'unknown',    ( x ) ->\n    try_and_show T?, -> declare 'optional',   ( x ) ->\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  # T?.halt_on_error()\n  { Intertype_minimal, } = require '../../../apps/intertype'\n  #.........................................................................................................\n  declarations  =\n    integer:\n      test:     ( x ) -> Number.isInteger x\n      create:   ( p = null ) -> parseInt ( p ? @declarations.integer.template ), 10\n      template: 0\n    text:\n      template: ''\n      test:     ( ( x ) -> ( typeof x ) is 'string' )\n    float:\n      test:     ( x ) -> Number.isFinite x\n      create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n      template: 0\n  #.........................................................................................................\n  declarations = { sample_declarations..., declarations..., }\n  types = new Intertype_minimal declarations\n  #.........................................................................................................\n  debug '^233-1^', types.create.float '345.678'\n  debug '^233-1^', types.create.integer '345.678'\n  try_and_show null, -> types.create.float '***'\n  try_and_show null, -> types.create.integer '***'\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # @basic_functionality_using_types_object()\n  # test @basic_functionality_using_types_object\n  # @allow_declaration_objects()\n  # demo_1()\n  # @can_use_type_name_for_test()\n  # test @can_use_type_name_for_test\n  # await test @create_entries_must_be_sync_functions\n  # await test @template_methods_must_be_nullary\n  # @throw_instructive_error_on_missing_type()\n  # @disallow_licensed_overrides()\n  # await test @disallow_licensed_overrides\n  # @throw_instructive_error_when_wrong_type_of_isa_test_declared()\n  # await test @throw_instructive_error_when_wrong_type_of_isa_test_declared\n  # @resolve_dotted_type()\n  # test @resolve_dotted_type\n  # @dotted_types_are_test_methods()\n  # test @dotted_types_are_test_methods\n  # @can_use_refs_to_dotted_types()\n  # test @can_use_refs_to_dotted_types\n  # test @can_use_type_name_for_test\n  # @internal_type_of_method()\n  # test @internal_type_of_method\n  # @validate_dotted_types()\n  # test @validate_dotted_types\n  # @forbidden_to_define_fields_on_basetypes()\n  # test @forbidden_to_define_fields_on_basetypes\n  # @can_use_optional_refs_to_dotted_types()\n  # test @can_use_optional_refs_to_dotted_types\n  # @minimal_type_of_results()\n  # test @minimal_type_of_results\n  # @disallow_rhs_optional()\n  # test @disallow_rhs_optional\n  # @parallel_behavior_of_isa_validate_mandatory_and_optional()\n  # test @parallel_behavior_of_isa_validate_mandatory_and_optional\n  # @can_create_types_with_templates_and_create()\n  # test @can_create_types_with_templates_and_create\n  # @type_object_assumed_if_fields_present()\n  # test @type_object_assumed_if_fields_present\n  # @use_evaluate()\n  # test @use_evaluate\n  # @same_basic_types()\n  # test @same_basic_types\n  # @walk_prefixes()\n  # test @walk_prefixes\n  # @declaration_role_field()\n  # test @declaration_role_field\n  # @interface()\n  # test @interface\n  # @can_use_qualifiers()\n  test @can_use_qualifiers\n  # await test @\n\n\n"
  ]
}