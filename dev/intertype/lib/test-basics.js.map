{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require '../../../apps/guy-test'\nTMP_types                 = new ( require 'intertype' ).Intertype()\n#-----------------------------------------------------------------------------------------------------------\n# s                         = ( name ) -> Symbol.for  name\n# ps                        = ( name ) -> Symbol      name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n\n############################################################################################################\n#\n# #===========================================================================================================\n# isa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n# as_object = ( x ) ->\n#   return x unless isa_object x\n#   R       = {}\n#   R[ k ]  = as_object v for k, v of x\n#   return R\n\n#===========================================================================================================\nsample_declarations =\n  boolean:                ( x ) -> ( x is true ) or ( x is false )\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  object:                 ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\n  float:                  ( x ) -> Number.isFinite x\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  nullary:                ( x ) -> x? and ( ( x.length is 0 ) or ( x.size is 0 ) )\n  unary:                  ( x ) -> x? and ( ( x.length is 1 ) or ( x.size is 1 ) )\n  binary:                 ( x ) -> x? and ( ( x.length is 2 ) or ( x.size is 2 ) )\n  trinary:                ( x ) -> x? and ( ( x.length is 3 ) or ( x.size is 3 ) )\n\n\n#===========================================================================================================\nthrows = ( T, matcher, f ) ->\n  await do =>\n    error = null\n    try await f() catch error\n      switch matcher_type = TMP_types.type_of matcher\n        when 'text'\n          T?.eq error.message, matcher\n        when 'regex'\n          matcher.lastIndex = 0\n          if matcher.test error.message\n            null\n          else\n            warn '^992-4^', reverse message = \"error #{rpr error.message} doesn't match #{rpr matcher}\"\n            T.fail \"^992-4^ #{message}\"\n        else\n          warn message = \"^992-1^ expected a regex or a text, got a #{matcher_type}\"\n          T.fail message\n    T?.ok error?\n  return null\n\n#===========================================================================================================\ntry_and_show = ( T, f ) ->\n  e = null\n  try ( urge '^992-2^', f() ) catch e then help '^992-3^', reverse \"try_and_show: #{rpr e.message}\"\n  unless e?\n    warn '^992-4^', reverse message = \"expected an error but none was thrown\"\n    T.fail \"^992-5^ expected an error but none was thrown\"\n  return null\n\n\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTYPE     = require '../../../apps/intertype'\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.get_isa                       ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.get_isa_optional              ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.get_validate                  ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.get_validate_optional         ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types                               ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.isa                           ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.isa.optional                  ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.validate                      ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.validate.optional             ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.boolean                   ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.optional.boolean          ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.validate.boolean              ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.validate.optional.boolean     ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.create                        ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.isa.text                      ), true\n  T?.eq ( TMP_types.isa.function  INTERTYPE.types.create.text                   ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.declarations                  ), true\n  T?.eq ( TMP_types.isa.object    INTERTYPE.types.declarations.text             ), true\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_types_object = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  types         = new INTERTYPE.Intertype sample_declarations\n  T?.eq ( types.isa.boolean           false               ), true\n  T?.eq ( types.isa.boolean           true                ), true\n  T?.eq ( types.isa.boolean           null                ), false\n  T?.eq ( types.isa.boolean           1                   ), false\n  T?.eq ( types.isa.optional.boolean  false               ), true\n  T?.eq ( types.isa.optional.boolean  true                ), true\n  T?.eq ( types.isa.optional.boolean  null                ), true\n  T?.eq ( types.isa.optional.boolean  1                   ), false\n  #.........................................................................................................\n  T?.eq ( types.validate.boolean               false      ), false\n  T?.eq ( types.validate.boolean               true       ), true\n  T?.eq ( types.validate.optional.boolean      true       ), true\n  T?.eq ( types.validate.optional.boolean      false      ), false\n  T?.eq ( types.validate.optional.boolean      undefined  ), undefined\n  T?.eq ( types.validate.optional.boolean      null       ), null\n  try_and_show T,                           -> types.validate.boolean           1\n  try_and_show T,                           -> types.validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> types.validate.boolean           1\n  throws T, /expected an optional boolean/, -> types.validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( types.type_of null            ), 'null'\n  T?.eq ( types.type_of undefined       ), 'undefined'\n  T?.eq ( types.type_of false           ), 'boolean'\n  T?.eq ( types.type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( types.type_of {}              ), 'object'\n  T?.eq ( types.type_of NaN             ), 'unknown'\n  T?.eq ( types.type_of +Infinity       ), 'unknown'\n  T?.eq ( types.type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  T?.eq ( types.isa.asyncfunction.name               ), 'isa_asyncfunction'\n  T?.eq ( types.isa.optional.asyncfunction.name      ), 'isa_optional_asyncfunction'\n  T?.eq ( types.validate.asyncfunction.name          ), 'validate_asyncfunction'\n  T?.eq ( types.validate.optional.asyncfunction.name ), 'validate_optional_asyncfunction'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@basic_functionality_using_standalone_methods = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype sample_declarations\n  T?.eq ( isa.boolean           false               ), true\n  T?.eq ( isa.boolean           true                ), true\n  T?.eq ( isa.boolean           null                ), false\n  T?.eq ( isa.boolean           1                   ), false\n  T?.eq ( isa.unknown           1                   ), false\n  T?.eq ( isa.unknown           Infinity            ), true\n  T?.eq ( isa.optional.boolean  false               ), true\n  T?.eq ( isa.optional.boolean  true                ), true\n  T?.eq ( isa.optional.boolean  null                ), true\n  T?.eq ( isa.optional.boolean  1                   ), false\n  T?.eq ( isa.optional.unknown  1                   ), false\n  T?.eq ( isa.optional.unknown  Infinity            ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  T?.eq ( isa.optional.unknown  undefined           ), true\n  #.........................................................................................................\n  T?.eq ( validate.boolean               false      ), false\n  T?.eq ( validate.boolean               true       ), true\n  T?.eq ( validate.optional.boolean      true       ), true\n  T?.eq ( validate.optional.boolean      false      ), false\n  T?.eq ( validate.optional.boolean      undefined  ), undefined\n  T?.eq ( validate.optional.boolean      null       ), null\n  try_and_show T,                           -> validate.boolean           1\n  try_and_show T,                           -> validate.optional.boolean  1\n  throws T, /expected a boolean/,           -> validate.boolean           1\n  throws T, /expected an optional boolean/, -> validate.optional.boolean  1\n  #.........................................................................................................\n  T?.eq ( type_of null            ), 'null'\n  T?.eq ( type_of undefined       ), 'undefined'\n  T?.eq ( type_of false           ), 'boolean'\n  T?.eq ( type_of Symbol 'p'      ), 'symbol'\n  T?.eq ( type_of {}              ), 'object'\n  T?.eq ( type_of NaN             ), 'unknown'\n  T?.eq ( type_of +Infinity       ), 'unknown'\n  T?.eq ( type_of -Infinity       ), 'unknown'\n  #.........................................................................................................\n  T?.eq ( isa.asyncfunction.name               ), 'isa_asyncfunction'\n  T?.eq ( isa.optional.asyncfunction.name      ), 'isa_optional_asyncfunction'\n  T?.eq ( validate.asyncfunction.name          ), 'validate_asyncfunction'\n  T?.eq ( validate.optional.asyncfunction.name ), 'validate_optional_asyncfunction'\n  #.........................................................................................................\n  throws T, /expected 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.float()\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@methods_check_arity = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype sample_declarations\n  #.........................................................................................................\n  throws T, /expected 1 arguments, got 2/, -> isa.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.float()\n  throws T, /expected 1 arguments, got 2/, -> isa.optional.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> isa.optional.float()\n  throws T, /expected 1 arguments, got 2/, -> validate.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> validate.float()\n  throws T, /expected 1 arguments, got 2/, -> validate.optional.float 3, 4\n  throws T, /expected 1 arguments, got 0/, -> validate.optional.float()\n  throws T, /expected 1 arguments, got 2/, -> type_of 3, 4\n  throws T, /expected 1 arguments, got 0/, -> type_of()\n  try_and_show T, -> isa.float 3, 4\n  try_and_show T, -> isa.float()\n  try_and_show T, -> isa.optional.float 3, 4\n  try_and_show T, -> isa.optional.float()\n  try_and_show T, -> validate.float 3, 4\n  try_and_show T, -> validate.float()\n  try_and_show T, -> validate.optional.float 3, 4\n  try_and_show T, -> validate.optional.float()\n  try_and_show T, -> type_of 3, 4\n  try_and_show T, -> type_of()\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_on_missing_type = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  { isa\n    validate\n    type_of   } = new INTERTYPE.Intertype sample_declarations\n  #.........................................................................................................\n  try_and_show T, -> isa.quux\n  try_and_show T, -> isa.quux()\n  try_and_show T, -> isa.quux 3\n  try_and_show T, -> isa.quux 3, 4\n  try_and_show T, -> isa.optional.quux\n  try_and_show T, -> isa.optional.quux()\n  try_and_show T, -> isa.optional.quux 3\n  try_and_show T, -> isa.optional.quux 3, 4\n  try_and_show T, -> validate.quux\n  try_and_show T, -> validate.quux()\n  try_and_show T, -> validate.quux 3\n  try_and_show T, -> validate.quux 3, 4\n  try_and_show T, -> validate.optional.quux\n  try_and_show T, -> validate.optional.quux()\n  try_and_show T, -> validate.optional.quux 3\n  try_and_show T, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  throws T, /unknown type 'quux'/, -> isa.quux\n  throws T, /unknown type 'quux'/, -> isa.quux()\n  throws T, /unknown type 'quux'/, -> isa.quux 3\n  throws T, /unknown type 'quux'/, -> isa.quux 3, 4\n  throws T, /unknown type 'quux'/, -> isa.optional.quux\n  throws T, /unknown type 'quux'/, -> isa.optional.quux()\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3\n  throws T, /unknown type 'quux'/, -> isa.optional.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.quux\n  throws T, /unknown type 'quux'/, -> validate.quux()\n  throws T, /unknown type 'quux'/, -> validate.quux 3\n  throws T, /unknown type 'quux'/, -> validate.quux 3, 4\n  throws T, /unknown type 'quux'/, -> validate.optional.quux\n  throws T, /unknown type 'quux'/, -> validate.optional.quux()\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3\n  throws T, /unknown type 'quux'/, -> validate.optional.quux 3, 4\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_optional_is_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  INTERTYPE     = require '../../../apps/intertype'\n  declarations  = { sample_declarations..., }\n  declarations.optional = ( x ) -> true\n  #.........................................................................................................\n  try_and_show T, -> new INTERTYPE.Intertype declarations\n  throws T, /unable to re-declare type 'optional'/, -> new INTERTYPE.Intertype declarations\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@throw_instructive_error_when_wrong_type_of_isa_test_declared = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  try_and_show T, -> new Intertype { foo: ( -> ), }\n  try_and_show T, -> new Intertype { foo: ( ( a, b ) -> ), }\n  try_and_show T, -> new Intertype { foo: true, }\n  throws T, /expected function with 1 parameters, got one with 0/, -> new Intertype { foo: ( -> ), }\n  throws T, /expected function with 1 parameters, got one with 2/, -> new Intertype { foo: ( ( a, b ) -> ), }\n  throws T, /expected function or object, got a boolean/, -> new Intertype { foo: true, }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@allow_declaration_objects = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    types = new Intertype declarations\n    T?.eq ( TMP_types.isa.function types.isa.integer  ), true\n    T?.eq ( types.isa.integer.length                  ), 1\n    T?.eq ( types.isa.integer 123                     ), true\n    T?.eq ( types.isa.integer 123.456                 ), false\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@can_create_types_with_templates_and_create = ( T, done ) ->\n  # T?.halt_on_error()\n  { Intertype } = require '../../../apps/intertype'\n  #.........................................................................................................\n  do =>\n    declarations  = { sample_declarations..., }\n    declarations.integer =\n      test:     ( x ) -> Number.isInteger x\n      template: 0\n    declarations.text = { template: '', test: ( ( x ) -> ( typeof x ) is 'string' ), }\n    declarations.float =\n      test:     ( x ) -> Number.isFinite x\n      create:   ( p = null ) -> parseFloat p ? @declarations.float.template\n      template: 0\n    declarations.nan = ( x ) -> Number.isNaN x\n    #.......................................................................................................\n    types = new Intertype declarations\n    T?.eq ( TMP_types.isa.object types.declarations       ), true\n    T?.eq ( TMP_types.isa.object types.declarations.float ), true\n    T?.eq ( TMP_types.isa.object types.declarations.text  ), true\n    #.......................................................................................................\n    try_and_show T, -> types.create.boolean()\n    throws T, /type declaration of 'boolean' has no `create` and no `template` entries, cannot be created/, \\\n      -> types.create.boolean()\n    try_and_show T, -> types.create.text 'foo'\n    throws T, /expected 0 arguments, got 1/, -> types.create.text 'foo'\n    #.......................................................................................................\n    T?.eq types.create.text(), ''\n    T?.eq types.create.integer(), 0\n    T?.eq types.create.float(), 0\n    T?.eq ( types.create.float '123.45' ), 123.45\n    try_and_show T, -> types.create.float '***'\n    throws T, /expected `create\\(\\)` to return a float but it returned a nan/, -> types.create.float '***'\n    #.......................................................................................................\n    return null\n  #.........................................................................................................\n  done?()\n\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # @basic_functionality_using_types_object()\n  @allow_declaration_objects()\n  await test @\n\n  # do =>\n  #   INTERTYPE     = require '../../../apps/intertype'\n  #   types         = new INTERTYPE.Intertype sample_declarations\n  #   debug '^345^', types.type_of 1\n  #   debug '^345^', types.type_of Infinity\n  #   debug '^345^', types.isa.unknown 1\n  #   debug '^345^', types.isa.unknown Infinity\n\n\n"
  ]
}