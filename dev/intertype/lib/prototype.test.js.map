{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/prototype.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nGUY                       = require '../../../apps/guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERTYPE/tests'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\nrvr                       = GUY.trm.reverse\ntruth                     = GUY.trm.truth.bind GUY.trm\n#...........................................................................................................\ntest                      = require 'guy-test'\n# { intersection_of }       = require '../../../apps/intertype/lib/helpers'\nH                         = require '../../../lib/helpers'\nequals                    = require '../../../apps/intertype/deps/jkroso-equals'\nS                         = ( parts ) -> new Set eval parts.raw[ 0 ]\n{ to_width }              = require 'to-width'\n_types                    = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of }               = _types.export()\n\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_sample_test_function = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( type_of types.registry.integer ), 'function'\n  T?.eq types.registry.integer.length, 1\n  T?.eq ( types.registry.integer 1 ), true\n  T?.eq ( types.registry.integer 1.2345678e26 ), true\n  T?.eq ( types.registry.integer 1.2345678 ), false\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_isa = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  handlers  = types.constructor._get_handlers types\n  T?.eq ( type_of handlers.isa ), 'function'\n  T?.eq handlers.isa.length, 2\n  #.........................................................................................................\n  T?.eq ( type_of types.isa ), 'function'\n  T?.eq types.isa.length, 0\n  T?.eq ( type_of types.isa.integer ), 'function'\n  T?.eq types.isa.integer.length, 0 ### function only takes single spread-argument `( P... ) ->` ###\n  T?.eq ( types.isa.integer 42   ),  true\n  T?.eq ( types.isa.integer 42.3 ),  false\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_can_chain_props = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( types.isa.even.integer 42   ),  true\n  T?.eq ( types.isa.even.integer 42.3 ),  false\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_isa_needs_at_least_one_prop = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.throws /expected at least one property/, -> try types.isa 42  catch error\n    warn rvr error.message; throw error\n  T?.throws /expected at least one property/, -> try types.isa()   catch error\n    warn rvr error.message; throw error\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_can_access_mmx_state = ( T, done ) ->\n  TY = require './intertype-prototype'\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( typeof TY.Multimix                                ), 'function'\n  T?.eq ( typeof TY.Multimix.symbol                         ), 'symbol'\n  T?.eq ( typeof mmx    = types.isa[TY.Multimix.symbol]        ), 'object'\n  T?.eq ( typeof state  = types.isa[TY.Multimix.symbol].state  ), 'object'\n  T?.eq state.hedges, []\n  T?.ok types.state is state\n  T?.ok types.mmx is mmx\n  types.isa.integer;        T?.eq state.hedges, [ 'integer' ]\n  types.isa.even.integer;   T?.eq state.hedges, [ 'even', 'integer', ]\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_state_and_trace_not_shared = ( T, done ) ->\n  types_1 = new ( require './intertype-prototype' ).Intertype()\n  types_2 = new ( require './intertype-prototype' ).Intertype()\n  T?.ok types_1.state         isnt types_2.state\n  T?.ok types_1.state.hedges  isnt types_2.state.hedges\n  T?.ok types_1.state.trace   isnt types_2.state.trace\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_declare_creates_types = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( typeof types.registry.TEST_float ), 'undefined'\n  T?.throws /expected single property, got 2/, -> try types.declare.even.TEST_float ( x ) -> Number.isFinite x catch error\n    warn rvr error.message; throw error\n  fn = types.declare.TEST_float ( x ) -> Number.isFinite x\n  T?.eq ( typeof types.registry.TEST_float ), 'function'\n  T?.ok types.registry.TEST_float is fn\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_or = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( types.isa.integer 42                 ), true\n  T?.eq ( types.isa.text 'helo'                ), true\n  T?.eq ( types.isa.text null                  ), false\n  #.........................................................................................................\n  T?.throws /cannot have two `or` props in succession/, -> try types.isa.even.integer.or.or.text 42 catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `or` as first prop/,           -> try types.isa.or.integer 42 catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `or` as last prop/,            -> try types.isa.even.integer.or 42 catch error\n    warn rvr error.message; throw error\n  #.........................................................................................................\n  T?.eq ( types.isa.integer.or.text 42         ), true\n  T?.eq ( types.isa.integer.or.text 'helo'     ), true\n  T?.eq ( types.isa.integer.or.text null       ), false\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_of = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq ( types.isa.list []                     ), true\n  T?.eq ( types.isa.list 'helo'                 ), false\n  T?.eq ( types.isa.set  new Set 'helo'         ), true\n  T?.eq ( types.isa.set  new Map()              ), false\n  #.........................................................................................................\n  T?.throws /cannot have two `of` props in succession/, -> try types.isa.list.of.of.text [ 42, ] catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `of` as first prop/,           -> try types.isa.of.integer 42 catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `of` as last prop/,            -> try types.isa.list.of [ 42, ] catch error\n    warn rvr error.message; throw error\n  #.........................................................................................................\n  T?.eq ( types.isa.list.of.integer       [ 4, 5, 6, true, ]                              ), false\n  T?.eq ( types.isa.list.of.integer       [ 'helo', ]                                     ), false\n  T?.eq ( types.isa.list.of.integer       6                                               ), false\n  T?.eq ( types.isa.list.of.text          'helo'                                          ), false\n  T?.eq ( types.isa.set.of.text           'helo'                                          ), false\n  T?.eq ( types.isa.set.of.list.of.text   'helo'                                          ), false\n  T?.eq ( types.isa.list.of.list.of.text          [ [ 'a', 'b', ], [ 'c', ], [ 42, ], ]   ), false\n  #.........................................................................................................\n  T?.eq ( types.isa.list.of.text          []                                              ), true\n  T?.eq ( types.isa.list.of.integer       []                                              ), true\n  T?.eq ( types.isa.list.of.text          [ 'helo', ]                                     ), true\n  T?.eq ( types.isa.list.of.integer       [ 4, 5, 6, ]                                    ), true\n  T?.eq ( types.isa.set.of.text           new Set 'helo'                                  ), true\n  T?.eq ( types.isa.list.of.list.of.text          [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ]  ), true\n  T?.eq ( types.isa.set.of.list.of.text   new Set [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ]  ), true\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_transitive_of = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  #.........................................................................................................\n  T?.eq ( types.isa.list.or.text.or.integer new Set()     ), false\n  T?.eq ( types.isa.empty.list.or.set [ 1, 3, 5, ]        ), false\n  T?.eq ( types.isa.empty.list.or.empty.set new Set 'abc' ), false\n  #.........................................................................................................\n  T?.eq ( types.isa.list.or.text.or.integer []            ), true\n  T?.eq ( types.isa.list.or.text.or.integer 'txt'         ), true\n  T?.eq ( types.isa.list.or.text.or.integer 1234          ), true\n  T?.eq ( types.isa.empty.list.or.set []                  ), true\n  T?.eq ( types.isa.empty.list.or.set new Set()           ), true\n  T?.eq ( types.isa.empty.list.or.set new Set 'abc'       ), true\n  T?.eq ( types.isa.empty.list.or.empty.set new Set()     ), true\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_traces_are_being_written = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  T?.eq types.state.trace, []\n  help '^003-1^', types.state.trace\n  T?.eq types.state.trace, []\n  whisper '^003-2^', '———————————————————————————————'\n  types.isa.integer 42\n  urge '^003-3^', checkpoint for checkpoint in types.state.trace\n  help '^003-4^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'integer', x: 42, R: true } ]\n  whisper '^003-5^', '———————————————————————————————'\n  types.isa.text 'helo'\n  urge '^003-6^', checkpoint for checkpoint in types.state.trace\n  help '^003-7^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'text', x: 'helo', R: true } ]\n  whisper '^003-8^', '———————————————————————————————'\n  types.isa.text null\n  urge '^003-9^', checkpoint for checkpoint in types.state.trace\n  help '^003-10^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'text', x: null, R: false } ]\n  whisper '^003-11^', '———————————————————————————————'\n  types.isa.integer.or.text 42\n  urge '^003-12^', checkpoint for checkpoint in types.state.trace\n  help '^003-13^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'integer', x: 42, R: true }, { ref: '▲i2', level: 0, prop: 'or', x: 42, R: true } ]\n  whisper '^003-14^', '———————————————————————————————'\n  types.isa.integer.or.text 'helo'\n  urge '^003-15^', checkpoint for checkpoint in types.state.trace\n  help '^003-16^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'integer', x: 'helo', R: false }, { ref: '▲i1', level: 0, prop: 'or', x: 'helo', R: false }, { ref: '▲i3', level: 0, prop: 'text', x: 'helo', R: true } ]\n  whisper '^003-17^', '———————————————————————————————'\n  types.isa.integer.or.text null\n  urge '^003-18^', checkpoint for checkpoint in types.state.trace\n  help '^003-19^', types.state.trace\n  T?.eq types.state.trace, [ { ref: '▲i3', level: 0, prop: 'integer', x: null, R: false }, { ref: '▲i1', level: 0, prop: 'or', x: null, R: false }, { ref: '▲i3', level: 0, prop: 'text', x: null, R: false } ]\n  whisper '^003-20^', '———————————————————————————————'\n  types.isa.set.of.list.of.text   new Set [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ]\n  urge '^003-21^', checkpoint for checkpoint in types.state.trace\n  result = ( rpr checkpoint for checkpoint in types.state.trace ).join '\\n'\n  urge '^003-22^', result\n  T?.eq result, \"\"\"\n    { ref: '▲i3', level: 0, prop: 'set', x: Set(3) { [ 'a', 'b' ], [ 'c' ], [ 'd' ] }, R: true }\n    { ref: '▲i3', level: 1, prop: 'list', x: [ 'a', 'b' ], R: true }\n    { ref: '▲i3', level: 2, prop: 'text', x: 'a', R: true }\n    { ref: '▲i3', level: 2, prop: 'text', x: 'b', R: true }\n    { ref: '▲i3', level: 1, prop: 'list', x: [ 'c' ], R: true }\n    { ref: '▲i3', level: 2, prop: 'text', x: 'c', R: true }\n    { ref: '▲i3', level: 1, prop: 'list', x: [ 'd' ], R: true }\n    { ref: '▲i3', level: 2, prop: 'text', x: 'd', R: true }\"\"\"\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @itproto_debugging_is_deactivated = ( T, done ) ->\n#   collector       = []\n#   stdout          = process.stdout\n#   stderr          = process.stderr\n#   Object.defineProperty process, 'stdout', value: ( text ) -> collector.push text; stdout.write text\n#   Object.defineProperty process, 'stderr', value: ( text ) -> collector.push text; stderr.write text\n#   #.........................................................................................................\n#   types = new ( require './intertype-prototype' ).Intertype()\n#   types.isa.integer 42\n#   types.isa.text 'helo'\n#   types.isa.text null\n#   types.isa.integer.or.text 42\n#   types.isa.integer.or.text 'helo'\n#   types.isa.integer.or.text null\n#   #.........................................................................................................\n#   T?.eq collector.length, 0\n#   warn '^003-23^', rvr collector unless collector.length is 0\n#   done?()\n\n\n#-----------------------------------------------------------------------------------------------------------\n@itproto_validate = ( T, done ) ->\n  types = new ( require './intertype-prototype' ).Intertype()\n  #.........................................................................................................\n  T?.throws /cannot have two `of` props in succession/, -> try types.validate.list.of.of.text [ 42, ] catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `of` as first prop/,           -> try types.validate.of.integer 42 catch error\n    warn rvr error.message; throw error\n  T?.throws /cannot have `of` as last prop/,            -> try types.validate.list.of [ 42, ] catch error\n    warn rvr error.message; throw error\n  T?.throws /unknown type 'omg'/, -> try types.validate.omg 'helo' catch error\n    warn rvr error.message; throw error\n  #.........................................................................................................\n  T?.throws /not a valid list/, -> try types.validate.list 'helo' catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid set/, -> try types.validate.set new Map() catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid list\\.of\\.integer/,        -> try types.validate.list.of.integer       [ 4, 5, 6, true, ]                            catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid list\\.of\\.integer/,        -> try types.validate.list.of.integer       [ 'helo', ]                                   catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid list\\.of\\.integer/,        -> try types.validate.list.of.integer       6                                             catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid list\\.of\\.text/,           -> try types.validate.list.of.text          'helo'                                        catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid set\\.of\\.text/,            -> try types.validate.set.of.text           'helo'                                        catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid set\\.of\\.list\\.of\\.text/,  -> try types.validate.set.of.list.of.text   'helo'                                        catch error\n    warn rvr error.message; throw error\n  T?.throws /not a valid list\\.of\\.list\\.of\\.text/, -> try types.validate.list.of.list.of.text          [ [ 'a', 'b', ], [ 'c', ], [ 42, ], ] catch error\n    warn rvr error.message; throw error\n  #.........................................................................................................\n  T?.eq ( types.validate.list []                                                              ), []\n  T?.eq ( types.validate.set  new Set 'helo'                                                  ), new Set 'helo'\n  T?.eq ( types.validate.boolean               true                                           ), true\n  T?.eq ( types.validate.boolean               false                                          ), false\n  T?.eq ( types.validate.list.of.text          []                                             ), []\n  T?.eq ( types.validate.list.of.integer       []                                             ), []\n  T?.eq ( types.validate.list.of.text          [ 'helo', ]                                    ), [ 'helo', ]\n  T?.eq ( types.validate.list.of.integer       [ 4, 5, 6, ]                                   ), [ 4, 5, 6, ]\n  T?.eq ( types.validate.set.of.text           new Set 'helo'                                 ), new Set 'helo'\n  T?.eq ( types.validate.list.of.list.of.text          [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ] ),         [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ]\n  T?.eq ( types.validate.set.of.list.of.text   new Set [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ] ), new Set [ [ 'a', 'b', ], [ 'c', ], [ 'd', ], ]\n  done?()\n\n\n############################################################################################################\nif module is require.main then do =>\n  # test @itproto_can_access_mmx_state\n  # test @itproto_of\n  # @itproto_transitive_of()\n  # test @itproto_transitive_of\n  @itproto_validate()\n  test @itproto_validate\n  # test @\n"
  ]
}