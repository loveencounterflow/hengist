{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL/TESTS/HELPERS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n# #...........................................................................................................\n# test                      = require 'guy-test'\n# jr                        = JSON.stringify\n# { inspect, }              = require 'util'\n# xrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n# xrpr2                     = ( x ) -> inspect x, { colors: yes, breakLength: 20, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nFSP                       = require 'fs/promises'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  validate\n  validate_list_of }      = types.export()\nDATA                      = require '../../../lib/data-providers-nocache'\nDATOM                     = require 'datom'\n\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'interpolatable_value', ( x ) ->\n  return true if @isa.text x\n  return true if @isa.float x\n  return true if @isa.boolean x\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@get_icql_settings = ( remove_db = false ) ->\n  R                 = {}\n  R.connector       = require 'better-sqlite3'\n  R.db_path         = '/tmp/icql.db'\n  R.icql_path       = PATH.resolve PATH.join __dirname, '../../../assets/icql/test.icql'\n  if remove_db\n    try\n      ( require 'fs' ).unlinkSync R.db_path\n    catch error\n      throw error unless ( error.code is 'ENOENT' )\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@try_to_remove_file = ( path ) ->\n  try FS.unlinkSync path catch error\n    return if error.code is 'ENOENT'\n    throw error\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@resolve_path = ( path ) -> PATH.resolve PATH.join __dirname, '../../../', path\n\n#-----------------------------------------------------------------------------------------------------------\n@copy_over = ( from_path, to_path ) ->\n  @try_to_remove_file to_path unless to_path in [ ':memory:', '', ]\n  await FSP.copyFile from_path, to_path\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@interpolate  = ( template, namespace ) ->\n  validate.text template\n  validate.object namespace\n  R = template\n  for name, value of namespace\n    continue unless ( R.indexOf ( pattern = \"{#{name}}\" ) ) > -1\n    validate.interpolatable_value value\n    R = R.replaceAll pattern, value\n  if ( match = R.match /(?<!\\\\)\\{/ )\n    throw new Error \"unresolved curly bracket in template #{rpr template}\"\n  R = R.replaceAll '\\\\{', '{'\n  R = R.replaceAll '\\\\}', '}'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@get_data = ( cfg ) ->\n  return data_cache if data_cache?\n  whisper \"retrieving test data...\"\n  #.........................................................................................................\n  texts       = DATA.get_words cfg.word_count\n  #.........................................................................................................\n  data_cache  = { texts, }\n  data_cache  = DATOM.freeze data_cache\n  whisper \"...done\"\n  return data_cache\n\n#-----------------------------------------------------------------------------------------------------------\n@get_cfg = ->\n  R =\n    # word_count: 10_000\n    word_count: 10\n    db:\n      templates:\n        small:  @resolve_path 'assets/icql/small-datamill.db'\n        big:    @resolve_path 'assets/icql/Chinook_Sqlite_AutoIncrementPKs.db'\n      target:\n        small:  @resolve_path 'data/icql/icql-{ref}-{size}.db'\n        big:    @resolve_path 'data/icql/icql-{ref}-{size}.db'\n      work:\n        mem:    ':memory:'\n        fle:    @resolve_path 'data/icql/icql-{ref}-{size}.db'\n      temp:\n        small:  @resolve_path 'data/icql/icql-{ref}-{size}-temp.db'\n        big:    @resolve_path 'data/icql/icql-{ref}-{size}-temp.db'\n      old:\n        small:  @resolve_path 'data/icql/icql-{ref}-{size}-old.db'\n        big:    @resolve_path 'data/icql/icql-{ref}-{size}-old.db'\n    pragma_sets:\n      #.....................................................................................................\n      ### thx to https://forum.qt.io/topic/8879/solved-saving-and-restoring-an-in-memory-sqlite-database/2 ###\n      fle: [\n        'page_size = 4096'\n        'cache_size = 16384'\n        'temp_store = MEMORY'\n        'journal_mode = WAL'\n        'locking_mode = EXCLUSIVE'\n        'synchronous = OFF' ]\n      #.....................................................................................................\n      mem: []\n      bare: []\n  return R\n"
  ]
}