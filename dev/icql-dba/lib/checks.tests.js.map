{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/checks.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL-DBA/TESTS/FUNCTIONS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n# { to_width }              = require 'to-width'\non_process_exit           = require 'exit-hook'\nsleep                     = ( dts ) -> new Promise ( done ) => setTimeout done, dts * 1000\nSQL                       = String.raw\njr                        = JSON.stringify\njp                        = JSON.parse\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBA: get_foreign_keys_deferred() etc\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Dba }           = require H.icql_dba_path\n  #.........................................................................................................\n  list_table_a      = ( dba ) -> ( row.n for row from dba.query SQL\"select n from a;\" )\n  #.........................................................................................................\n  error             = null\n  dba               = new Dba()\n  # dba.open { schema: 'main', }\n  dba.execute SQL\"\"\"\n    create table a ( n integer not null primary key references b ( n ) );\n    create table b ( n integer not null primary key references a ( n ) deferrable initially deferred );\n    \"\"\"\n  #.........................................................................................................\n  try\n    dba.with_transaction ->\n      dba.execute SQL\"insert into b ( n ) values ( 100 );\"\n      dba.execute SQL\"insert into a ( n ) values ( 100 );\"\n      # dba.execute SQL\"insert into a ( n ) values ( 101 );\"\n  catch error\n    warn error.message\n  debug '^907^', dba.list dba.query SQL\"select * from a;\"\n  debug '^907^', dba.list dba.query SQL\"select * from b;\"\n  debug '^907^', dba.pragma \"foreign_key_list( 'a' );\"\n  debug '^907^', dba.pragma \"foreign_key_list( 'b' );\"\n  #.........................................................................................................\n  T?.eq dba.get_foreign_keys_state(),    true\n  T?.eq dba.get_foreign_keys_deferred(), false\n  T?.eq dba.get_unsafe_mode(),           false\n  T?.eq dba.within_transaction(),        false\n  T?.eq dba.get_unsafe_mode(),           false\n  #.........................................................................................................\n  dba.with_transaction -> T?.eq dba.within_transaction(), true\n  T?.eq dba.within_transaction(),        false\n  #.........................................................................................................\n  dba.with_unsafe_mode -> T?.eq dba.get_unsafe_mode(), true\n  T?.eq dba.get_unsafe_mode(),            false\n  #.........................................................................................................\n  dba.with_foreign_keys_deferred ->\n    T?.eq dba.get_foreign_keys_deferred(),  true\n    T?.eq dba.within_transaction(),         true\n  T?.eq dba.get_foreign_keys_deferred(), false\n  T?.eq dba.within_transaction(),        false\n  #.........................................................................................................\n  done?()\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  test @, { timeout: 10e3, }\n\n"
  ]
}