{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/extensions.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,wBAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,WAAR;;EAC5B,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,OADF,EAEE,QAFF,EAGE,gBAHF,CAAA,GAG4B,KAAK,CAAC,MAAN,CAAA,CAH5B;;EAIA,CAAA,CAAE,QAAF,CAAA,GAA4B,OAAA,CAAQ,UAAR,CAA5B,EAvBA;;;EA6BA,IAAC,CAAE,gBAAF,CAAD,GAAwB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACxB,QAAA;IAAE,CAAC,CAAC,aAAF,CAAA;IACA,CAAA,CAAE,GAAF,CAAA,GAAoB,OAAA,CAAQ,wBAAR,CAApB;IAEG,CAAA,CAAA,CAAA,GAAA,EAAA;AACL,UAAA,GAAA,EAAA;MAAI,GAAA,GAAU,IAAI,GAAJ,CAAA;MACV,GAAA,GAAU,CAAC,CAAC,OAAF,CAAA,EADd;;;;MAKI,IAAA,CAAK,SAAL,EAAgB,GAAG,CAAC,IAAJ,CAAS,GAAG,CAAC,KAAJ,CAAU,CAAA,yDAAA,CAAV,CAAT,CAAhB;MACA,IAAA,CAAK,SAAL,EAAgB,GAAG,CAAC,IAAJ,CAAS,GAAG,CAAC,KAAJ,CAAU,CAAA,kCAAA,CAAV,CAAT,CAAhB;AACA,aAAO;IARN,CAAA,IAHL;;IAaE,IAAA,CAAA;AACA,WAAO;EAfe,EA7BxB;;;EAiDA,IAAO,qBAAP;;IAEE,IAAA,CAAK,IAAC,CAAE,gBAAF,CAAN,EAFF;;AAjDA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL-DBA/TESTS/BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n{ to_width }              = require 'to-width'\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"load_extension\" ] = ( T, done ) ->\n  T.halt_on_error()\n  { Dba }           = require '../../../apps/icql-dba'\n  #---------------------------------------------------------------------------------------------------------\n  do =>\n    dba     = new Dba()\n    cfg     = H.get_cfg()\n    # dba.load_extension PATH.resolve PATH.join '/home/flow/jzr/hengist/dev/in-memory-sql/json1.so'\n    # # dba.load_extension PATH.resolve PATH.join '/home/flow/3rd-party-repos/sqlite/ext/fts5/fts5'\n    #.......................................................................................................\n    info '^334-1^', dba.list dba.query \"\"\"select json(' { \"this\" : \"is\", \"a\": [ \"test\" ] } ') as d;\"\"\"\n    info '^334-1^', dba.list dba.query \"\"\"select json_array(1,2,'3',4) as d;\"\"\"\n    return null\n  #---------------------------------------------------------------------------------------------------------\n  done()\n  return null\n\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  test @[ \"load_extension\" ]\n\n"
  ]
}