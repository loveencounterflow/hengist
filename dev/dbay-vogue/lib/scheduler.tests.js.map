{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/scheduler.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/TESTS/CONSTRUCTION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\n# PATH                      = require 'path'\n# FS                        = require 'fs'\n# H                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nguy                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"scheduler: duration pattern\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Vogue_scheduler   } = require '../../../apps/dbay-vogue'\n  abs_duration_pattern  = Vogue_scheduler.C.abs_duration_pattern\n  T?.eq ( type_of abs_duration_pattern ), 'regex'\n  T?.eq ( \"23 minutes\".match abs_duration_pattern     )?.groups.amount, '23'\n  T?.eq ( \"23e2 weeks\".match abs_duration_pattern     )?.groups.amount, '23e2'\n  T?.eq ( \"23.5e22 weeks\".match abs_duration_pattern  )?.groups.amount, '23.5e22'\n  T?.eq ( \"23 minutes\".match abs_duration_pattern     )?.groups.unit,   'minutes'\n  T?.eq ( \"23e2 weeks\".match abs_duration_pattern     )?.groups.unit,   'weeks'\n  T?.eq ( \"23.5e22 weeks\".match abs_duration_pattern  )?.groups.unit,   'weeks'\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"scheduler: add_interval_cfg\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Vogue_scheduler } = require '../../../apps/dbay-vogue'\n  vogue_scheduler     = new Vogue_scheduler()\n  { types }           = vogue_scheduler\n  T?.eq ( type_of types.isa.vogue_scheduler_add_interval_cfg ), 'function'\n  # types.validate.vogue_scheduler_add_interval_cfg { repeat: '1.5 hours', task: ( -> ), }\n  types.validate.vogue_scheduler_add_interval_cfg { repeat: '1.5 hours', jitter: '10%', pause: '10 minutes', task: ( -> ), }\n  T?.ok types.isa.vogue_scheduler_add_interval_cfg { repeat: '1.5 hours', jitter: '10%', pause: '10 minutes', task: ( -> ), }\n  return done?()\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # test @[ \"scheduler: duration pattern\" ]\n  test @[ \"scheduler: add_interval_cfg\" ]"
  ]
}