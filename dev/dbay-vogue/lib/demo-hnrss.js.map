{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-hnrss.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\ntypes                     = new ( require 'intertype' ).Intertype()\n#...........................................................................................................\n# ( require 'mixa/lib/check-package-versions' ) require '../pinned-package-versions.json'\nPATH                      = require 'path'\nFS                        = require 'fs'\ngot                       = require 'got'\nCHEERIO                   = require 'cheerio'\nGUY                       = require '../../../apps/guy'\n{ DBay, }                 = require '../../../apps/dbay'\n{ SQL, }                  = DBay\n{ Vogue,\n  Vogue_scraper }         = require '../../../apps/dbay-vogue'\n{ HDML, }                 = require '../../../apps/dbay-vogue/lib/hdml2'\nH                         = require '../../../apps/dbay-vogue/lib/helpers'\nglob                      = require 'glob'\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  url       = 'https://ionicabizau.net'\n  elements  =\n    title:  \".header h1\"\n    desc:   \".header h2\"\n    avatar:\n      selector: \".header img\"\n      attr:     \"src\"\n  { data, response, } = await scrape_it url, elements\n  info \"Status Code: ${response.statusCode}\"\n  urge data\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_zvg_online_net = ->\n  url       = 'https://www.zvg-online.net/1400/1101986118/ag_seite_001.php'\n  elements  =\n    # containers: '.container_vors a'\n    containers:\n      listItem: '.container_vors'\n      data:\n        listing:\n          listItem: 'a'\n  encoding  = 'latin1'\n  #.........................................................................................................\n  buffer    = await got url\n  html      = buffer.rawBody.toString encoding\n  d         = await scrape_it.scrapeHTML html, elements\n  # info \"Status Code: #{response.statusCode}\"\n  for container, idx in d.containers\n    urge '^74443^', idx, rpr container.listing\n    R = []\n    for line in container.listing\n      unless ( match = line.match /^(?<key>[^:]*):(?<value>.*)$/ )?\n        help '^3453^', rpr line\n        R.push { key: './.', value: line, }\n        continue\n      { key, value, } = match.groups\n      key             = key.trim()\n      value           = value.trim()\n      R.push { key, value, }\n    console.table R\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_zvg24_net = ->\n  url       = 'https://www.zvg24.net/zwangsversteigerung/brandenburg'\n  elements  =\n    # containers: '.container_vors a'\n    containers:\n      listItem: 'article'\n  #     data:\n  #       listing:\n  #         listItem: 'a'\n  encoding  = 'utf8'\n  #.........................................................................................................\n  # buffer    = await got url\n  # html      = buffer.rawBody.toString encoding\n  buffer    = FS.readFileSync PATH.join __dirname, '../sample-data/www.zvg24.net_,_zwangsversteigerung_,_brandenburg.html'\n  html      = buffer.toString encoding\n  d         = await scrape_it.scrapeHTML html, elements\n  # info \"Status Code: #{response.statusCode}\"\n  for text, idx in d.containers\n    lines = text.split /\\s*\\n\\s*/\n    # text = text.replace /\\x20+/g, ' '\n    # text = text.replace /\\n\\x20\\n/g, '\\n'\n    # text = text.replace /\\n+/g, '\\n'\n    # text = text.replace /Musterbild\\n/g, ''\n    lines = ( line for line in lines when line isnt 'Musterbild' )\n    urge '^74443^', idx, rpr lines\n    # urge '^74443^', idx, rpr container.replace /\\n+/g, '\\n'\n    # R = []\n    # for line in container.listing\n    #   unless ( match = line.match /^(?<key>[^:]*):(?<value>.*)$/ )?\n    #     help '^3453^', rpr line\n    #     R.push { key: './.', value: line, }\n    #     continue\n    #   { key, value, } = match.groups\n    #   key             = key.trim()\n    #   value           = value.trim()\n    #   R.push { key, value, }\n    # console.table R\n  return null\n\n#===========================================================================================================\nclass Ebayde extends Vogue_scraper\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape_html: ( html_or_buffer ) ->\n    dsk         = 'ebayde'\n    { sid, }    = @vogue.new_session dsk\n    insert_post = @vogue.queries.insert_post\n    seen        = @vogue.db.dt_now()\n    #.......................................................................................................\n    html        = @_html_from_html_or_buffer html_or_buffer\n    $           = CHEERIO.load html\n    R           = []\n    #.......................................................................................................\n    for item in ( $ 'div.s-item__info' )\n      whisper '^434554^', '----------------------------------------------------------'\n      item          = $ item\n      item_details  = item.find 'div.s-item__details'\n      item_title    = item.find 'h3.s-item__title'\n      item_subtitle = item.find 'div.s-item__subtitle'\n      item_price    = item.find 'span.s-item__price'\n      # urge '^434554^', item_details.text()\n      # info '^434554^', item_title.text()\n      # info '^434554^', item_subtitle.text()\n      # info '^434554^', item_price.text()\n      item_url      = ( item.find 'a' ).attr 'href'\n      item_url      = item_url.replace /^([^?]+)\\?.*$/, '$1'\n      item_id       = item_url.replace /^.*\\/([^\\/]+)$/, '$1'\n      # info '^434554^', item_url\n      # info '^434554^', item_id\n      pid           = \"ebayde-#{item_id}\"\n      title         = item_title\n      title         = item_title + \" / #{item_subtitle}\"\n      #.....................................................................................................\n      details = { title, item_url, }\n      details = JSON.stringify details\n      row     = @vogue.new_post { sid, pid, details, }\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_html_for_trends: ( row ) ->\n    { dsk\n      sid\n      ts\n      pid\n      rank\n      trend\n      details } = row\n    #.......................................................................................................\n    trend       = JSON.parse trend\n    details     = JSON.parse details\n    dsk_html    = HDML.text dsk\n    sid_html    = HDML.text \"#{sid}\"\n    ts_html     = HDML.text ts\n    id_html     = HDML.text pid\n    rank_html   = HDML.text \"#{rank}\"\n    trend_html  = HDML.text JSON.stringify trend\n    title_html  = HDML.insert 'a', { href: details.item_url, }, HDML.text details.title\n    #.......................................................................................................\n    tds         = [\n      HDML.insert 'td', dsk_html\n      HDML.insert 'td', sid_html\n      HDML.insert 'td', id_html\n      HDML.insert 'td', ts_html\n      HDML.insert 'td', rank_html\n      HDML.insert 'td', 'no sparkline' # @get_sparkline trend\n      HDML.insert 'td', trend_html\n      HDML.insert 'td', title_html\n      ]\n    #.......................................................................................................\n    return HDML.insert 'tr', null, tds.join ''\n\n\n#===========================================================================================================\nclass Hnrss extends Vogue_scraper\n\n  #---------------------------------------------------------------------------------------------------------\n  _remove_cdata: ( text ) -> text.replace /^<!\\[CDATA\\[(.*)\\]\\]>$/, '$1'\n\n  #---------------------------------------------------------------------------------------------------------\n  _article_url_from_description: ( description ) ->\n    if ( match = description.match /Article URL:\\s*(?<article_url>[^\\s]+)/ )?\n      return match.groups.article_url\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape: ->\n    url       = 'https://hnrss.org/newest?link=comments'\n    encoding  = 'utf8'\n    buffer    = await got url\n    return @scrape_html buffer.rawBody\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape_html: ( html_or_buffer ) ->\n    dsk         = 'hn'\n    { sid, }    = @vogue.new_session dsk\n    insert_post = @vogue.queries.insert_post\n    seen        = @vogue.db.dt_now()\n    #.......................................................................................................\n    html        = @_html_from_html_or_buffer html_or_buffer\n    #.......................................................................................................\n    ### NOTE This is RSS XML, so `link` doesn't behave like HTML `link` and namespaces are not supported: ###\n    ### TAINT Cheerio docs: \"can select with XML Namespaces but due to the CSS specification, the colon (:)\n     needs to be escaped for the selector to be valid\" ###\n    html        = html.replace /<dc:creator>/g,   '<creator>'\n    html        = html.replace /<\\/dc:creator>/g, '</creator>'\n    html        = html.replace /<link>/g,         '<reserved-link>'\n    html        = html.replace /<\\/link>/g,       '</reserved-link>'\n    #.......................................................................................................\n    $           = CHEERIO.load html\n    R           = []\n    # debug types.type_of $ 'item'\n    # debug ( $ 'item' ).html()\n    # debug ( $ 'item' ).each\n    # debug ( $ 'item' ).forEach\n    #.......................................................................................................\n    for item in ( $ 'item' )\n      item            = $ item\n      #.....................................................................................................\n      title           = item.find 'title'\n      title           = title.text()\n      title           = @_remove_cdata title\n      title           = title.trim()\n      #.....................................................................................................\n      discussion_url  = item.find 'reserved-link'\n      discussion_url  = discussion_url.text()\n      pid             = discussion_url.replace /^.*item\\?id=([0-9]+)$/, 'hn-$1'\n      #.....................................................................................................\n      date            = item.find 'pubDate'\n      date            = date.text()\n      #.....................................................................................................\n      creator         = item.find 'creator'\n      creator         = creator.text()\n      #.....................................................................................................\n      description     = item.find 'description'\n      description     = description.text()\n      description     = @_remove_cdata description\n      article_url     = @_article_url_from_description description\n      #.....................................................................................................\n      href    = null\n      R.push { pid, title, date, creator, discussion_url, article_url, }\n      ### TAINT avoid duplicate query ###\n      details = { title, discussion_url, date, creator, description, }\n      details = JSON.stringify details\n      row     = @vogue.new_post { sid, pid, details, }\n    #.......................................................................................................\n    # # H.tabulate \"Hacker News\", R\n    # H.tabulate \"Hacker News\", @vogue.db SQL\"\"\"select\n    #     sid                     as sid,\n    #     pid                      as pid,\n    #     rank                    as rank,\n    #     substring( details, 1, 100 )  as details\n    #   from scr_posts\n    #   where true\n    #     -- and ( rank < 10 )\n    #   order by sid, rank;\"\"\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_sparkline: ( trend ) ->\n    # # values = [ { sid: -1, rank: -1,  }, ]\n    # values = []\n    # for [ sid, rank, ] in trend\n    #   values.push { sid, rank: -rank, }\n    # values.unshift { sid: -1, rank: -1, } if values.length < 2\n    #.......................................................................................................\n    dense_trend         = []\n    dense_trend[ sid ]  = rank for [ sid, rank, ] in trend\n    # for rank, sid in dense_trend\n    #   dense_trend[ sid ] = 21 unless rank?\n    # dense_trend.unshift 21 while dense_trend.length < 12\n    values              = []\n    values.push { sid, rank, } for rank, sid in dense_trend\n    #.......................................................................................................\n    values_json = JSON.stringify values\n    #.......................................................................................................\n    R = \"\"\"<script>\n      var data      = #{values_json};\n      var plot_cfg  = {\n        marks: [\n          Plot.line( data, {\n            x:            'sid',\n            y:            'rank',\n            stroke:       'red',\n            strokeWidth:  4,\n            // curve:        'step' } ),\n            curve:        'linear' } ),\n            // curve:        'cardinal' } ),\n          Plot.dot( data, {\n            x:            'sid',\n            y:            'rank',\n            stroke:       'red',\n            fill:         'red',\n            strokeWidth:  4, } ),\n          ],\n        width:      500,\n        height:     100,\n        x:          { ticks: 12, domain: [ 0, 12, ], step: 1, },\n        y:          { ticks: 4, domain: [ 0, 20, ], step: 1, reverse: true, },\n        marginLeft: 50,\n        // color: {\n        //   type: \"linear\",\n        //   scheme: \"cividis\",\n        //   legend: true,\n        //   domain: [0, 20],\n        //   range: [0, 1] },\n        };\n        // color: {\n        //   legend: true,\n        //   width: 554,\n        //   columns: '120px', } };\n      document.body.append( Plot.plot( plot_cfg ) );\n      </script>\"\"\"\n    #.......................................................................................................\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  get_html_for_trends: ( row ) ->\n    { dsk\n      sid\n      ts\n      pid\n      rank\n      trend\n      details } = row\n    #.......................................................................................................\n    { title\n      discussion_url\n      article_url   } = details\n    #.......................................................................................................\n    trend       = JSON.parse trend\n    details     = JSON.parse details\n    dsk_html    = HDML.text dsk\n    sid_html    = HDML.text \"#{sid}\"\n    ts_html     = HDML.text ts\n    id_html     = HDML.text pid\n    rank_html   = HDML.text \"#{rank}\"\n    # debug '^354534^', rpr details\n    # debug '^354534^', rpr details.title\n    # debug '^354534^', rpr title\n    # debug '^354534^', rpr discussion_url\n    # debug '^354534^', rpr article_url\n    # debug '^354534^', types.type_of HDML.insert 'a', { href: discussion_url, }, HDML.text title\n    # process.exit 111\n    trend_html  = HDML.text JSON.stringify trend\n    title_html  = HDML.insert 'a', { href: details.discussion_url, }, HDML.text details.title\n    #.......................................................................................................\n    tds         = [\n      HDML.insert 'td', dsk_html\n      HDML.insert 'td', sid_html\n      HDML.insert 'td', id_html\n      HDML.insert 'td', ts_html\n      HDML.insert 'td', rank_html\n      HDML.insert 'td', @get_sparkline trend\n      HDML.insert 'td', trend_html\n      HDML.insert 'td', title_html\n      ]\n    #.......................................................................................................\n    return HDML.insert 'tr', null, tds.join ''\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_hnrss = ->\n  hnrss   = new Hnrss()\n  hnrss.vogue.queries.insert_datasource.run { dsk: 'hn', url: 'http://nourl', }\n  #.........................................................................................................\n  glob_pattern  = PATH.join __dirname, '../../../assets/dbay-vogue/hnrss.org_,_newest.???.xml'\n  for path in glob.sync glob_pattern\n    await do =>\n      buffer    = FS.readFileSync path\n      await hnrss.scrape_html buffer\n  #.........................................................................................................\n  # H.tabulate \"trends\", hnrss.vogue.db SQL\"\"\"select * from _scr_trends order by pid;\"\"\"\n  # H.tabulate \"trends\", hnrss.vogue.db SQL\"\"\"\n  #   select\n  #       dsk                                           as dsk,\n  #       sid                                           as sid,\n  #       pid                                           as pid,\n  #       rank                                          as rank,\n  #       trend                                         as trend,\n  #       substring( details, 1, 30 )                   as details\n  #     from scr_trends order by\n  #       sid desc,\n  #       rank;\"\"\"\n  H.tabulate \"trends\", hnrss.vogue.db SQL\"\"\"select * from scr_trends_html order by nr;\"\"\"\n  #.........................................................................................................\n  # demo_trends_as_table hnrss\n  #.........................................................................................................\n  return hnrss\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_ebayde = ->\n  ebayde   = new Ebayde()\n  ebayde.vogue.queries.insert_datasource.run { dsk: 'ebayde', url: 'http://nourl', }\n  #.........................................................................................................\n  glob_pattern  = PATH.join __dirname, '../../../assets/dbay-vogue/ebay-de-search-result-rucksack-????????-??????Z.html'\n  for path in glob.sync glob_pattern\n    debug '^435345^', path\n    await do =>\n      buffer    = FS.readFileSync path\n      await ebayde.scrape_html buffer\n    warn CND.reverse \"^345345345^ finish early after first source\"\n  #.........................................................................................................\n  # H.tabulate \"trends\", ebayde.vogue.db SQL\"\"\"select * from _scr_trends order by pid;\"\"\"\n  # H.tabulate \"trends\", ebayde.vogue.db SQL\"\"\"\n  #   select\n  #       dsk                                           as dsk,\n  #       sid                                           as sid,\n  #       pid                                           as pid,\n  #       rank                                          as rank,\n  #       trend                                         as trend,\n  #       substring( details, 1, 30 )                   as details\n  #     from scr_trends order by\n  #       sid desc,\n  #       rank;\"\"\"\n  H.tabulate \"trends\", ebayde.vogue.db SQL\"\"\"select * from scr_trends_html order by nr;\"\"\"\n  #.........................................................................................................\n  # demo_trends_as_table ebayde\n  #.........................................................................................................\n  return ebayde\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_serve_hnrss = ( cfg ) ->\n  { Vogue_server, } = require '../../../apps/dbay-vogue/lib/server'\n  hnrss         = await demo_hnrss()\n  vogue_server  = new Vogue_server { client: hnrss, }\n  debug '^45345^', vogue_server\n  debug '^45345^', ( k for k of vogue_server )\n  debug '^45345^', await vogue_server.start()\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_serve_ebayde = ( cfg ) ->\n  { Vogue_server, } = require '../../../apps/dbay-vogue/lib/server'\n  ebayde        = await demo_ebayde()\n  vogue_server  = new Vogue_server { client: ebayde, }\n  debug '^45345^', vogue_server\n  debug '^45345^', ( k for k of vogue_server )\n  debug '^45345^', await vogue_server.start()\n\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await demo_zvg_online_net()\n  # await demo_zvg24_net()\n  # await demo_hnrss()\n  # await demo_serve_hnrss()\n  await demo_serve_ebayde()\n  # view-source:https://www.skypack.dev/search?q=sqlite&p=1\n  # await demo_oanda_com_jsdom()\n  # f()\n\n\n\n\n"
  ]
}