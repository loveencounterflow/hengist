{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-hnrss.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\ntypes                     = new ( require 'intertype' ).Intertype()\n#...........................................................................................................\n# ( require 'mixa/lib/check-package-versions' ) require '../pinned-package-versions.json'\nPATH                      = require 'path'\nFS                        = require 'fs'\ngot                       = require 'got'\nCHEERIO                   = require 'cheerio'\nGUY                       = require '../../../apps/guy'\n{ DBay, }                 = require '../../../apps/dbay'\n{ SQL, }                  = DBay\n{ Vogue,\n  Vogue_scraper_ABC }     = require '../../../apps/dbay-vogue'\n{ HDML, }                 = require '../../../apps/hdml'\nH                         = require '../../../apps/dbay-vogue/lib/helpers'\nglob                      = require 'glob'\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  url       = 'https://ionicabizau.net'\n  elements  =\n    title:  \".header h1\"\n    desc:   \".header h2\"\n    avatar:\n      selector: \".header img\"\n      attr:     \"src\"\n  { data, response, } = await scrape_it url, elements\n  info \"Status Code: ${response.statusCode}\"\n  urge data\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_zvg_online_net = ->\n  url       = 'https://www.zvg-online.net/1400/1101986118/ag_seite_001.php'\n  elements  =\n    # containers: '.container_vors a'\n    containers:\n      listItem: '.container_vors'\n      data:\n        listing:\n          listItem: 'a'\n  encoding  = 'latin1'\n  #.........................................................................................................\n  buffer    = await got url\n  html      = buffer.rawBody.toString encoding\n  d         = await scrape_it.scrapeHTML html, elements\n  # info \"Status Code: #{response.statusCode}\"\n  for container, idx in d.containers\n    urge '^74443^', idx, rpr container.listing\n    R = []\n    for line in container.listing\n      unless ( match = line.match /^(?<key>[^:]*):(?<value>.*)$/ )?\n        help '^3453^', rpr line\n        R.push { key: './.', value: line, }\n        continue\n      { key, value, } = match.groups\n      key             = key.trim()\n      value           = value.trim()\n      R.push { key, value, }\n    console.table R\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_zvg24_net = ->\n  url       = 'https://www.zvg24.net/zwangsversteigerung/brandenburg'\n  elements  =\n    # containers: '.container_vors a'\n    containers:\n      listItem: 'article'\n  #     data:\n  #       listing:\n  #         listItem: 'a'\n  encoding  = 'utf8'\n  #.........................................................................................................\n  # buffer    = await got url\n  # html      = buffer.rawBody.toString encoding\n  buffer    = FS.readFileSync PATH.join __dirname, '../sample-data/www.zvg24.net_,_zwangsversteigerung_,_brandenburg.html'\n  html      = buffer.toString encoding\n  d         = await scrape_it.scrapeHTML html, elements\n  # info \"Status Code: #{response.statusCode}\"\n  for text, idx in d.containers\n    lines = text.split /\\s*\\n\\s*/\n    # text = text.replace /\\x20+/g, ' '\n    # text = text.replace /\\n\\x20\\n/g, '\\n'\n    # text = text.replace /\\n+/g, '\\n'\n    # text = text.replace /Musterbild\\n/g, ''\n    lines = ( line for line in lines when line isnt 'Musterbild' )\n    urge '^74443^', idx, rpr lines\n    # urge '^74443^', idx, rpr container.replace /\\n+/g, '\\n'\n    # R = []\n    # for line in container.listing\n    #   unless ( match = line.match /^(?<key>[^:]*):(?<value>.*)$/ )?\n    #     help '^3453^', rpr line\n    #     R.push { key: './.', value: line, }\n    #     continue\n    #   { key, value, } = match.groups\n    #   key             = key.trim()\n    #   value           = value.trim()\n    #   R.push { key, value, }\n    # console.table R\n  return null\n\n#===========================================================================================================\nclass Ebayde extends Vogue_scraper_ABC\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape_html: ( html_or_buffer ) ->\n    dsk         = 'ebayde'\n    { sid, }    = @hub.vdb.new_session dsk\n    insert_post = @hub.vdb.queries.insert_post\n    seen        = @hub.vdb.db.dt_now()\n    #.......................................................................................................\n    html        = @_html_from_html_or_buffer html_or_buffer\n    $           = CHEERIO.load html\n    R           = []\n    #.......................................................................................................\n    for item in ( $ 'div.s-item__info' )\n      item          = $ item\n      item_details  = item.find 'div.s-item__details'\n      item_title    = item.find 'h3.s-item__title'\n      item_subtitle = item.find 'div.s-item__subtitle'\n      item_price    = item.find 'span.s-item__price'\n      # urge '^434554^', item_details.text()\n      # info '^434554^', item_title.text()\n      # info '^434554^', item_subtitle.text()\n      # info '^434554^', item_price.text()\n      item_url      = ( item.find 'a' ).attr 'href'\n      item_url      = item_url.replace /^([^?]+)\\?.*$/, '$1'\n      item_id       = item_url.replace /^.*\\/([^\\/]+)$/, '$1'\n      if item_id is '123456'\n        warn \"skipping invalid Item ID (123456)\"\n        continue\n      # info '^434554^', item_url\n      # info '^434554^', item_id\n      pid           = \"ebayde-#{item_id}\"\n      title         = item_title.text()\n      subtitle      = item_subtitle.text()\n      title         = title + \" / #{subtitle}\"\n      title_url     = item_url\n      #.....................................................................................................\n      details = { title, title_url, }\n      details = JSON.stringify details\n      row     = @hub.vdb.new_post { sid, pid, details, }\n    #.......................................................................................................\n    # process.exit 111\n    return null\n\n\n#===========================================================================================================\nclass Hnrss extends Vogue_scraper_ABC\n\n  #---------------------------------------------------------------------------------------------------------\n  _remove_cdata: ( text ) -> text.replace /^<!\\[CDATA\\[(.*)\\]\\]>$/, '$1'\n\n  #---------------------------------------------------------------------------------------------------------\n  _article_url_from_description: ( description ) ->\n    if ( match = description.match /Article URL:\\s*(?<article_url>[^\\s]+)/ )?\n      return match.groups.article_url\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape: ->\n    url       = 'https://hnrss.org/newest?link=comments'\n    encoding  = 'utf8'\n    buffer    = await got url\n    return @scrape_html buffer.rawBody\n\n  #---------------------------------------------------------------------------------------------------------\n  scrape_html: ( html_or_buffer ) ->\n    dsk         = 'hn'\n    { sid, }    = @hub.vdb.new_session dsk\n    insert_post = @hub.vdb.queries.insert_post\n    seen        = @hub.vdb.db.dt_now()\n    #.......................................................................................................\n    html        = @_html_from_html_or_buffer html_or_buffer\n    #.......................................................................................................\n    ### NOTE This is RSS XML, so `link` doesn't behave like HTML `link` and namespaces are not supported: ###\n    ### TAINT Cheerio docs: \"can select with XML Namespaces but due to the CSS specification, the colon (:)\n     needs to be escaped for the selector to be valid\" ###\n    html        = html.replace /<dc:creator>/g,   '<creator>'\n    html        = html.replace /<\\/dc:creator>/g, '</creator>'\n    html        = html.replace /<link>/g,         '<reserved-link>'\n    html        = html.replace /<\\/link>/g,       '</reserved-link>'\n    #.......................................................................................................\n    $           = CHEERIO.load html\n    #.......................................................................................................\n    for item in ( $ 'item' )\n      item            = $ item\n      #.....................................................................................................\n      title           = item.find 'title'\n      title           = title.text()\n      title           = @_remove_cdata title\n      title           = title.trim()\n      #.....................................................................................................\n      discussion_url  = item.find 'reserved-link'\n      discussion_url  = discussion_url.text()\n      pid             = discussion_url.replace /^.*item\\?id=([0-9]+)$/, 'hn-$1'\n      #.....................................................................................................\n      date            = item.find 'pubDate'\n      date            = date.text()\n      #.....................................................................................................\n      creator         = item.find 'creator'\n      creator         = creator.text()\n      #.....................................................................................................\n      description     = item.find 'description'\n      description     = description.text()\n      description     = @_remove_cdata description\n      article_url     = @_article_url_from_description description\n      title_url       = discussion_url\n      #.....................................................................................................\n      href    = null\n      ### TAINT avoid duplicate query ###\n      details = { title, title_url, date, creator, description, }\n      details = JSON.stringify details\n      row     = @hub.vdb.new_post { sid, pid, details, }\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_hnrss = ->\n  { Vogue\n    Vogue_scraper_ABC\n    Vogue_db      } = require '../../../apps/dbay-vogue'\n  { DBay          } = require '../../../apps/dbay'\n  path              = PATH.resolve PATH.join __dirname, '../../../dev-shm/dbay-vogue.db'\n  trash_path        = PATH.resolve PATH.join __dirname, '../../../dev-shm/dbay-vogue.trashed.db'\n  trash_sql_path    = PATH.resolve PATH.join __dirname, '../../../dev-shm/dbay-vogue.trashed.sql'\n  db                = new DBay { path, }\n  vdb               = new Vogue_db { db, }\n  vogue             = new Vogue { vdb, }\n  dsk               = 'hn'\n  scraper           = new Hnrss()\n  vogue.scrapers.add { dsk, scraper, }\n  ### TAINT use API method, don't use query directly ###\n  ### TAINT should be done by `vogue.scraper.add()` ###\n  vogue.vdb.queries.insert_datasource.run { dsk, url: 'http://nourl', }\n  #.........................................................................................................\n  glob_pattern  = PATH.join __dirname, '../../../assets/dbay-vogue/hnrss.org_,_newest.???.xml'\n  for path in glob.sync glob_pattern\n    await do =>\n      buffer    = FS.readFileSync path\n      await scraper.scrape_html buffer\n  # H.tabulate \"trends\", db SQL\"\"\"select\n  #     dsk,\n  #     sid,\n  #     ts,\n  #     pid,\n  #     rank,\n  #     substring( trend,   1, 20 ) as trend,\n  #     substring( details, 1, 20 ) as details\n  #   from scr_trends;\"\"\"\n  #.........................................................................................................\n  # { Desql         } = require '../../../apps/desql'\n  # desql             = new Desql()\n  # desql.db          = db ### TAINT should be possible to just pass in DB ###\n  # desql.create_trashlib()\n  # desql.trash_to_sql { path: trash_sql_path, overwrite: true, }\n  # desql.trash_to_sqlite { path: trash_path, overwrite: true, }\n  # help '^4564^', \"wrote trashed db to #{trash_path}\"\n  #.........................................................................................................\n  return vogue\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_ebayde = ->\n  { Vogue\n    Vogue_scraper_ABC\n    Vogue_db      } = require '../../../apps/dbay-vogue'\n  dsk               = 'ebayde'\n  vogue             = new Vogue()\n  scraper           = new Ebayde()\n  vogue.scrapers.add { dsk, scraper, }\n  ### TAINT use API method, don't use query directly ###\n  ### TAINT should be done by `vogue.scraper.add()` ###\n  vogue.vdb.queries.insert_datasource.run { dsk, url: 'http://nourl', }\n  #.........................................................................................................\n  glob_pattern  = PATH.join __dirname, '../../../assets/dbay-vogue/ebay-de-search-result-rucksack-????????-??????Z.html'\n  for path in glob.sync glob_pattern\n    await do =>\n      buffer    = FS.readFileSync path\n      await scraper.scrape_html buffer\n  #.........................................................................................................\n  return vogue\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_serve_hnrss = ( cfg ) ->\n  vogue = await demo_hnrss()\n  debug '^445345-16^', vogue.server.start()\n  help '^445345-17^', \"server started\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_serve_ebayde = ( cfg ) ->\n  vogue = await demo_ebayde()\n  debug '^445345-16^', vogue.server.start()\n  help '^445345-17^', \"server started\"\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await demo_zvg_online_net()\n  # await demo_zvg24_net()\n  # await demo_hnrss()\n  # await demo_serve_hnrss()\n  await demo_serve_ebayde()\n\n\n\n\n"
  ]
}