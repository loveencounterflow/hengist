{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-scheduler.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,cAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA,EAf5B;;;;;EAsBA,cAAA,GAAiB,QAAA,CAAA,CAAA;AACjB,QAAA,WAAA,EAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,KAAA,EAAA;IAAE,CAAA,CAAE,WAAF,CAAA,GAAoB,OAAA,CAAQ,mCAAR,CAApB;IACA,CAAA,CAAE,KAAF,EACE,QADF,EAEE,aAFF,CAAA,GAEoB,OAAA,CAAQ,0BAAR,CAFpB;IAGA,KAAA,GAAc,IAAI,KAAJ,CAAA;IACd,KAAA,GACE;MAAA,CAAA,EAAG,uDAAH;MACA,CAAA,EAAG,iDADH;MAEA,CAAA,EAAG;IAFH;IAGF,oBAAA,GAAwB,QAAA,CAAA,CAAA;aAAG,CAAE,IAAF,CAAA,GAAA;eAAY,OAAO,CAAC,MAAM,CAAC,KAAf,CAAqB,GAArB;MAAZ;IAAH;IACxB,UAAA,GAAc,CAAE,KAAF,EAAS,IAAT,CAAA,GAAA;AAChB,UAAA;AAAI,aAAO,MAAA,GAAU,MAAA,QAAA,CAAA,CAAA;QACf,OAAO,CAAC,MAAM,CAAC,KAAf,CAAqB,KAArB;QACA,WAAW,CAAC,IAAZ,CAAiB,IAAjB;eACA,CAAA,MAAM,KAAK,CAAC,SAAS,CAAC,KAAhB,CAAsB,GAAtB,CAAN;MAHe;IADL;IAKd,KAAK,CAAC,SAAS,CAAC,YAAhB,CAA6B;MAAE,MAAA,EAAQ,oBAAA,CAAA,CAAV;MAAkC,MAAA,EAAQ;IAA1C,CAA7B;IACA,KAAK,CAAC,SAAS,CAAC,YAAhB,CAA6B;MAAE,MAAA,EAAU,UAAA,CAAW,GAAX,EAAgB,KAAK,CAAC,CAAtB,CAAZ;MAAuC,MAAA,EAAQ;IAA/C,CAA7B;IACA,KAAK,CAAC,SAAS,CAAC,YAAhB,CAA6B;MAAE,MAAA,EAAU,UAAA,CAAW,GAAX,EAAgB,KAAK,CAAC,CAAtB,CAAZ;MAAuC,MAAA,EAAQ;IAA/C,CAA7B;IACA,KAAK,CAAC,SAAS,CAAC,YAAhB,CAA6B;MAAE,MAAA,EAAU,UAAA,CAAW,GAAX,EAAgB,KAAK,CAAC,CAAtB,CAAZ;MAAuC,MAAA,EAAQ;IAA/C,CAA7B;AACA,WAAO;EApBQ,EAtBjB;;;EA8CA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,KAAA,CAAA,CAAA,GAAA;aAChC,CAAA,MAAM,cAAA,CAAA,CAAN;IADgC,CAAA,IAAlC;;AA9CA",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/DEMO-SCHEDULER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\ntypes                     = new ( require 'intertype' ).Intertype()\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_scheduler = ->\n  { AUDIOPLAYER   } = require '../../snippets/lib/demo-node-beep'\n  { Vogue \n    Vogue_db \n    Vogue_scraper } = require '../../../apps/dbay-vogue'\n  vogue       = new Vogue()\n  paths       =\n    a: '/usr/share/sounds/LinuxMint/stereo/button-pressed.ogg'\n    b: '/usr/share/mint-artwork/sounds/notification.oga'\n    c: '/usr/share/mint-artwork/sounds/logout.ogg'\n  get_metronome_callee  = -> ( path ) => process.stdout.write '.'\n  get_callee  = ( sigil, path ) =>\n    return callee  = ->\n      process.stdout.write sigil\n      AUDIOPLAYER.play path\n      await vogue.scheduler.sleep 0.2\n  vogue.scheduler.add_interval { callee: get_metronome_callee(), repeat: \"0.1 seconds\", }\n  vogue.scheduler.add_interval { callee: ( get_callee '+', paths.a ), repeat: \"1.2 seconds\", }\n  vogue.scheduler.add_interval { callee: ( get_callee 'X', paths.b ), repeat: \"1.5 seconds\", }\n  vogue.scheduler.add_interval { callee: ( get_callee '@', paths.c ), repeat: \"2.1 seconds\", }\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await demo_scheduler()\n\n"
  ]
}