{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/mirage.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-MIRAGE'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"location marker matching\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Mrg } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '<mrg:loc#first/>',         [ { id: 'first' } ], null ]\n    [ '<mrg:loc#foo-bar-123/>',   [ { id: 'foo-bar-123' } ], null ]\n    [ '<mrg:loc# foo-bar-123/>',  [], null ]\n    [ '<MRG:loc#foo-bar-123/>',   [], null ]\n    [ '<mrg:loc#first />',        [], null ]\n    [ '<mrg:loc id=\"first\"/>',    [], null ]\n    [ '<mrg:loc#first>',          [], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = ( { d.groups..., } for d from probe.matchAll Mrg.C.defaults.constructor_cfg.loc_pattern )\n      resolve result\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"mrg.refresh_datasource\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'sp'\n  path      = 'short-proposal.mkts.md'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 0, bytes: 0 }\n  #.........................................................................................................\n  do =>\n    mrg._update_digest dsk, null\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, force: true, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"loc markers 1\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  info '^33298-1^', mrg.refresh_datasource { dsk, }\n  #.........................................................................................................\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  console.table db.all_rows SQL\"select * from mrg_locs   order by dsk, locid;\"\n  T?.eq ( db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\" ), [\n    { dsk: 'twcm', lnr: 1, lnpart: 1, isloc: 0, line: '<title>' },\n    { dsk: 'twcm', lnr: 1, lnpart: 2, isloc: 1, line: '<mrg:loc#title/>' },\n    { dsk: 'twcm', lnr: 1, lnpart: 3, isloc: 0, line: '</title>' },\n    { dsk: 'twcm', lnr: 2, lnpart: 1, isloc: 0, line: '<article>' },\n    { dsk: 'twcm', lnr: 3, lnpart: 1, isloc: 0, line: '  <p>Here comes some ' },\n    { dsk: 'twcm', lnr: 3, lnpart: 2, isloc: 1, line: '<mrg:loc#content/>' },\n    { dsk: 'twcm', lnr: 3, lnpart: 3, isloc: 0, line: '.</p>' },\n    { dsk: 'twcm', lnr: 4, lnpart: 1, isloc: 0, line: '  </article>' },\n    { dsk: 'twcm', lnr: 5, lnpart: 1, isloc: 0, line: '' } ]\n  T?.eq ( db.all_rows SQL\"select * from mrg_locs   order by dsk, locid;\" ), [\n    { dsk: 'twcm', locid: 'content', lnr: 3, lnpart: 2 },\n    { dsk: 'twcm', locid: 'title', lnr: 1, lnpart: 2 } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"loc markers 2\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  info '^33298-2^', mrg.refresh_datasource { dsk, }\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  info '^33298-3^', mrg.append_to_loc { dsk, locid: 'title', text: \"A Grand Union\" }\n  # info '^33298-4^', mrg.prepend_to_loc { dsk, locid: 'content', text: \"content goes here\" }\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  #.........................................................................................................\n  for row from mrg.walk_line_rows { dsk, }\n    urge '^587^', row\n  console.table [ ( mrg.walk_line_rows { dsk, } )..., ]\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @[ \"mrg.refresh_datasource\" ]\n  # test @[ \"loc markers 1\" ]\n  @[ \"loc markers 2\" ]()\n\n"
  ]
}