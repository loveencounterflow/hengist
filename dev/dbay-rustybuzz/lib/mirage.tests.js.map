{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/mirage.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-MIRAGE'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"location marker matching\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Mrg } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '<mrg:loc#first/>',         [ [ '', '<mrg:loc#first/>', ''       ], { locid: 'first'        }, ], ]\n    [ '<mrg:loc#foo-bar-123/>',   [ [ '', '<mrg:loc#foo-bar-123/>', '' ], { locid: 'foo-bar-123'  }, ], ]\n    [ '<mrg:loc# foo-bar-123/>',  [ [ '<mrg:loc# foo-bar-123/>'        ], { locid: ' foo-bar-123' }, ], ]\n    [ '<MRG:loc#foo-bar-123/>',   [ [ '<MRG:loc#foo-bar-123/>'         ], { locid: 'foo-bar-123'  }, ], ]\n    [ '<mrg:loc#first />',        [ [ '<mrg:loc#first />'              ], { locid: 'first '       }, ], ]\n    [ '<mrg:loc id=\"first\"/>',    [ [ '<mrg:loc id=\"first\"/>'          ], null                     , ], ]\n    [ '<mrg:loc#first>',          [ [ '<mrg:loc#first>'                ], { locid: 'first>'       }, ], ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # result = ( { d.groups..., } for d from probe.matchAll Mrg.C.defaults.constructor_cfg.loc_splitter )\n      result = [\n        ( probe.split Mrg.C.defaults.constructor_cfg.loc_splitter ),\n        ( ( probe.match Mrg.C.defaults.constructor_cfg.locid_re )?.groups ? null ) ]\n      resolve result\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"mrg.refresh_datasource\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'sp'\n  path      = 'short-proposal.mkts.md'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 0, bytes: 0 }\n  #.........................................................................................................\n  do =>\n    mrg._update_digest dsk, null\n    result  = mrg.refresh_datasource { dsk, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  do =>\n    result  = mrg.refresh_datasource { dsk, force: true, }\n    debug '^44498^', result\n    T?.eq result, { files: 1, bytes: 384 }\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"altering mirrored source lines causes error\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  mrg.refresh_datasource { dsk, }\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  rows_before = db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  #.........................................................................................................\n  do =>\n    error = null\n    try\n      db SQL\"\"\"insert into mrg_mirror\n        ( dsk, lnr, lnpart, xtra, isloc, line )\n        values ( $dsk, $lnr, $lnpart, $xtra, $isloc, $line )\"\"\", {\n          dsk:      dsk,\n          lnr:      10,\n          lnpart:   0,\n          xtra:     0,\n          isloc:    0,\n          line:     \"some text\", }\n    catch error\n      warn CND.reverse error.message\n      T?.ok ( /not allowed to modify table mrg_mirror/ ).test error.message\n    T?.ok error?\n  #.........................................................................................................\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  rows_after = db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  T?.eq rows_before, rows_after\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"loc markers 1\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  info '^33298-1^', mrg.refresh_datasource { dsk, }\n  #.........................................................................................................\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  console.table db.all_rows SQL\"select * from mrg_locs   order by dsk, locid;\"\n  T?.eq ( db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\" ), [\n    { dsk: 'twcm', lnr: 1, lnpart: 0, xtra: 0, isloc: 0, line: '<title>' },\n    { dsk: 'twcm', lnr: 1, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#title/>' },\n    { dsk: 'twcm', lnr: 1, lnpart: 2, xtra: 0, isloc: 0, line: '</title>' },\n    { dsk: 'twcm', lnr: 2, lnpart: 0, xtra: 0, isloc: 0, line: '<article>' },\n    { dsk: 'twcm', lnr: 3, lnpart: 0, xtra: 0, isloc: 0, line: '  <p>Here comes some ' },\n    { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#content/>' },\n    { dsk: 'twcm', lnr: 3, lnpart: 2, xtra: 0, isloc: 0, line: '.</p>' },\n    { dsk: 'twcm', lnr: 4, lnpart: 0, xtra: 0, isloc: 0, line: '  </article>' },\n    { dsk: 'twcm', lnr: 5, lnpart: 0, xtra: 0, isloc: 0, line: '' } ]\n  T?.eq ( db.all_rows SQL\"select * from mrg_locs order by dsk, locid;\" ), [\n    { dsk: 'twcm', locid: 'content', lnr: 3, lnpart: 1 },\n    { dsk: 'twcm', locid: 'title', lnr: 1, lnpart: 1 } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"loc markers 2\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  #.........................................................................................................\n  mrg.register_dsk { dsk, path, }\n  mrg.refresh_datasource { dsk, }\n  #.........................................................................................................\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  rows = db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  T?.eq rows[ 0 ], { dsk: 'twcm', lnr: 1, lnpart: 0, xtra: 0, isloc: 0, line: '<title>'               }\n  T?.eq rows[ 1 ], { dsk: 'twcm', lnr: 1, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#title/>'      }\n  T?.eq rows[ 2 ], { dsk: 'twcm', lnr: 1, lnpart: 2, xtra: 0, isloc: 0, line: '</title>'              }\n  T?.eq rows[ 3 ], { dsk: 'twcm', lnr: 2, lnpart: 0, xtra: 0, isloc: 0, line: '<article>'             }\n  T?.eq rows[ 4 ], { dsk: 'twcm', lnr: 3, lnpart: 0, xtra: 0, isloc: 0, line: '  <p>Here comes some ' }\n  T?.eq rows[ 5 ], { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#content/>'    }\n  T?.eq rows[ 6 ], { dsk: 'twcm', lnr: 3, lnpart: 2, xtra: 0, isloc: 0, line: '.</p>'                 }\n  T?.eq rows[ 7 ], { dsk: 'twcm', lnr: 4, lnpart: 0, xtra: 0, isloc: 0, line: '  </article>'          }\n  T?.eq rows[ 8 ], { dsk: 'twcm', lnr: 5, lnpart: 0, xtra: 0, isloc: 0, line: ''                      }\n  #.........................................................................................................\n  T?.eq ( mrg.append_to_loc { dsk, locid: 'title',  text: \"A Grand Union\" } ), { dsk: 'twcm', lnr: 1, lnpart: 1, xtra: 1, isloc: 0, line: 'A Grand Union' }\n  T?.eq ( mrg.append_to_loc { dsk, locid: 'content', text: \"more \"        } ), { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 1, isloc: 0, line: 'more ' }\n  T?.eq ( mrg.append_to_loc { dsk, locid: 'content', text: \"content\"      } ), { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 2, isloc: 0, line: 'content' }\n  # info '^33298-4^', mrg.prepend_to_loc { dsk, locid: 'content', text: \"content goes here\" }\n  console.table db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  rows = db.all_rows SQL\"select * from mrg_mirror order by dsk, lnr, lnpart;\"\n  T?.eq rows[ 0  ], { dsk: 'twcm', lnr: 1, lnpart: 0, xtra: 0, isloc: 0, line: '<title>'               }\n  T?.eq rows[ 1  ], { dsk: 'twcm', lnr: 1, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#title/>'      }\n  T?.eq rows[ 2  ], { dsk: 'twcm', lnr: 1, lnpart: 1, xtra: 1, isloc: 0, line: 'A Grand Union'         }\n  T?.eq rows[ 3  ], { dsk: 'twcm', lnr: 1, lnpart: 2, xtra: 0, isloc: 0, line: '</title>'              }\n  T?.eq rows[ 4  ], { dsk: 'twcm', lnr: 2, lnpart: 0, xtra: 0, isloc: 0, line: '<article>'             }\n  T?.eq rows[ 5  ], { dsk: 'twcm', lnr: 3, lnpart: 0, xtra: 0, isloc: 0, line: '  <p>Here comes some ' }\n  T?.eq rows[ 6  ], { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 0, isloc: 1, line: '<mrg:loc#content/>'    }\n  T?.eq rows[ 7  ], { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 1, isloc: 0, line: 'more '                 }\n  T?.eq rows[ 8  ], { dsk: 'twcm', lnr: 3, lnpart: 1, xtra: 2, isloc: 0, line: 'content'               }\n  T?.eq rows[ 9  ], { dsk: 'twcm', lnr: 3, lnpart: 2, xtra: 0, isloc: 0, line: '.</p>'                 }\n  T?.eq rows[ 10 ], { dsk: 'twcm', lnr: 4, lnpart: 0, xtra: 0, isloc: 0, line: '  </article>'          }\n  T?.eq rows[ 11 ], { dsk: 'twcm', lnr: 5, lnpart: 0, xtra: 0, isloc: 0, line: ''                      }\n  #.........................................................................................................\n  for { line, } from mrg.walk_line_rows { dsk, }\n    urge '^587^', rpr line\n  T?.eq ( mrg.get_line_rows { dsk, } ), [\n    { dsk: 'twcm', lnr: 1, line: '<title><mrg:loc#title/>A Grand Union</title>'             },\n    { dsk: 'twcm', lnr: 2, line: '<article>'                                                },\n    { dsk: 'twcm', lnr: 3, line: '  <p>Here comes some <mrg:loc#content/>more content.</p>' },\n    { dsk: 'twcm', lnr: 4, line: '  </article>'                                             },\n    { dsk: 'twcm', lnr: 5, line: ''                                                         } ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"loc markers 3\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require H.dbay_path\n  { Mrg   } = require '../../../apps/dbay-rustybuzz/lib/_mirage'\n  # { Drb }   = require H.drb_path\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  #.........................................................................................................\n  mrg.register_dsk { dsk, path, }\n  mrg.refresh_datasource { dsk, }\n  #.........................................................................................................\n  mrg.append_to_loc { dsk, locid: 'title',  text: \"A Grand Union\" }\n  mrg.append_to_loc { dsk, locid: 'content', text: \"more \"        }\n  mrg.append_to_loc { dsk, locid: 'content', text: \"content\"      }\n  T?.eq ( mrg.get_text { dsk, keep_locs: true,  } ), '<title><mrg:loc#title/>A Grand Union</title>\\n<article>\\n  <p>Here comes some <mrg:loc#content/>more content.</p>\\n  </article>\\n'\n  T?.eq ( mrg.get_text { dsk, keep_locs: false, } ), '<title>A Grand Union</title>\\n<article>\\n  <p>Here comes some more content.</p>\\n  </article>\\n'\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @[ \"altering mirrored source lines causes error\" ]\n  # @[ \"altering mirrored source lines causes error\" ]()\n  # test @[ \"location marker matching\" ]\n  # test @[ \"mrg.refresh_datasource\" ]\n  # test @[ \"loc markers 1\" ]\n  # test @[ \"loc markers 2\" ]\n  # test @[ \"loc markers 3\" ]\n\n"
  ]
}