{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-html-in-sql.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n###\n\nHypertext   HTMLish\nDatabase    DBay\nMarkup      Manipulation\nLanguage    Library\n\nHypertext+DB\n\nHTMLish DataMilL\n\n###\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-RUSTYBUZZ/DEMO-HDML'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\n{ DBay }                  = require H.dbay_path\n{ Drb }                   = require H.drb_path\n# { Mrg }                   = require PATH.join H.drb_path, 'lib/_mirage'\n{ width_of\n  to_width }              = require 'to-width'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass Hdml\n\n  #-----------------------------------------------------------------------------------------------------------\n  escape_text: ( text ) ->\n    R = text\n    R = R.replace /&/g,   '&amp;'\n    R = R.replace /</g,   '&lt;'\n    R = R.replace />/g,   '&gt;'\n    return R\n\n  #-----------------------------------------------------------------------------------------------------------\n  atr_value_as_text: ( x ) ->\n    R = if isa.text x then x else JSON.stringify x\n    R = @escape_text R\n    R = R.replace /'/g,   '&#39;'\n    R = R.replace /\\n/g,  '&#10;'\n    return \"'#{R}'\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  create_tag: ( sigil, tag, atrs = null ) ->\n    return switch sigil\n      when '<' then @_create_opening_or_selfclosing_tag false, tag, atrs\n      when '^' then @_create_opening_or_selfclosing_tag true,  tag, atrs\n      when '>' then @create_closing_tag tag\n    throw new Error \"^45487^ illegal sigil #{rpr sigil}\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  create_opening_tag:     ( tag, atrs = null ) -> @_create_opening_or_selfclosing_tag false, tag, atrs\n  create_selfclosing_tag: ( tag, atrs = null ) -> @_create_opening_or_selfclosing_tag true,  tag, atrs\n\n  #-----------------------------------------------------------------------------------------------------------\n  _create_opening_or_selfclosing_tag: ( is_selfclosing, tag, atrs = null ) ->\n    ### TAINT validate or escape tag, atr keys ###\n    s = if is_selfclosing then '/' else ''\n    return \"<#{tag}#{s}>\" if ( not atrs? ) or ( ( Object.keys atrs ).length is 0 )\n    atrs_txt = ( \"#{k}=#{@atr_value_as_text v}\" for k, v of atrs ).join ' '\n    return \"<#{tag} #{atrs_txt}#{s}>\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  ### TAINT validate or escape tag ###\n  create_closing_tag: ( tag ) -> \"</#{tag}>\"\n\nhdml = new Hdml()\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@demo_datamill = ( cfg ) ->\n  db              = new DBay { path: '/dev/shm/demo-datamill.sqlite', }\n  db \"drop view  if exists next_free_aid;\"\n  db \"drop table if exists atrs;\"\n  db \"drop table if exists tags;\"\n  db \"drop table if exists atrids;\"\n  db \"drop table if exists docs;\"\n  # db SQL\"\"\"\n    # drop view  if exists next_free_aid;\n    # drop table if exists atrids;\n    # drop table if exists atrs;\n    # drop table if exists tags;\n    # drop table if exists docs;\"\"\"\n  db SQL\"\"\"\n    create table atrids ( atrid integer not null primary key );\"\"\"\n  db SQL\"\"\"\n    create table atrs (\n        atrid integer not null references atrids,\n        k     text not null,\n        v     text not null,\n      primary key ( atrid, k ) );\"\"\"\n  db SQL\"\"\"\n    create table tags (\n        tid   integer not null primary key,\n        sgl   text    not null,      -- sigil, one of `<`, `>`, `^`\n        tag   text    not null,      -- use '$text' for text nodes\n        atrid integer references atrids,\n        text  text );\"\"\"\n  db SQL\"\"\"\n    create table docs (\n        doc   integer not null,   -- references docs\n        v2    integer not null,   -- VNR\n        v3    integer not null,   -- VNR\n        v4    integer not null,   -- VNR\n        tid   integer not null references tags,\n      primary key ( doc, v2, v3, v4 ) );\"\"\"\n  #.........................................................................................................\n  _insert_atrid     = db.prepare_insert { into: 'atrids', returning: '*', exclude: [ 'atrid', ], }\n  _insert_tag       = db.prepare_insert { into: 'tags',   returning: '*', exclude: [ 'tid', ], }\n  _insert_atr       = db.prepare_insert { into: 'atrs',   returning: '*', }\n  _insert_doc       = db.prepare_insert { into: 'docs',   returning: '*', }\n  #.........................................................................................................\n  db.create_window_function\n    name:           'xxx_array_agg'\n    varargs:        false\n    deterministic:  true\n    start:          null\n    step:           ( total, k, v ) ->\n      if k?\n        total      ?= {}\n        total[ k ]  = v\n      return total\n    inverse:        ( total, dropped ) -> return null unless total?; delete total[ k ]; total\n    result:         ( total ) -> return '' unless total?; JSON.stringify total\n  #.........................................................................................................\n  doc         = 1\n  _append_tag = ( doc, sgl, tag, atrs = null, text = null ) ->\n    atrid = null\n    if text?\n      validate.null atrs\n    else if atrs?\n      validate.null text\n      { atrid } = db.first_row _insert_atrid\n      for k, v of atrs\n        v = rpr v unless isa.text v\n        info '^689-1^', db.first_row _insert_atr, { atrid, k, v, }\n    urge db.first_row _insert_tag, { doc, sgl, tag, atrid, text, }\n    return null\n  _append_tag 1, '<', 'div', { id: 'c1', class: [ 'foo', 'bar', ], }\n  _append_tag 1, '^', '$text', null, \"helo\"\n  _append_tag 1, '>', 'div'\n  #.........................................................................................................\n  console.table db.all_rows SQL\"select * from docs;\"\n  console.table db.all_rows SQL\"select * from tags;\"\n  console.table db.all_rows SQL\"select * from atrs;\"\n  console.table db.all_rows SQL\"\"\"\n    select distinct\n        tid,\n        sgl,\n        tag,\n        atrid,\n        text,\n        xxx_array_agg( k, v ) over w as xxx\n      from tags as t\n      left join atrs as a\n      using ( atrid )\n      window w as ( partition by atrid )\n      order by tid;\"\"\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_html_generation = ->\n  urge '^574^', rpr hdml.create_tag '<', 'foo'\n  urge '^574^', rpr hdml.create_tag '<', 'foo', null\n  urge '^574^', rpr hdml.create_tag '<', 'foo', {}\n  urge '^574^', rpr hdml.create_tag '<', 'foo', { a: 42, b: \"'\", c: '\"', }\n  urge '^574^', rpr hdml.create_tag '^', 'foo', { a: 42, b: \"'\", c: '\"', }\n  urge '^574^', rpr hdml.create_tag '^', 'prfx:foo', { a: 42, b: \"'\", c: '\"', }\n  urge '^574^', rpr hdml.create_tag '>', 'foo'\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @demo_datamill()\n  @demo_html_generation()\n\n\n\n\n"
  ]
}