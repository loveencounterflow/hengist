{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/codepoints.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-RUSTYBUZZ/CODEPOINTS/BASIC'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\n{ width_of\n  to_width }              = require 'to-width'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DRB get_assigned_unicode_chrs()\" ] = ( T, done ) ->\n  # ### explicit path, explicitly temporary ###\n  # T?.halt_on_error()\n  # { DBay }            = require H.dbay_path\n  { DBay }            = require H.dbay_path\n  { Drb }             = require H.drb_path\n  # path                = PATH.resolve DBay.C.autolocation, 'drb-23842847.sqlite'\n  # DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  #.........................................................................................................\n  do =>\n    db          = new DBay()\n    drb         = new Drb { db, temporary: true, }\n    result      = drb.get_assigned_unicode_chrs()\n    result_txt  = result.join ''\n    debug '^98402^', to_width result_txt, 1500\n    widths      = {}\n    for chr in result\n      width = width_of chr\n      ( widths[ width ] ?= [] ).push chr\n    for width, chrs of widths\n      chrs = chrs.join ''\n      debug '^98402^', width, to_width chrs, 150\n    ### as of NodeJS v16.9.1 with  Unicode 13 (?) ###\n    T?.ok result.length >= 143_439\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DRB arrange() uses correct GIDs for specials\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay }            = require H.dbay_path\n  { Drb }             = require H.drb_path\n  db                  = new DBay()\n  drb                 = new Drb { db, temporary: true, }\n  text                = \"買ne 來ca\"\n  { specials        } = Drb.C\n  { schema          } = drb.cfg\n  #.........................................................................................................\n  fontnick            = 'gr'\n  text                = \"abc&wbr;x&shy;y&nl;z u\"\n  text                = drb.prepare_text { text, }\n  doc                 = 1\n  par                 = 1\n  #.....................................................................................................\n  matcher = []\n  #.....................................................................................................\n  # drb.register_fontnick { fontnick, }\n  drb.prepare_font      { fontnick, }\n  drb.arrange           { fontnick, text, doc, par, }\n  #.....................................................................................................\n  console.table db.all_rows SQL\"select * from #{schema}.ads order by trk, b1;\"\n  #.....................................................................................................\n  return done?()\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  @[ \"DRB arrange() uses correct GIDs for specials\" ]()\n\n\n"
  ]
}