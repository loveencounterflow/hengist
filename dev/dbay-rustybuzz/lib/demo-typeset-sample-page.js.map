{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-typeset-sample-page.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-RUSTYBUZZ/DEMOS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n# H                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\nRBW                       = require 'rustybuzz-wasm'\nH                         = require './helpers'\n{ DBay }                  = require H.dbay_path\n{ Drb }                   = require H.drb_path\ntemplate_path             = PATH.resolve PATH.join __dirname, '../../../assets/dbay-rustybuzz/demo-typeset-sample-page.template.html'\ntemplate_grid_path        = PATH.resolve PATH.join __dirname, '../../../assets/dbay-rustybuzz/demo-typeset-sample-cmgrid.template.html'\ntarget_path               = PATH.resolve PATH.join __dirname, '../../../apps-typesetting/html+svg-demos/demo-typeset-sample-page.output.html'\n\n{ to_width }              = require 'to-width'\nITXT                      = require 'intertext'\n\n\n#-----------------------------------------------------------------------------------------------------------\nXXX_show_clusters = ( text, ads ) ->\n  ### This is probably based on a misunderstanding of what `rustybuzz` means by 'cluster';\n  see https://docs.rs/rustybuzz/0.4.0/rustybuzz/struct.GlyphInfo.html ###\n  for d, d_idx in ads\n    cur_bidx  = d.bidx\n    nxt_bidx  = ads[ d_idx + 1 ]?.bidx ? ads.length\n    cur_text  = text[ cur_bidx ... nxt_bidx ]\n    info '^4448^', rpr cur_text\n  help '^4448^', rpr text\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\nappend_to = ( page, name, text ) ->\n  text = rpr text unless isa.text text\n  echo ( CND.reverse CND.grey to_width name, 15 ) + ( CND.reverse CND.gold ' ' + to_width text, 108 )\n  marker = \"<!--?#{name}-end?-->\"\n  return page.replace marker, '\\n' + text.toString() + marker\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nappend_remarks = ( cfg ) ->\n  { page, fm, missing_chrs, } = cfg\n  page            = append_to page, 'remarks', \"<div>fm: #{rpr fm}</div>\"\n  missing_txt     = ( rpr ad.chrs for ad in missing_chrs ).join ', '\n  page            = append_to page, 'remarks', \"<div>missing_chrs: #{missing_txt}</div>\"\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use standard methods ###\n_prepare_text = ( text ) ->\n  R = text\n  R = R.replace /\\n/g, ' '\n  R = R.replace /\\x20{2,}/g, ' '\n  R = ITXT.HYPH.hyphenate R\n  R = R.replace /&shy;/g, '\\xad'\n  R = R.replace /&wbr;/g, '\\u200b'\n  # debug '^9865^', ITXT.HYPH.reveal_hyphens R, '|'; process.exit 1\n  return R\n\n_escape_syms              = ( text ) ->\n  R = text\n  R = R.replace /\\xad/g,   '&shy;'\n  R = R.replace /\\u200b/g, '&wbr;'\n  return R\n_escape_for_html_comment  = ( text ) ->   ( _escape_syms text ? '' ).replace /--/g, '- -'\n_escape_for_html_text     = ( text ) -> ( ( text ? '' ).replace /&/g, '&amp;' ).replace /</g, '&lt;'\n\n#-----------------------------------------------------------------------------------------------------------\nappend_outlines = ( cfg ) ->\n  { page, fontnick, size_mm, scale, fm, missing, missing_sid, missing_pd, known_ods, } = cfg\n  swdth   = 0.5 # stroke width in mm\n  swdth  *= 1000 * size_mm * scale\n  owdth   = 3 * swdth\n  top     = fm.ascender  - owdth\n  bottom  = fm.descender + owdth\n  page = append_to page, 'outlines', \"<!--NULL--><path id='#{missing_sid}' class='missing' d='#{missing_pd}'/>\"\n  page = append_to page, 'outlines', \"<!--SHY--><line id='oshy-#{fontnick}' class='fontmetric shy' stroke-width='#{swdth}' x1='0' y1='#{bottom}' x2='0' y2='#{top}'/>\"\n  page = append_to page, 'outlines', \"<!--WBR--><line id='owbr-#{fontnick}' class='fontmetric wbr' stroke-width='#{swdth}' x1='0' y1='#{bottom}' x2='0' y2='#{top}'/>\"\n  for sid, od of known_ods\n    continue if od.gid is missing.gid\n    ### TAINT use standard method ###\n    chrs_txt  = _escape_for_html_comment od.chrs\n    page      = append_to page, 'outlines', \"<!--#{chrs_txt}--><path id='#{sid}' d='#{od.pd}'/>\"\n  return page\n\n#-----------------------------------------------------------------------------------------------------------\n_append_fontmetrics = ( cfg ) ->\n  { page, size_mm, scale, fm, } = cfg\n  swdth   = 0.25 # stroke width in mm\n  swdth  *= 1000 * size_mm * scale\n  page    = append_to page, 'content', \"<line class='fontmetric' stroke-width='#{swdth}' x1='0' y1='#{fm.ascender}' x2='10000' y2='#{fm.ascender}'/>\"\n  page    = append_to page, 'content', \"<line class='fontmetric' stroke-width='#{swdth}' x1='0' y1='#{fm.descender}' x2='10000' y2='#{fm.descender}'/>\"\n  page    = append_to page, 'content', \"<line class='fontmetric' stroke-width='#{swdth}' x1='0' y1='#{fm.x_height}' x2='10000' y2='#{fm.x_height}'/>\"\n  page    = append_to page, 'content', \"<line class='fontmetric' stroke-width='#{swdth}' x1='0' y1='#{fm.capital_height}' x2='10000' y2='#{fm.capital_height}'/>\"\n  return page\n\n#-----------------------------------------------------------------------------------------------------------\n_append_breakpoint = ( cfg ) ->\n  { page, x0, y0, size_mm, scale, scale_txt, fm, text, ads, missing, missing_sid, } = cfg\n  page    = append_to page, 'content', \"<line class='fontmetric' stroke-width='#{swdth}' x1='0' y1='#{fm.ascender}' x2='10000' y2='#{fm.ascender}'/>\"\n  return page\n\n#-----------------------------------------------------------------------------------------------------------\nappend_content = ( cfg ) ->\n  { page, x0, y0, size_mm, scale, scale_txt, fm, text, ads, missing, missing_sid, } = cfg\n  page        = append_to page, 'textcontainer', \"<div style='left:#{x0}mm;top:#{y0 - size_mm}mm;'>#{text}</div>\"\n  page        = append_to page, 'content', \"<g transform='translate(#{x0} #{y0}) scale(#{scale_txt})'>\"\n  page        = _append_fontmetrics { page, size_mm, scale, fm, }\n  for ad in ads\n    ### TAINT use standard method ###\n    chrs_ctxt = _escape_for_html_comment ad.chrs\n    if ad.gid is missing.gid\n      ### TAINT use standard method ###\n      chrs_htxt = _escape_for_html_text ad.chrs\n      relwdth = ad.dx / 1000 ### relative width of missing outline rectangle ###\n      element = \"\"\"<!--#{chrs_ctxt}--><use href='##{missing_sid}' class='missing' transform='translate(#{ad.x} #{ad.y}) scale(#{relwdth} 1)'/>\\\n        <text class='missing-chrs' style='font-size:1000px;' x='#{ad.x}' y='#{ad.y}'>#{chrs_htxt}</text>\"\"\"\n    else\n      if ad.y is 0 then element = \"<!--#{chrs_ctxt}--><use href='##{ad.sid}' x='#{ad.x}'/>\"\n      else              element = \"<!--#{chrs_ctxt}--><use href='##{ad.sid}' x='#{ad.x}' y='#{ad.y}'/>\"\n    page  = append_to page, 'content', element\n    ### TAINT must escape `d.chrs` ###\n  page = append_to page, 'content', \"</g>\"\n  return page\n\n# #-----------------------------------------------------------------------------------------------------------\n# append_used_outlines_overview = ( page ) ->\n#   x0      = 0\n#   y0      = 70\n#   swdth   = 0.25 # stroke width in mm\n#   swdth  *= 1000 * size_mm * scale\n#   page    = append_to page, 'content', \"<g transform='translate(#{x0} #{y0}) scale(#{scale_txt})'>\"\n#   dx      = 1000 * 100 * scale\n#   x       = -dx\n#   for od from db SQL\"select * from drb.outlines where fontnick = $fontnick order by sid;\", { fontnick, }\n#     x    += dx\n#     page  = append_to page, 'content', \"<!--#{od.chrs}--><use href='##{od.sid}' x='#{x}'/>\"\n#   page = append_to page, 'content', \"</g>\"\n#   return page\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@demo_typeset_sample_page = ( cfg ) ->\n  defaults        = { set_id: 'medium-eg8i', }\n  cfg             = { defaults..., cfg..., }\n  { set_id }      = cfg\n  ### NOTE: for testing we want to use the most recent `rustybuzz-wasm`: ###\n  RBW             = require '../../../apps/rustybuzz-wasm/pkg'\n  { Tbl, }        = require '../../../apps/icql-dba-tabulate'\n  db              = new DBay { path: '/dev/shm/typesetting-1.sqlite', }\n  drb             = new Drb { db, rebuild: true, RBW, path: '/dev/shm/typesetting-2.sqlite', }\n  dtab            = new Tbl { db, }\n  page            = FS.readFileSync template_path, { encoding: 'utf-8', }\n  page            = append_to page, 'grid', FS.readFileSync template_grid_path, { encoding: 'utf-8', }\n  { I, L, V }     = db.sql\n  #.........................................................................................................\n  { text\n    chrs\n    cgid_map\n    fontnick\n    fspath      } = H.settings_from_set_id set_id\n  text            = _prepare_text text\n  debug '^50598^', { segments } = ITXT.SLABS.slabjoints_from_text text\n  collector = []\n  shy       = '\\xad'\n  wbr       = '\\u200b'\n  for segment in segments\n    [ slab, joint, ] = ITXT.SLABS.text_and_joint_from_segment segment\n    collector.push switch joint\n      when '#' then slab + wbr\n      when '=' then slab.replace /-$/, shy\n      when '°' then slab + ' '\n      else throw new Error \"^8064563^ unknown joint #{rpr joint}\"\n  text = collector.join ''\n  text = text.replace /\\u200b{2,}/g, wbr\n  text = text.replace /\\u200b$/, ''\n  text = text.replace /^\\u200b/, ''\n  width_mm        = 100\n  size_mm         = 10\n  scale           = size_mm / 1000\n  scale_txt       = scale.toFixed 4\n  { missing }     = Drb.C\n  missing_sid     = \"o0#{fontnick}\"\n  missing_pd      = 'M0 200 L0-800 L900-800 L900 200'\n  known_ods       = { [missing_sid]: { gid: missing.gid, sid: missing_sid, fontnick, }, }\n  #.........................................................................................................\n  ### Register, load and prepopulate font: ###\n  drb.register_fontnick { fontnick, fspath, }\n  drb.prepare_font      { fontnick, }\n  { known_ods\n    new_ods\n    missing_chrs\n    ads\n    fm          } = drb.compose { fontnick, text, known_ods, }\n  #.........................................................................................................\n  x0    = 0\n  y0    = 50\n  page  = append_remarks  { page, fm, missing_chrs, }\n  page  = append_outlines { page, fontnick, size_mm, scale, fm, missing, missing_sid, missing_pd, known_ods, }\n  page  = append_content  { page, x0, y0, size_mm, scale, scale_txt, fm, text, ads, missing, missing_sid, }\n  # page  = append_used_outlines_overview page\n  #.........................................................................................................\n  FS.writeFileSync target_path, page\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  # await @demo_store_outlines()\n  # await @demo_store_outlines { set_id: 'all', }\n  # await @demo_typeset_sample_page { set_id: 'small-eg8i', }\n  await @demo_typeset_sample_page { set_id: 'medium-eg8i', }\n  # await @demo_typeset_sample_page { set_id: 'small-aleo', }\n  # await @demo_typeset_sample_page { set_id: 'widechrs', }\n  # await @demo_typeset_sample_page { set_id: 'tibetan', }\n  # await @demo_typeset_sample_page { set_id: 'arabic', }\n  # await @demo_typeset_sample_page { set_id: 'urdu', }\n  # await @demo_typeset_sample_page { set_id: 'small-djvsi', }\n  # await @demo_use_linked_rustybuzz_wasm()\n\n\n"
  ]
}