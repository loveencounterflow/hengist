{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-typeset-sample-page.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-RUSTYBUZZ/DEMOS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n# H                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\nRBW                       = require 'rustybuzz-wasm'\nH                         = require './helpers'\n{ DBay }                  = require H.dbay_path\n{ Drb }                   = require H.drb_path\ntpl_path                  = PATH.resolve PATH.join __dirname, '../../../assets/dbay-rustybuzz/demo-typeset-sample-page.template.html'\ntpl                       = FS.readFileSync tpl_path, { encoding: 'utf-8', }\ntarget_path               = PATH.resolve PATH.join __dirname, '../../../apps-typesetting/html+svg-demos/demo-typeset-sample-page.output.html'\n\n#-----------------------------------------------------------------------------------------------------------\nXXX_show_clusters = ( text, arrangement ) ->\n  ### This is probably based on a misunderstanding of what `rustybuzz` means by 'cluster';\n  see https://docs.rs/rustybuzz/0.4.0/rustybuzz/struct.GlyphInfo.html ###\n  for d, d_idx in arrangement\n    cur_bidx  = d.bidx\n    nxt_bidx  = arrangement[ d_idx + 1 ]?.bidx ? arrangement.length\n    cur_text  = text[ cur_bidx ... nxt_bidx ]\n    info '^4448^', rpr cur_text\n  help '^4448^', rpr text\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_typeset_sample_page = ( cfg ) ->\n  defaults            = { set_id: 'small-eg8i', }\n  cfg                 = { defaults..., cfg..., }\n  { set_id }          = cfg\n  db                  = new DBay { path: '/dev/shm/typesetting-1.sqlite', }\n  drb                 = new Drb { db, create: true, path: '/dev/shm/typesetting-2.sqlite', }\n  #.........................................................................................................\n  { text\n    fontnick\n    fspath          } = H.settings_from_set_id set_id\n  size_mm             = 10\n  chrs                = [ ( new Set Array.from text )..., ]\n  #.........................................................................................................\n  drb.register_fontnick { fontnick, fspath, }\n  drb.prepare_font      { fontnick, }\n  drb.insert_outlines   { fontnick, chrs, }\n  # drb.shape_text        { fontnick, text, size_mm, }\n  arrangement = drb.shape_text { fontnick, text, size_mm, }\n  page        = tpl\n  gids        = [ ( new Set ( d.gid for d in arrangement ) )..., ]\n  #.........................................................................................................\n  ### Part I: insert unscaled outlines ###\n  unscaled_outlines = []\n  for gid in gids\n    outline = drb.get_single_outline { fontnick, gid, }\n    uoid    = \"o#{gid}#{fontnick}\"\n    unscaled_outlines.push \"<path id='#{uoid}' d='#{outline.pd}'/>\"\n  unscaled_outlines = unscaled_outlines.join '\\n'\n  page              = page.replace '<?unscaled_outlines?>', unscaled_outlines\n  #.........................................................................................................\n  ### Part II: insert scaled outline defs ###\n  scaled_outlines = []\n  scale           = size_mm / 1000\n  scale_txt       = scale.toFixed 4\n  for gid in gids\n    uoid  = \"o#{gid}#{fontnick}\"\n    soid  = \"s#{gid}#{fontnick}-#{size_mm}\"\n    scaled_outlines.push \"<use href='##{uoid}' id='#{soid}' transform='scale(#{scale_txt})'/>\"\n  scaled_outlines = scaled_outlines.join '\\n'\n  page            = page.replace '<?scaled_outlines?>', scaled_outlines\n  #.........................................................................................................\n  ### Part III: insert outline refs (the typesetting proper so to speak) ###\n  content = []\n  x0      = 0\n  y0      = 50\n  for xxx in arrangement\n    gid   = xxx.gid\n    soid  = \"s#{gid}#{fontnick}-#{size_mm}\"\n    x     = x0 + ( xxx.x * scale )\n    y     = y0 + ( xxx.y * scale )\n    content.push   \"<use href='##{soid}' x='#{x}' y='#{y}'/>\"\n    info '^3344^', \"<use href='##{soid}' x='#{x}' y='#{y}'/>\"\n  content   = content.join '\\n'\n  page      = page.replace '<?content?>', content\n  #.........................................................................................................\n  FS.writeFileSync target_path, page\n  #.........................................................................................................\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # await @demo_store_outlines()\n  # await @demo_store_outlines { set_id: 'all', }\n  # await @demo_typeset_sample_page { set_id: 'small-eg8i', }\n  await @demo_typeset_sample_page { set_id: 'small-djvsi', }\n  # await @demo_use_linked_rustybuzz_wasm()\n\n\n"
  ]
}