{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,wBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAdA;;;EAmBA,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,kBAAR,CAAF,CAA8B,CAAC,SAAnC,CAAA;;EAC5B,CAAA,CAAE,GAAF,CAAA,GAA4B,KAA5B,EAtBA;;;;;;;;;;;;;;;;;;;;;EA2CA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACrB,QAAA;IAAE,CAAA,CAAE,SAAF,CAAA,GAAgB,OAAA,CAAQ,yCAAR,CAAhB,EAAF;;;;;;;;;;;;;WAaE,IAAA,CAAA;EAdmB,EA3CrB;;;EA+DA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAK,IAAL;IADgC,CAAA,IAAlC;;;EA/DA;;;;AAAA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intersock/tests/basics'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\ntypes                     = new ( require 'intertype-newest' ).Intertype()\n{ isa }                   = types\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@intersock_connect = ( T, done ) ->\n  { WebSocket } = require '../../../apps/intersock/node_modules/ws'\n  #.........................................................................................................\n  # const ws = new WebSocket('ws://www.host.com/path');\n\n  # ws.on('error', console.error);\n\n  # ws.on('open', function open() {\n  #   ws.send('something');\n  # });\n\n  # ws.on('message', function message(data) {\n  #   console.log('received: %s', data);\n  #.........................................................................................................\n  done()\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @time_exports\n  # @time_stamp()\n  # @time_monostamp()\n  # test @time_datatypes\n\n\n\n"
  ]
}