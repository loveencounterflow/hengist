{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,SAAA,GAA4B,OAAA,CAAQ,WAAR;;EAC5B,CAAA,CAAE,GAAF,CAAA,GAA4B,SAAS,CAAC,MAAV,CAAA,CAA5B;;EACA,MAAA,GAA4B,CAAE,OAAA,CAAQ,QAAR,CAAF,CAAoB,CAAC,cAhBjD;;;EAoBA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,KAAA,CAAA,CAAA,GAAA;AAClC,UAAA,UAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA;MAAE,CAAA,GACE;QAAA,IAAA,EAAU,GAAV;QACA,MAAA,EAAU,GADV;QAEA,GAAA,EAAU;MAFV;AAGF;MAAA,KAAA,qCAAA;;QACE,CAAA,CAAE,UAAF,EACE,OADF,EAEE,UAFF,EAGE,KAHF,EAIE,MAJF,CAAA,GAIc,KAJd;QAKA,IAAA,GAAc;QACd,MAAA,GAAc,CAAA,CAAA,CAAG,KAAK,CAAC,MAAT,EAAA,CAAA,CAAmB,MAAM,CAAC,IAAP,CAAY,EAAZ,CAAnB,CAAA;QACd,EAAA,GAAc;QACd,OAAA,GAAc,OAAO,aAAU,CAAC,MAAlB,CAAyB,EAAzB;QACd,IAAA,CAAK,CAAE,EAAF,EAAM,IAAN,EAAY,OAAZ,EAAqB,MAArB,CAA8B,CAAC,IAA/B,CAAoC,GAApC,CAAL;MAVF;AAWA,aAAO;IAhByB,CAAA,IAAlC;;AApBA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'GITCOLLECTOR'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\nINTERTEXT                 = require 'intertext'\n{ rpr }                   = INTERTEXT.export()\ngitlog                    = ( require 'gitlog' ).gitlogPromise\n\n\n############################################################################################################\nif module is require.main then do =>\n  d =\n    repo:     '.'\n    number:   1e6\n    all:      true\n  for entry in await gitlog d\n    { abbrevHash\n      subject\n      authorDate\n      files\n      status  } = entry\n    date        = authorDate\n    status      = \"#{files.length} #{status.join ''}\"\n    id          = abbrevHash\n    subject     = subject[ ... 50 ].padEnd 50\n    echo [ id, date, subject, status, ].join ' '\n  return null\n\n\n\n\n"
  ]
}