{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/select.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/TESTS/SELECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\ntypes                     = new ( require '../../../apps/intertype' ).Intertype\n{ isa\n  validate\n  type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@select_2 = ( T, done ) ->\n  { DATOM } = require '../../../apps/datom'\n  { new_datom\n    select }                = DATOM\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ { '$key': 'number', '$stamped': true }, 'number' ], false, null ]\n    [ [ { '$key': 'number' }, 'number' ], true, null ]\n    [ [ { '$key': 'math:number' }, 'number' ], false, null ]\n    [ [ { '$key': 'math:number' }, 'math' ], false, null ]\n    [ [ { '$key': 'math:number:integer' }, 'math:*:int*' ], true, null ]\n    [ [ { '$key': 'outline:nl' }, 'outline:nl*' ], true, null ]\n    [ [ { '$key': 'outline:nlsuper' }, 'outline:nl*' ], true, null ]\n    [ [ { '$key': 'outline:nl' }, [ 'outline:nl', 'outline:nls', ] ], true, null ]\n    [ [ { '$key': 'outline:nls' }, [ 'outline:nl', 'outline:nls', ] ], true, null ]\n    [ [ { '$key': 'outline:nlsuper' }, [ 'outline:nl', 'outline:nls', ] ], false, null ]\n    [ [ { '$key': 'x' }, '?' ], true, null ]\n    [ [ { '$key': 'xx' }, '?' ], false, null ]\n    [ [ { '$key': 'wat' }, '?' ], false, null ]\n    [ [ { '$key': '福' }, '?' ], true, null ]\n    [ [ { '$key': 'math:' }, 'math:*' ], true, null ]\n    [ [ { '$key': 'math:*' }, 'math:*' ], true, null ]\n    [ [ { '$key': '𫝂' }, '?' ], true, null ]\n    [ [ { '$key': 'math:*' }, 'math:\\\\*' ], true, null ]\n    [ [ { '$key': 'math:number' }, '*:number' ], true, null ]\n    [ [ { '$key': 'math:number' }, 'math:*' ], true, null ]\n    [ [ { '$key': 'math:' }, 'math:\\\\*' ], false, null ]\n    [ [ { '$key': 'math:' }, [ 'math:\\\\*', '*:' ] ], true, null ]\n    [ [ { '$key': 'math:number' }, 'm?th:n?mber' ], true, null ]\n    [ [ 42, 'm?th:n?mber' ], false, null ]\n    [ [ 42, '*' ], false, null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve ) ->\n      [ d, selector, ]  = probe\n      if isa.text selector\n        result  = select d, selector\n      else\n        result  = select d, selector...\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@select_ignores_values_other_than_objects = ( T, done ) ->\n  { DATOM } = require '../../../apps/datom'\n  { new_datom\n    select }                = DATOM\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[ null, '^number',],false]\n    [[ 123, '^number',],false]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ d, selector, ] = probe\n      try\n        resolve select d, selector\n      catch error\n        return resolve error.message\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@xxx = ( T, done ) ->\n  { DATOM } = require '../../../apps/datom'\n  { new_datom\n    select }                = DATOM\n  #.........................................................................................................\n  probes_and_matchers = [\n    [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ key, value, ] = probe\n      resolve new_datom key, value\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@new_datom_using_default_settings = ( T, done ) ->\n  { DATOM } = require '../../../apps/datom'\n  { new_datom\n    select }                = DATOM\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[\"number\",],{\"$key\":\"number\" },null]\n    [[\"number\",{ value: 42, }],{\"$key\":\"number\", value: 42 },null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ key, value, ] = probe\n      resolve new_datom key, value\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@freezing = ( T, done ) ->\n  DATOM_FREEZE                        = new ( require '../../../apps/datom' ).Datom { freeze: true, }\n  { new_datom: new_datom_freeze, }    = DATOM_FREEZE\n  DATOM_NOFREEZE                      = new ( require '../../../apps/datom' ).Datom { freeze: false, }\n  { new_datom: new_datom_nofreeze, }  = DATOM_NOFREEZE\n  #.........................................................................................................\n  T.ok      Object.isFrozen new_datom_freeze    '^mykey'\n  T.ok not  Object.isFrozen new_datom_nofreeze  '^mykey'\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@dirty = ( T, done ) ->\n  DATOM_DIRTY                         = new ( require '../../../apps/datom' ).Datom { dirty: true, }\n  DATOM_NODIRTY                       = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  DATOM_DEFAULT                       = new ( require '../../../apps/datom' ).Datom()\n  #.........................................................................................................\n  d = DATOM_DEFAULT.new_datom '^foo', { x: 42, y: 108, }\n  # debug '^56456^', d\n  # debug DATOM_DEFAULT.lets d, ( d ) -> null\n  T.eq ( DATOM_DIRTY.lets d,    ( d ) -> delete d.x ), { $key: '^foo', y: 108, $dirty: true,  }\n  T.eq ( DATOM_NODIRTY.lets d,  ( d ) -> delete d.x ), { $key: '^foo', y: 108,                }\n  T.eq ( DATOM_DEFAULT.lets d,  ( d ) -> delete d.x ), { $key: '^foo', y: 108,                }\n  done()\n  return null\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @select_2\n  test @dirty\n\n\n\n"
  ]
}