{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/cupofdatom.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATOM/TESTS/BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n#...........................................................................................................\n# types                     = require '../types'\n# { isa\n#   validate\n#   type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom 1\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', ->\n      c.cram null, 'content'\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  # urge CND.reverse collector if not equals collector, ds\n  help ds\n  T.eq ds, [\n    { $key: '<helo' },\n    { text: 'world', $key: '^text' },\n    { $key: '>helo' },\n    { $key: '<foo' },\n    { $key: '<bold' },\n    { text: 'content', $key: '^text' },\n    { $key: '>bold' },\n    { $key: '>foo' } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom 2\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', 'content'\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  # urge CND.reverse collector if not equals collector, ds\n  help ds\n  T.eq ds, [\n    { $key: '<helo' },\n    { text: 'world', $key: '^text' },\n    { $key: '>helo' },\n    { $key: '<foo' },\n    { $key: '<bold' },\n    { text: 'content', $key: '^text' },\n    { $key: '>bold' },\n    { $key: '>foo' } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom 3\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', -> [ 'this', 'is', 'content' ]\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  # urge CND.reverse collector if not equals collector, ds\n  help ds\n  # T.eq ds, [\n  #   { $key: '<helo' },\n  #   { text: 'world', $key: '^text' },\n  #   { $key: '>helo' },\n  #   { $key: '<foo' },\n  #   { $key: '<bold' },\n  #   { text: 'this', $key: '^text' },\n  #   { text: 'is', $key: '^text' },\n  #   { text: 'content', $key: '^text' },\n  #   { $key: '>bold' },\n  #   { $key: '>foo' } ]\n  #.........................................................................................................\n  ### TAINT should content inserted via return value be subject to same process as `cram()`med content? ###\n  T.eq ds, [\n    { '$key': '<helo' },\n    { text: 'world', '$key': '^text' },\n    { '$key': '>helo' },\n    { '$key': '<foo' },\n    { '$key': '<bold' }, 'this', 'is', 'content', { '$key': '>bold' },\n    { '$key': '>foo' } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom complains about non-wellformed names\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ null ], [], null ]\n    [ [ undefined, ], null, 'not a valid datom_name', ]\n    [ [ true, ], null, 'not a valid datom_name', ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      c = new DATOM.Cupofdatom()\n      c.cram probe...\n      result = c.expand()\n      resolve result\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"XXXXXXXXXXXXX DATOM Cupofdatom with attributes\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  urge '^2289^', c\n  c.cram 'greeting'\n  # c.cram 'greeting', 'helo', 'world'\n  # c.cram 'greeting', '早安', { lang: 'zh_CN', }\n  # c.cram 'greeting', '早安', { lang: 'unknown', }, { lang: 'zh_CN', 问候: '早安', time_of_day: 'morning', }\n  c.cram 'greeting', ->\n    c.cram 'language',    { $value: 'Japanese', }\n    c.cram 'time_of_day', { $value: 'morning', }\n    c.cram null, 'お早うございます'\n    c.cram null, true\n    c.cram null, 4711\n  #.........................................................................................................\n  debug '^1738^', c.collector\n  info d for d in ds = c.expand()\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom with attributes\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  urge '^2289^', c\n  c.cram 'greeting', 'helo', 'world'\n  c.cram 'greeting', '早安', { lang: 'zh_CN', }\n  c.cram 'greeting', { lang: 'zh_CN', 问候: '早安', time_of_day: 'morning', }\n  c.cram 'text',     { lang: 'hi', text: 'नमस्ते', }\n  c.cram 'greeting', ->\n    c.cram 'language',    { $value: 'Japanese', }\n    c.cram 'time_of_day', { $value: 'morning', }\n    c.cram null, 'お早うございます'\n  # c.cram 'foo', ->\n  #   c.cram 'bold', ->\n  #     c.cram null, 'content'\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  # urge CND.reverse collector if not equals collector, ds\n  info d for d in ds\n  help ds\n  T.eq ds, [\n    { '$key': '<greeting' },\n    { '$key': '^text', text: 'helo', },\n    { '$key': '^text', text: 'world', },\n    { '$key': '>greeting' },\n    { lang: 'zh_CN', '$key': '<greeting' },\n    { '$key': '^text', text: '早安', },\n    { '$key': '>greeting' },\n    { '$key': '^greeting', lang: 'zh_CN', '问候': '早安', time_of_day: 'morning', },\n    { '$key': '^text', lang: 'hi', text: 'नमस्ते', },\n    { '$key': '<greeting' },\n    { '$key': '^language',    '$value': 'Japanese', },\n    { '$key': '^time_of_day', '$value': 'morning', },\n    { '$key': '^text', text: 'お早うございます', },\n    { '$key': '>greeting' } ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM Cupofdatom linear structure\" ] = ( T, done ) ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  urge '^2289^', c\n  c.cram 'p', ->\n    c.cram null, \"It is very \", ( -> c.cram 'em', \"convenient\" ),  \" to write\"\n  ds = c.expand()\n  info d for d in ds\n  help ds\n  T.eq ds, [\n    { '$key': '<p' },\n    { text: 'It is very ', '$key': '^text' },\n    { '$key': '<em' },\n    { text: 'convenient', '$key': '^text' },\n    { '$key': '>em' },\n    { text: ' to write', '$key': '^text' },\n    { '$key': '>p' } ]\n  #.........................................................................................................\n  done()\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @[ \"XXXXXXXXXXXXX DATOM Cupofdatom with attributes\" ]\n  # test @[ \"DATOM Cupofdatom linear structure\" ]\n  # test @[ \"DATOM Cupofdatom 1\" ]\n  # test @[ \"DATOM Cupofdatom complains about non-wellformed names\" ]\n  # test @[ \"DATOM Cupofdatom with templates\" ]\n  # test @[ \"DATOM Cupofdatom with attributes\" ]\n  # @[ \"DATOM Cupofdatom with attributes\" ]()\n  # test @[ \"wrap_datom\" ]\n  # test @[ \"new_datom complains when value has `$key`\" ]\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"select 2\" ]\n  # test @[ \"new_datom (default settings)\" ]\n  # debug new_datom '^helo', 42\n\n\n\n"
  ]
}