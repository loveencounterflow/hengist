{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n#===========================================================================================================\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertype/test-basics'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n{ after }                 = GUY.async\n#-----------------------------------------------------------------------------------------------------------\nGTNG                      = require '../../../apps/guy-test-NG'\n{ _TMP_test\n  Test\n  equals\n  pass\n  fail\n  test\n  eq\n  throws\n  async_test\n  async_eq\n  async_throws          } = GTNG\n#-----------------------------------------------------------------------------------------------------------\ntypes                     = require '../../../apps/intertype'\n{ isa\n  type_of\n  validate              } = types\n\n\n#===========================================================================================================\nTT =\n\n  #---------------------------------------------------------------------------------------------------------\n  set_equality_by_value: ->\n    t2 = new Test { show_report: false, prefix: \"TEST RESULT\", }\n    @eq ( Ω___1 = -> t2.stats ), { '*': { passes: 0, fails: 0 } }\n    #.........................................................................................................\n    do =>\n      t2.eq ( sebv_2 = -> 'abc'                    ), 'abc'\n      return null\n    #.........................................................................................................\n    do =>\n      result    = [ 1, [ 2 ], ]\n      matcher1  = [ 1, [ 2 ], ]\n      matcher2  = [ 1, [ 3 ], ]\n      t2.eq ( sebv_3 = -> equals result, matcher1 ), true\n      t2.eq ( sebv_4 = -> equals result, matcher2 ), false\n      @eq ( Ω___2 = -> t2.stats ), { '*': { passes: 3, fails: 0 }, 'null.*': { passes: 3, fails: 0 }, 'null.sebv_2.Ωgt___3': { passes: 1, fails: 0 }, 'null.sebv_3.Ωgt___4': { passes: 1, fails: 0 }, 'null.sebv_4.Ωgt___5': { passes: 1, fails: 0 } }\n      return null\n    #.........................................................................................................\n    do =>\n      result    = new Set [ 1, 2, ]\n      matcher1  = new Set [ 1, 2, ]\n      matcher2  = new Set [ 1, 3, ]\n      t2.eq ( sebv_6 = -> equals result, matcher1 ), true\n      t2.eq ( sebv_7 = -> equals result, matcher2 ), false\n      t2.eq ( sebv_8 = -> equals result, matcher2 ), true ### is `false` ###\n      @eq ( Ω___6 = -> t2.stats ), { '*': { passes: 5, fails: 1 }, 'null.*': { passes: 5, fails: 1 }, 'null.sebv_2.Ωgt___7': { passes: 1, fails: 0 }, 'null.sebv_3.Ωgt___8': { passes: 1, fails: 0 }, 'null.sebv_4.Ωgt___9': { passes: 1, fails: 0 }, 'null.sebv_6.Ωgt__10': { passes: 1, fails: 0 }, 'null.sebv_7.Ωgt__11': { passes: 1, fails: 0 }, 'null.sebv_8.Ωgt__12': { passes: 0, fails: 1 } }\n      return null\n    #.........................................................................................................\n    do =>\n      result    = new Set [ 1, [ 2 ], ]\n      matcher1  = new Set [ 1, [ 2 ], ]\n      matcher2  = new Set [ 1, [ 3 ], ]\n      t2.eq ( sebv10 = -> equals result, matcher1 ), true\n      t2.eq ( sebv11 = -> equals result, matcher2 ), false\n      t2.eq ( sebv12 = -> equals result, matcher2 ), true ### is `false` ###\n      t2.eq ( sebv13 = -> equals result, matcher2 ), true ### is `false` ###\n      t2.eq ( sebv14 = -> equals result, matcher2 ), true ### is `false` ###\n      @eq ( Ω__13 = -> t2.stats ), { '*': { passes: 7, fails: 4 }, 'null.*': { passes: 7, fails: 4 }, 'null.sebv_2.Ωgt__14': { passes: 1, fails: 0 }, 'null.sebv_3.Ωgt__15': { passes: 1, fails: 0 }, 'null.sebv_4.Ωgt__16': { passes: 1, fails: 0 }, 'null.sebv_6.Ωgt__17': { passes: 1, fails: 0 }, 'null.sebv_7.Ωgt__18': { passes: 1, fails: 0 }, 'null.sebv_8.Ωgt__19': { passes: 0, fails: 1 }, 'null.sebv10.Ωgt__20': { passes: 1, fails: 0 }, 'null.sebv11.Ωgt__21': { passes: 1, fails: 0 }, 'null.sebv12.Ωgt__22': { passes: 0, fails: 1 }, 'null.sebv13.Ωgt__23': { passes: 0, fails: 1 }, 'null.sebv14.Ωgt__24': { passes: 0, fails: 1 } }\n      return null\n    #.........................................................................................................\n    # t2.report()\n    done?()\n\n  #-----------------------------------------------------------------------------------------------------------\n  pass_and_fail: ->\n    t2 = new Test()\n    #.........................................................................................................\n    @eq ( Ω__25 = -> type_of t2.pass ), 'function'\n    @eq ( Ω__26 = -> type_of t2.fail ), 'function'\n    t2.test paf_a: ->\n      t2.pass 'paf_1', \"this is good\"\n      t2.fail 'paf_2', \"this is bad\"\n      t2.pass 'paf_3'\n      t2.fail 'paf_4'\n    t2.report { prefix: \"TEST RESULT\", }\n    @eq ( Ω__27 = -> t2.stats[ '*'           ].passes  ), 2\n    @eq ( Ω__28 = -> t2.stats[ 'paf_a.paf_1' ].passes  ), 1\n    @eq ( Ω__29 = -> t2.stats[ 'paf_a.paf_2' ].passes  ), 0\n    @eq ( Ω__30 = -> t2.stats[ 'paf_a.paf_3' ].passes  ), 1\n    @eq ( Ω__31 = -> t2.stats[ 'paf_a.paf_4' ].passes  ), 0\n    @eq ( Ω__32 = -> t2.stats[ '*'           ].fails   ), 2\n    @eq ( Ω__33 = -> t2.stats[ 'paf_a.paf_1' ].fails   ), 0\n    @eq ( Ω__34 = -> t2.stats[ 'paf_a.paf_2' ].fails   ), 1\n    @eq ( Ω__35 = -> t2.stats[ 'paf_a.paf_3' ].fails   ), 0\n    @eq ( Ω__36 = -> t2.stats[ 'paf_a.paf_4' ].fails   ), 1\n    #.........................................................................................................\n    done?()\n\n  #-----------------------------------------------------------------------------------------------------------\n  asynchronous_throws: ->\n    FS = require 'node:fs/promises'\n    t2 = new Test()\n    #.........................................................................................................\n    fetch_filesize = ( path ) -> ( await FS.stat path ).size\n    #.........................................................................................................\n    # await async_throws  T, ( Ω__37 = -> await fetch_filesize __filename   )\n    # await async_throws  T, ( Ω__38 = -> await fetch_filesize __filename   ), \"foobar\"\n    # await async_throws  T, ( Ω__39 = -> await fetch_filesize __filename   ), /no such file/\n    #.........................................................................................................\n    await t2.async_throws ( Ω__40 = -> await fetch_filesize 'nosuchpath' ), \"foobar\"\n    await t2.async_throws ( Ω__41 = -> await fetch_filesize 'nosuchpath' ), /no such file/\n    await t2.async_throws ( Ω__42 = -> await fetch_filesize 'nosuchpath' )\n    # await do =>\n    #   await async_throws ( Ω__43 = ->\n    #     await t2.async_throws ( Ω__44 = -> await fetch_filesize 'nosuchpath' ), \"foobar\"\n    #     ), /no such file .* doesn't match 'foobar'/\n    #.........................................................................................................\n    # await async_throws  T, ( Ω__45 = -> await fetch_filesize 'nosuchpath' )\n    # await async_throws  T, ( Ω__46 = -> await fetch_filesize 'nosuchpath' ), /no such file/\n    #.........................................................................................................\n    done?()\n\n  #-----------------------------------------------------------------------------------------------------------\n  asynchronous_errors: ->\n    FS = require 'node:fs/promises'\n    #.........................................................................................................\n    fetch_filesize = ( path ) -> ( await FS.stat path ).size\n    #.........................................................................................................\n    produce_filesize = ( path ) =>\n      try\n        filesize  = await fetch_filesize path\n        urge \"Ω__47\", { filesize, }\n      catch error\n        warn \"Ω__48\", error\n      return null\n    #.........................................................................................................\n    echo '-------------------'\n    # try await produce_filesize 'nosuchpath' catch error then warn 'Ω__49', error.message\n    await produce_filesize 'nosuchpath'\n    echo '-------------------'\n    await produce_filesize __filename\n    echo '-------------------'\n    # await async_throws ( Ω__50 = -> await fetch_filesize __filename ), '???'\n    await async_throws ( Ω__51 = -> await fetch_filesize 'nosuchpath' ), /no such file/\n    echo '-------------------'\n    #.........................................................................................................\n    done?()\n\n  #---------------------------------------------------------------------------------------------------------\n  test_cfg: ->\n    #.........................................................................................................\n    do =>\n      t2 = new Test()\n      @eq ( Ω__52 = -> Object.isFrozen t2.cfg  ), true\n      @eq ( Ω__53 = -> t2.cfg.auto_reset       ), false\n      @eq ( Ω__54 = -> t2.cfg.show_report      ), true\n      @eq ( Ω__55 = -> t2.cfg.show_results     ), true\n      @eq ( Ω__56 = -> t2.cfg.show_fails       ), true\n      @eq ( Ω__57 = -> t2.cfg.show_passes      ), true\n      @eq ( Ω__58 = -> t2.cfg.throw_on_error   ), false\n      @eq ( Ω__59 = -> t2.cfg.throw_on_fail    ), false\n      @eq ( Ω__60 = -> t2.cfg.message_width    ), 50\n      return null\n    #.........................................................................................................\n    do =>\n      t2 = new Test {}\n      @eq ( Ω__61 = -> Object.isFrozen t2.cfg  ), true\n      @eq ( Ω__62 = -> t2.cfg.auto_reset       ), false\n      @eq ( Ω__63 = -> t2.cfg.show_report      ), true\n      @eq ( Ω__64 = -> t2.cfg.show_results     ), true\n      @eq ( Ω__65 = -> t2.cfg.show_fails       ), true\n      @eq ( Ω__66 = -> t2.cfg.show_passes      ), true\n      @eq ( Ω__67 = -> t2.cfg.throw_on_error   ), false\n      @eq ( Ω__68 = -> t2.cfg.throw_on_fail    ), false\n      @eq ( Ω__69 = -> t2.cfg.message_width    ), 50\n      return null\n    #.........................................................................................................\n    do =>\n      t2 = new Test { message_width: 30, throw_on_error: true, }\n      @eq ( Ω__70 = -> Object.isFrozen t2.cfg  ), true\n      @eq ( Ω__71 = -> t2.cfg.auto_reset       ), false\n      @eq ( Ω__72 = -> t2.cfg.show_report      ), true\n      @eq ( Ω__73 = -> t2.cfg.show_results     ), true\n      @eq ( Ω__74 = -> t2.cfg.show_fails       ), true\n      @eq ( Ω__75 = -> t2.cfg.show_passes      ), true\n      @eq ( Ω__76 = -> t2.cfg.throw_on_error   ), true\n      @eq ( Ω__77 = -> t2.cfg.throw_on_fail    ), false\n      @eq ( Ω__78 = -> t2.cfg.message_width    ), 30\n    #.........................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  can_throw_on_fail: ->\n    #.........................................................................................................\n    do =>\n      ### ensure that `Test` instance complains when no error is thrown inside a `throws()` check: ###\n      t2 = new Test { throw_on_error: false, show_report: false, prefix: '**T2_1**', }\n      t2.test ctof_1: ->\n        t2.throws ( ctof_2 = -> 32 ), /expected an error/\n      @eq ( ctof_3 = -> t2.stats    ), { '*': { passes: 0, fails: 1 }, 'ctof_1.*': { passes: 0, fails: 1 }, 'ctof_1.ctof_2.Ωgt__79': { passes: 0, fails: 1 } }\n      @eq ( ctof_4 = -> t2.warnings ), { 'ctof_1.ctof_2.Ωgt__80': [ '(noerr) expected an error but none was thrown' ] }\n      return null\n    #.........................................................................................................\n    do =>\n      t2 = new Test { throw_on_error: false, throw_on_fail: true, show_report: false, prefix: '**T2_2**', }\n      @throws ( ctof_5 = -> t2.eq ( ctof_6 = -> 14 ), 15 ), /neq:/\n      # @throws ( Ω__81 = -> t2.eq ( xy1 = -> 14 ), 15 ), /---/\n      return null\n    #.........................................................................................................\n    return null\n\nTT2 = { test_cfg: TT.test_cfg, }\n\nTT3 =\n  demo_assumptions: ( ctx ) ->\n    line = '-'.repeat 108\n    #.........................................................................................................\n    # echo line; @eq ( Ω__82 = -> 32 ), 32\n    # echo line; @eq ( Ω__83 = -> 32 ), 33\n    # echo line; @eq ( Ω__84 = -> throw new Error \"fine\" )\n    # echo line; @pass 'Ω__85', 'test', \"all fine\"\n    # echo line; @pass 'Ω__86', 'test'\n    # echo line; @fail 'Ω__87', 'test', \"all fine\"\n    # echo line; @fail 'Ω__88', 'test'\n    # echo line; @throws ( Ω__89 = -> 'oops' ), /fine/\n    echo line; @throws ( Ω__90 = -> throw new Error \"this is actually fine 1\" ), /fine/\n    echo line; @throws ( Ω__91 = -> throw new Error \"this is actually fine 2\" ), /what/\n    echo line; @throws ( Ω__92 = -> throw new Error \"this is actually fine 3\" ), \"not this\"\n    echo line; await @async_throws ( Ω__93 = -> throw new Error \"this is actually fine 4\" )\n    echo line; await @async_throws ( Ω__94 = -> throw new Error \"this is actually fine 5\" ), /fine/\n    echo line; await @async_throws ( Ω__95 = -> throw new Error \"this is actually fine 6\" ), /not this/\n    # echo line; await @async_throws ( Ω__96 = -> new Promise ( rslv ) -> after 0.1, -> rslv 'oops' )\n    # echo line; await @async_throws ( Ω__97 = -> new Promise ( rslv, rjct ) => after 0.1, => rjct \"this is actually fine 8\" ), /fine/\n    echo line; await @async_throws ( Ω__98 = -> after 0.1, => await throw new Error \"this is actually fine 7\" ), /fine/\n    # echo line; await @async_throws ( Ω__99 = -> after 0.1, => await throw new Error \"this is actually fine 9\" ), /what/\n    # echo line; await @async_throws ( Ω_100 = -> after 0.1, => await throw new Error \"this is actually fine 10\" ), \"not this\"\n    #.........................................................................................................\n    return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await async_test TT.asynchronous_throws\n  # test TT.pass_and_fail\n  # await async_test TT.pass_and_fail\n  # test TT.test_cfg\n  # ( new Test() ).test TT.can_throw_on_fail\n  # ( new Test        { throw_on_error: true, } ).test        TT.can_throw_on_fail\n  # await ( new Test  { throw_on_error: true, } ).async_test  TT.can_throw_on_fail\n  # ( new Test() ).test TT\n  # ( new Test() ).test { TT, }\n  #.........................................................................................................\n  # do =>\n  #   ( new Test() ).test TT2.test_cfg\n  #   ( new Test() ).test TT2\n  #   ( new Test() ).test { TT2, }\n  #.........................................................................................................\n  await do =>\n    # ( new Test() ).test TT3.demo_assumptions\n    # ( new Test() ).test TT3\n    # ( new Test( throw_on_error: true ) ).test { TT3, }\n    # ( new Test() ).test { TT3, }\n    await ( new Test() ).async_test { TT3, }\n  #.........................................................................................................\n  # ( new Test()        ).test        TT.set_equality_by_value\n  # await ( new Test()  ).async_test  TT.set_equality_by_value\n  # await ( new Test() ).async_test TT\n\n# af1 = ->       after 0.1, ->       throw new Error 'oops' ### not OK ###\n# af2 = -> await after 0.1, ->       throw new Error 'oops' ### not OK ###\n# af3 = ->       after 0.1, -> await throw new Error 'oops' ### OK ###\n# af4 = -> await after 0.1, -> await throw new Error 'oops' ### OK ###\n# # debug 'Ω_101', validate.asyncfunction af\n# f1 = ->\n#   try\n#     result = await af2()\n#   catch error\n#     warn error.message\n#   help result\n# await f1()\n\n"
  ]
}