{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-advanced.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/TESTS/ADVANCED'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nGUY                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@transform_window_cfg_type = ( T, done ) ->\n  # T?.halt_on_error()\n  { get_transform_types\n    misfit              } = require '../../../apps/moonriver'\n  { isa\n    type_of\n    create              } = get_transform_types()\n  #.........................................................................................................\n  T?.eq ([ '^07-1^', isa.transform_window_cfg { min: -1, max: 2, empty: null, } ]), [ '^07-1^', true, ]\n  T?.eq ([ '^07-2^', isa.transform_window_cfg { min: +1, max: 2, empty: null, } ]), [ '^07-2^', true, ]\n  T?.eq ([ '^07-3^', isa.transform_window_cfg { min: +2, max: 2, empty: null, } ]), [ '^07-3^', false, ]\n  #.........................................................................................................\n  T?.eq ( create.transform_window_cfg {}            ), { min: -1, max: 1, empty: misfit, }\n  T?.eq ( create.transform_window_cfg { min: -3, }  ), { min: -3, max: 1, empty: misfit, }\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@window_transform = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline    } = require '../../../apps/moonriver'\n  { $window     } = require '../../../apps/moonriver/lib/transforms'\n  collector       = []\n  p               = new Pipeline()\n  #.........................................................................................................\n  p.push [ 1 .. 9 ]\n  p.push $window { min: -2, max: +2, empty: 0, }\n  p.push show    = ( d        ) -> urge '^45-1^', d\n  # p.push show    = ( d        ) -> urge ( d[ idx ] for idx in [ -2 .. +2 ] )\n  p.push add_up  = ( d, send  ) -> send ( d[ -2 ] + d[ -1 ] ) + d[ 0 ] + ( d[ +1 ] + d[ +2 ] )\n  p.push show    = ( d        ) -> help '^45-2^', d\n  result = p.run()\n  info '^45-2^', result\n  T?.eq result, [ 6, 10, 15, 20, 25, 30, 35, 30, 24 ]\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @window_list_transform = ( T, done ) ->\n#   # T?.halt_on_error()\n#   { Pipeline\n#     transforms  } = require '../../../apps/moonriver'\n#   collector       = []\n#   p               = new Pipeline()\n#   #.........................................................................................................\n#   p.push [ 1 .. 9 ]\n#   p.push transforms.$window_list -2, +2, 0\n#   p.push show    = ( d        ) -> urge '^45-1^', d\n#   # p.push show    = ( d        ) -> urge ( d[ idx ] for idx in [ -2 .. +2 ] )\n#   p.push add_up  = ( d, send  ) -> send ( d[ -2 ] + d[ -1 ] ) + d[ 0 ] + ( d[ +1 ] + d[ +2 ] )\n#   p.push show    = ( d        ) -> help '^45-2^', d\n#   result = p.run()\n#   info '^45-2^', result\n#   T?.eq result, [ 6, 10, 15, 20, 25, 30, 35, 30, 24 ]\n#   done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@named_window_transform = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                 = require '../../../apps/guy'\n  { Pipeline,         \\\n    transforms: TF  } = require '../../../apps/moonriver'\n  { $window         } = require '../../../apps/moonriver/lib/transforms'\n  collector           = []\n  p                   = new Pipeline()\n  #.........................................................................................................\n  p.push [ 1 .. 5 ]\n  p.push $window { names: [ 'before', 'here', 'after', ], empty: null, }\n  p.push show    = ( d        ) -> urge '^45-1^', d\n  result = p.run()\n  info '^45-2^', result\n  T?.eq result, [ 6, 10, 15, 20, 25, 30, 35, 30, 24 ]\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@use_sync_pipeline_as_segment = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                   = require '../../../apps/guy'\n  { Pipeline    }       = require '../../../apps/moonriver'\n  count                 = 0\n  #.........................................................................................................\n  byline                = new Pipeline()\n  byline.push show      = ( d ) -> urge '^29-1^', d\n  byline.push add       = ( d, send ) -> send d + 3\n  byline.push mul       = ( d, send ) -> send d * 3\n  byline.push enumerate = ( d, send ) -> count++; send count; send d * 3\n  #.........................................................................................................\n  trunk_1               = new Pipeline()\n  trunk_1.push [ 1 .. 5 ]\n  trunk_1.push show     = ( d ) -> help '^29-2^', d\n  trunk_1.push byline\n  trunk_1.push show     = ( d ) -> help '^29-3^', d\n  #.........................................................................................................\n  trunk_2               = new Pipeline()\n  trunk_2.push [ 1 .. 5 ]\n  trunk_2.push show     = ( d ) -> help '^29-4^', d\n  trunk_2.push byline\n  trunk_2.push show     = ( d ) -> help '^29-5^', d\n  #.........................................................................................................\n  result_1              = trunk_1.run()\n  result_2              = trunk_2.run()\n  urge '^29-6^', trunk_1\n  info '^29-7^', result_1\n  urge '^29-8^', trunk_2\n  info '^29-9^', result_2\n  T?.eq result_1, [ 1, 36, 2, 45, 3, 54, 4, 63, 5, 72 ]\n  T?.eq result_2, [ 6, 36, 7, 45, 8, 54, 9, 63, 10, 72 ]\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@use_async_pipeline_as_segment = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                   = require '../../../apps/guy'\n  { Async_pipeline }    = require '../../../apps/moonriver'\n  count                 = 0\n  #.........................................................................................................\n  byline                = new Async_pipeline()\n  byline.push show      = ( d ) -> urge '^29-1^', d\n  byline.push add       = ( d, send ) -> send d + 3\n  byline.push mul       = ( d, send ) -> send d * 3\n  byline.push enumerate = ( d, send ) -> GUY.async.after 0.01, -> count++; send count; send d * 3\n  #.........................................................................................................\n  trunk_1               = new Async_pipeline()\n  trunk_1.push [ 1 .. 5 ]\n  trunk_1.push show     = ( d ) -> help '^29-2^', d\n  trunk_1.push byline\n  trunk_1.push show     = ( d ) -> help '^29-3^', d\n  #.........................................................................................................\n  trunk_2               = new Async_pipeline()\n  trunk_2.push [ 1 .. 5 ]\n  trunk_2.push show     = ( d ) -> help '^29-4^', d\n  trunk_2.push byline\n  trunk_2.push show     = ( d ) -> help '^29-5^', d\n  #.........................................................................................................\n  result_1              = await trunk_1.run()\n  result_2              = await trunk_2.run()\n  urge '^29-6^', trunk_1\n  info '^29-7^', result_1\n  urge '^29-8^', trunk_2\n  info '^29-9^', result_2\n  T?.eq result_1, [ 1, 36, 2, 45, 3, 54, 4, 63, 5, 72 ]\n  T?.eq result_2, [ 6, 36, 7, 45, 8, 54, 9, 63, 10, 72 ]\n  #.........................................................................................................\n  done?()\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @window_transform()\n  # @use_pipeline_as_segment_preview()\n  @named_window_transform()\n  test @named_window_transform\n  # @transform_window_cfg_type()\n  # test @transform_window_cfg_type\n  # @use_async_pipeline_as_segment()\n  # test @use_async_pipeline_as_segment\n  # test @\n\n\n\n\n"
  ]
}