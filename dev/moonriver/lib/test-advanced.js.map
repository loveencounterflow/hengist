{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-advanced.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MOONRIVER/BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@window_transform = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY             = require '../../../apps/guy'\n  { Pipeline    } = require '../../../apps/moonriver'\n  { $window     } = require '../../../apps/moonriver/lib/transforms'\n  collector       = []\n  p               = new Pipeline()\n  #.........................................................................................................\n  p.push [ 1 .. 9 ]\n  p.push $window -2, +2, 0\n  p.push show    = ( d        ) -> urge '^45-1^', d\n  # p.push show    = ( d        ) -> urge ( d[ idx ] for idx in [ -2 .. +2 ] )\n  p.push add_up  = ( d, send  ) -> send ( d[ -2 ] + d[ -1 ] ) + d[ 0 ] + ( d[ +1 ] + d[ +2 ] )\n  p.push show    = ( d        ) -> help '^45-2^', d\n  result = p.run()\n  info '^45-2^', result\n  T?.eq result, [ 6, 10, 15, 20, 25, 30, 35, 30, 24 ]\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @window_list_transform = ( T, done ) ->\n#   # T?.halt_on_error()\n#   GUY             = require '../../../apps/guy'\n#   { Pipeline\n#     transforms  } = require '../../../apps/moonriver'\n#   collector       = []\n#   p               = new Pipeline()\n#   #.........................................................................................................\n#   p.push [ 1 .. 9 ]\n#   p.push transforms.$window_list -2, +2, 0\n#   p.push show    = ( d        ) -> urge '^45-1^', d\n#   # p.push show    = ( d        ) -> urge ( d[ idx ] for idx in [ -2 .. +2 ] )\n#   p.push add_up  = ( d, send  ) -> send ( d[ -2 ] + d[ -1 ] ) + d[ 0 ] + ( d[ +1 ] + d[ +2 ] )\n#   p.push show    = ( d        ) -> help '^45-2^', d\n#   result = p.run()\n#   info '^45-2^', result\n#   T?.eq result, [ 6, 10, 15, 20, 25, 30, 35, 30, 24 ]\n#   done?()\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @window_transform()\n  test @\n\n\n\n\n"
  ]
}