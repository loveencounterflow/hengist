{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-advanced.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,wBAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR,EAhB5B;;;EAkBA,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,MADF,EAEE,OAFF,EAGE,QAHF,EAIE,gBAJF,CAAA,GAI4B,KAAK,CAAC,MAAN,CAAA,CAJ5B;;EAKA,GAAA,GAA4B,MAAM,CAAC;;EACnC,GAAA,GAA4B,OAAA,CAAQ,mBAAR;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,sBAAR,EA1B5B;;;EA8BA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACrB,QAAA,CAAA,EAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA;;IACE,GAAA,GAAkB,OAAA,CAAQ,mBAAR;IAClB,CAAA,CAAE,QAAF,EACE,CADF,CAAA,GACkB,OAAA,CAAQ,yBAAR,CADlB;IAEA,CAAA,CAAE,OAAF,CAAA,GAAkB,OAAA,CAAQ,wCAAR,CAAlB;IACA,SAAA,GAAkB;IAClB,EAAA,GAAkB,IAAI,QAAJ,CAAA;IAClB,MAAA,GAAkB,MAAA,CAAO,QAAP,EAPpB;;IASE,EAAE,CAAC,IAAH,CAAQ,OAAA,CAAQ,CAAC,CAAT,EAAY,CAAC,CAAb,EAAgB,IAAhB,CAAR;IACA,EAAE,CAAC,IAAH,CAAQ,IAAA,GAAU,QAAA,CAAE,CAAF,CAAA;aAAS,IAAA,CAAK,QAAL,EAAe,CAAf;IAAT,CAAlB;IACA,EAAE,CAAC,IAAH,CAAQ,OAAA,GAAU,QAAA,CAAE,CAAF,CAAA;aAAS,SAAS,CAAC,IAAV,CAAe,CAAf;IAAT,CAAlB;IACA,KAAU,4BAAV;MACE,EAAE,CAAC,IAAH,CAAQ,EAAR;IADF;IAEA,EAAE,CAAC,GAAH,CAAA;IACA,KAAA,CAAM,QAAN,EAAgB,SAAhB;wCACA;EAjBmB,EA9BrB;;;EAqDA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAK,IAAL;IADgC,CAAA,IAAlC;;AArDA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MOONRIVER/BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_window_transform = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY             = require '../../../apps/guy'\n  { Pipeline\n    $           } = require '../../../apps/moonriver'\n  { $window }     = require '../../../apps/moonriver/lib/transforms'\n  collector       = []\n  mr              = new Pipeline()\n  misfit          = Symbol 'misfit'\n  #.........................................................................................................\n  mr.push $window -2, +2, null\n  mr.push show    = ( d ) -> urge '^45-1^', d\n  mr.push collect = ( d ) -> collector.push d\n  for nr in [ 1 .. 9 ]\n    mr.send nr\n  mr.run()\n  debug '^45-2^', collector\n  done?()\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n\n\n\n\n"
  ]
}