{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ng.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntypes                     = new ( require '../../../apps/intertype' ).Intertype()\n{ isa\n  type_of }               = types\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline } = require '../../../apps/moonriver'\n  p = new Pipeline()\n  p.push times_2 = ( d, send ) ->\n    if types.isa.float d\n      # send '('\n      send d * 2\n      # send ')'\n    else\n      send d\n  p.push plus_2  = ( d, send ) ->\n    if types.isa.float d\n      # send '['\n      send d + 2\n      # send ']'\n    else\n      send d\n  p.push times_3 = ( d, send ) ->\n    if types.isa.float d\n      # send '{'\n      send d * 3\n      # send '}'\n    else\n      send d\n  p.send 1\n  p.send 2\n  p.send 3\n  # urge '^97-4^', d for d from p.walk()\n  info '^97-4^', p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline } = require '../../../apps/moonriver'\n  p = new Pipeline()\n  # p.push 'AB'\n  # p.push 'CD'\n  # p.push [ 1, 2, 3, ]\n  # p.push [ 4, 5, 6, ]\n  p.push { one: 'cat', two: 'dog', three: 'pony', }\n  p.push new Set '+-*'\n  p.push new Map [ [ 11, 12, ], [ 13, 14, ], ]\n  p.push 'ABC'\n  # p.push 'DEF'\n  # p.push 'GHIJ'\n  # # p.push show_1 = ( d, send ) -> whisper rpr d; send d\n  p.push show_2 = ( d       ) -> whisper rpr d\n  p.send 0\n  p.send 1\n  p.send 2\n  info '^98-5^', p\n  info '^98-6^', p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_3a = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline\n    Async_pipeline }  = require '../../../apps/moonriver'\n  p = new Async_pipeline()\n  p.push [ 1, 2, 3, ]\n  p.push show_2 = ( d ) -> whisper 'Ⅱ', rpr d\n  p.push mul_3b = ( d, send ) -> send new Promise ( resolve ) -> GUY.async.after 0.1, -> resolve d * 3\n  p.push show_2 = ( d ) -> whisper 'Ⅲ', rpr d\n  info '^23-1^', p\n  info '^23-4^', await p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_3b = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline\n    Async_pipeline\n    Segment\n    Async_segment } = require '../../../apps/moonriver'\n  after  = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n  p = new Async_pipeline()\n  p.push [ 1, 2, 3, ]\n  p.push show_2 = ( d ) -> whisper 'Ⅱ', rpr d\n  p.push mul_3b = ( d, send ) -> send await after 0.1, -> d * 3\n  p.push show_2 = ( d ) -> whisper 'Ⅲ', rpr d\n  info '^24-7^', p\n  info '^24-8^', await p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_4 = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline } = require '../../../apps/moonriver'\n  p = new Pipeline()\n  p.push GUY.fs.walk_lines __filename\n  p.push show_2 = ( d ) -> whisper 'Ⅱ', rpr d\n  # p.push show_2 = ( d ) -> whisper 'Ⅲ', rpr d\n  info '^24-7^', p\n  p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_5 = ->\n  echo '—————————————————————————————————————————————'\n  FS                    = require 'node:fs'\n  PATH                  = require 'node:path'\n  { Async_pipeline, \\\n    transforms: T,  }   = require '../../../apps/moonriver'\n  path                  = PATH.join __dirname, '../../../assets/short-proposal.mkts.md'\n  get_source            = -> FS.createReadStream path #, { encoding: 'utf-8', }\n  p = new Async_pipeline()\n  p.push get_source()\n  p.push T.$split_lines()\n  p.push T.$limit 5\n  p.push show = ( d ) -> whisper 'Ⅱ', rpr d\n  info '^24-7^', p\n  await p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_6 = ->\n  echo '—————————————————————————————————————————————'\n  FS                  = require 'node:fs'\n  { Pipeline, \\\n    transforms: T,  } = require '../../../apps/moonriver'\n  p                   = new Pipeline()\n  { $ }               = p\n  last                = Symbol 'last'\n  #.........................................................................................................\n  $with_stars         = -> with_stars = ( d, send ) -> debug '^4456546^', send; send \"*#{d}*\"\n  #.........................................................................................................\n  $collect            = $ { last, }, collect = ->\n    collector = []\n    return ( d, send ) ->\n      return send collector if d is last\n      collector.push d\n      return null\n  #.........................................................................................................\n  info '^40-1^', $with_stars\n  info '^40-2^', $collect\n  #.........................................................................................................\n  p.push Array.from '氣場全開'\n  p.push $with_stars # ()\n  p.push show = ( d ) -> whisper rpr d\n  p.run()\n  #.........................................................................................................\n  return null\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  demo_1()\n  demo_2()\n  await demo_3a()\n  await demo_3b()\n  demo_4()\n  demo_5()\n  demo_6()\n\n\n"
  ]
}