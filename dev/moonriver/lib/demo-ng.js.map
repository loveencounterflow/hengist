{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ng.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate\n  validate_optional }     = types\nUTIL                      = require 'node:util'\n\n\n#===========================================================================================================\nclass Segment\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @input      = cfg.input  ? []\n    @output     = cfg.output ? []\n    GUY.props.hide @, 'transform', cfg.transform.bind @ ### binding is optional ###\n    GUY.props.hide @, '_send', send = ( d ) => @output.push d; d ### 'inner' send method ###\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  ### 'outer' send method ###\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  process: ->\n    if @input.length > 0\n      @transform.call null, @input.shift(), @_send\n      return 1\n    return 0\n\n  #---------------------------------------------------------------------------------------------------------\n  # unshift: ->\n\n\n#===========================================================================================================\nclass Collector\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( host ) ->\n    GUY.props.hide @, 'host', host\n    GUY.props.hide @, 'd',    []\n    GUY.props.def @, 'length', get: -> @d.length\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  push:     ( d ) -> @host._on_change_datacount +1; @d.push d\n  unshift:  ( d ) -> @host._on_change_datacount +1; @d.unshift d\n  pop:            -> @host._on_change_datacount -1; @d.pop()\n  shift:          -> @host._on_change_datacount -1; @d.shift()\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               -> rpr @d\n\n\n#===========================================================================================================\nclass Pipeline\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @datacount  = 0\n    @input      = new Collector @\n    @output     = new Collector @\n    @segments   = []\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _on_change_datacount: ( delta ) -> @datacount += delta\n\n  #---------------------------------------------------------------------------------------------------------\n  push: ( transform ) ->\n    output  = @output\n    if ( count = @segments.length ) is 0\n      input               = @input\n    else\n      prv_segment         = @segments[ count - 1 ]\n      prv_segment.output  = new Collector @\n      input               = prv_segment.output\n    R       = new Segment { input, transform, output, }\n    @segments.push R\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  walk: ->\n    loop\n      for segment in @segments\n        debug '^56-1^', @\n        segment.process()\n        debug '^56-1^', @\n        debug '^56-1^', { output: @output, datacount: @datacount, }\n        yield @output.shift() while @output.length > 0\n      debug '^56-1^', { output: @output, datacount: @datacount, }\n      break if @datacount < 1\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show: ->\n    echo { input: @input, }\n    echo segment for segment in @segments\n    echo { output: @output, }\n    return null\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  p = new Pipeline()\n  p.push ( d, send ) -> send d * 2\n  p.push ( d, send ) -> send d + 2\n  debug p.input.host\n  debug p.input.host is p\n  p.send 1\n  p.send 2\n  p.send 3\n  p.show()\n  # info '^97-3^', p.segments[ 0 ].process()\n  # p.show()\n  # info '^97-3^', p.segments[ 1 ].process()\n  # p.show()\n  for d from p.walk()\n    urge '^97-4^', d\n  return null\n"
  ]
}