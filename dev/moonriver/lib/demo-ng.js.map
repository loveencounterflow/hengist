{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ng.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate\n  validate_optional }     = types\nUTIL                      = require 'node:util'\n{ hide\n  def }                   = GUY.props\nnameit                    = ( name, f ) -> def f, 'name', { value: name, }\n\n#===========================================================================================================\nclass Segment\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @input      = cfg.input  ? []\n    @output     = cfg.output ? []\n    name        = cfg.transform.name\n    name        = 'ƒ' if name is ''\n    hide @, 'transform', nameit name, cfg.transform.bind @ ### binding is optional ###\n    hide @, '_send', send = ( d ) => @output.push d; d ### 'inner' send method ###\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  ### 'outer' send method ###\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  process: ->\n    if @input.length > 0\n      @transform.call null, @input.shift(), @_send\n      return 1\n    return 0\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               -> \"#{rpr @input} ▶ #{@transform.name} ▶ #{rpr @output}\"\n\n#===========================================================================================================\nclass Reporting_collector\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( callback ) ->\n    hide @, 'callback', callback\n    hide @, 'd',        []\n    GUY.props.def @,  'length',   get: -> @d.length\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  push:     ( d ) -> @callback +1; @d.push d\n  unshift:  ( d ) -> @callback +1; @d.unshift d\n  pop:            -> @callback -1; @d.pop()\n  shift:          -> @callback -1; @d.shift()\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               -> rpr @d\n\n\n#===========================================================================================================\nclass Pipeline\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    cfg             = { {}..., cfg..., }\n    # cfg             = types.create.mr_pipeline_cfg cfg\n    @datacount        = 0\n    @input            = @_new_collector()\n    @output           = [] ### pipeline output buffer does not participate in datacount ###\n    @segments         = []\n    @on_before_step   = cfg.on_before_step ? null\n    @on_after_step    = cfg.on_after_step  ? null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _new_collector: -> new Reporting_collector ( delta ) => @datacount += delta\n\n  #---------------------------------------------------------------------------------------------------------\n  push: ( transform ) ->\n    if ( count = @segments.length ) is 0\n      input               = @input\n    else\n      prv_segment         = @segments[ count - 1 ]\n      prv_segment.output  = @_new_collector()\n      input               = prv_segment.output\n    R = new Segment { input, transform, output: @output, }\n    @segments.push R\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  process: ->\n    for segment, segment_idx in @segments\n      @on_before_step segment_idx if @on_before_step?\n      segment.process()\n      @on_after_step segment_idx if @on_after_step?\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  run: -> ( d for d from @walk() )\n\n  #---------------------------------------------------------------------------------------------------------\n  walk: ->\n    loop\n      @process()\n      yield @output.shift() while @output.length > 0\n      break if @datacount < 1\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  show: ->\n    ### TAINT return string, do not output ###\n    echo { input: @input, }\n    echo segment for segment in @segments\n    echo { output: @output, }\n    return null\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  on_before_step =  ( sidx ) ->\n    { datacount, } = @\n    info '-'.repeat 108\n    info { sidx, datacount, }\n    @show()\n  on_after_step =  ( sidx ) ->\n    { datacount, } = @\n    urge { sidx, datacount, }\n    @show()\n  on_before_step  = null\n  on_after_step   = null\n  p = new Pipeline { on_before_step, on_after_step, }\n  p.push times_2 = ( d, send ) ->\n    if isa.float d\n      send '('\n      send d * 2\n      send ')'\n    else\n      send d\n  p.push plus_2  = ( d, send ) ->\n    if isa.float d\n      send '['\n      send d + 2\n      send ']'\n    else\n      send d\n  p.push times_3 = ( d, send ) ->\n    if isa.float d\n      send '{'\n      send d * 3\n      send '}'\n    else\n      send d\n  p.send 1\n  p.send 2\n  p.send 3\n  # urge '^97-4^', d for d from p.walk()\n  urge '^97-4^', p.run()\n  return null\n"
  ]
}