{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ng.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate\n  validate_optional }     = types\nUTIL                      = require 'node:util'\n{ hide\n  def }                   = GUY.props\nnameit                    = ( name, f ) -> def f, 'name', { value: name, }\n\n#===========================================================================================================\nclass Segment\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @input      = cfg.input  ? []\n    @output     = cfg.output ? []\n    hide @, 'transform', @_as_transform cfg.transform\n    hide @, '_send', send = ( d ) => @output.push d; d ### 'inner' send method ###\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _as_transform: ( transform ) ->\n    switch type = type_of transform\n      when 'function'\n        ### TAINT validate arity ###\n        R = transform\n      when 'list'\n        source  = transform\n        R       = ( d, send ) ->\n          debug arguments\n      else\n        throw new Error \"unable to push value of type #{rpr type}\"\n    #.......................................................................................................\n    name  = R.name\n    name  = 'Æ’' if name is ''\n    return nameit name, R\n\n  #---------------------------------------------------------------------------------------------------------\n  ### 'outer' send method ###\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  process: ->\n    if @input.length > 0\n      @transform.call null, @input.shift(), @_send\n      return 1\n    return 0\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               -> \"#{rpr @input} â–¶ #{@transform.name} â–¶ #{rpr @output}\"\n\n#===========================================================================================================\nclass Reporting_collector\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( callback ) ->\n    hide @, 'callback', callback\n    hide @, 'd',        []\n    GUY.props.def @,  'length',   get: -> @d.length\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  push:     ( d ) -> @callback +1; @d.push d\n  unshift:  ( d ) -> @callback +1; @d.unshift d\n  pop:            -> @callback -1; @d.pop()\n  shift:          -> @callback -1; @d.shift()\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               -> rpr @d\n\n\n#===========================================================================================================\nclass Pipeline\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    cfg                 = { {}..., cfg..., }\n    # cfg                 = types.create.mr_pipeline_cfg cfg\n    @datacount          = 0\n    @input              = @_new_collector()\n    @output             = [] ### pipeline output buffer does not participate in datacount ###\n    @segments           = []\n    @on_before_step     = cfg.on_before_step ? null\n    @on_after_step      = cfg.on_after_step  ? null\n    @on_before_process  = cfg.on_before_process ? null\n    @on_after_process   = cfg.on_after_process  ? null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _new_collector: -> new Reporting_collector ( delta ) => @datacount += delta\n\n  #---------------------------------------------------------------------------------------------------------\n  push: ( transform ) ->\n    if ( count = @segments.length ) is 0\n      input               = @input\n    else\n      prv_segment         = @segments[ count - 1 ]\n      prv_segment.output  = @_new_collector()\n      input               = prv_segment.output\n    R = new Segment { input, transform, output: @output, }\n    @segments.push R\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( d ) -> @input.push d; d\n\n  #---------------------------------------------------------------------------------------------------------\n  process: ->\n    @on_before_process() if @on_before_process?\n    for segment, segment_idx in @segments\n      @on_before_step segment_idx if @on_before_step?\n      segment.process()\n      @on_after_step segment_idx if @on_after_step?\n    @on_after_process() if @on_after_process?\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  run: -> ( d for d from @walk() )\n\n  #---------------------------------------------------------------------------------------------------------\n  walk: ->\n    loop\n      @process()\n      yield d for d in @output\n      @output.length = []\n      # yield @output.shift() while @output.length > 0\n      break if @datacount < 1\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  [UTIL.inspect.custom]:  -> @toString()\n  toString:               ->\n    R = []\n    for segment in @segments\n      R.push rpr segment.input\n      R.push 'â–¶'\n      R.push segment.transform.name\n      R.push 'â–¶'\n    R.push rpr @output\n    return R.join ' '\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  on_before_process = -> help '^97-1^', @\n  on_after_process  = -> warn '^97-2^', @\n  on_before_step    =  ( sidx ) -> urge '^97-3^', sidx, @\n  on_after_step     =  ( sidx ) -> urge '^97-4^', sidx, @\n  on_before_step    = null\n  # on_after_step     = null\n  on_after_process  = null\n  p = new Pipeline { on_before_process, on_before_step, on_after_step, on_after_process, }\n  p.push times_2 = ( d, send ) ->\n    if isa.float d\n      # send '('\n      send d * 2\n      # send ')'\n    else\n      send d\n  p.push plus_2  = ( d, send ) ->\n    if isa.float d\n      # send '['\n      send d + 2\n      # send ']'\n    else\n      send d\n  p.push times_3 = ( d, send ) ->\n    if isa.float d\n      # send '{'\n      send d * 3\n      # send '}'\n    else\n      send d\n  p.send 1\n  p.send 2\n  p.send 3\n  # urge '^97-4^', d for d from p.walk()\n  info '^97-4^', p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  on_before_process = -> help '^97-1^', @\n  on_after_process  = -> warn '^97-2^', @\n  on_before_step    =  ( sidx ) -> urge '^97-3^', sidx, @\n  on_after_step     =  ( sidx ) -> urge '^97-4^', sidx, @\n  on_before_step    = null\n  # on_after_step     = null\n  on_after_process  = null\n  p = new Pipeline { on_before_process, on_before_step, on_after_step, on_after_process, }\n  p.push [ 1, 2, 3, ]\n  info '^97-4^', p.run()\n  return null\n\n############################################################################################################\nif module is require.main then do =>\n  demo_1()\n  demo_2()\n"
  ]
}