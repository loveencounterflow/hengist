{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-ng.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/NG'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntypes                     = new ( require '../../../apps/intertype' ).Intertype()\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline } = require '../../../apps/moonriver'\n  on_before_process = -> help '^97-1^', @\n  on_after_process  = -> warn '^97-2^', @\n  on_before_step    =  ( sidx ) -> urge '^97-3^', sidx, @\n  on_after_step     =  ( sidx ) -> urge '^97-4^', sidx, @\n  on_before_step    = null\n  # on_after_step     = null\n  on_after_process  = null\n  p = new Pipeline { on_before_process, on_before_step, on_after_step, on_after_process, }\n  p.push times_2 = ( d, send ) ->\n    if types.isa.float d\n      # send '('\n      send d * 2\n      # send ')'\n    else\n      send d\n  p.push plus_2  = ( d, send ) ->\n    if types.isa.float d\n      # send '['\n      send d + 2\n      # send ']'\n    else\n      send d\n  p.push times_3 = ( d, send ) ->\n    if types.isa.float d\n      # send '{'\n      send d * 3\n      # send '}'\n    else\n      send d\n  p.send 1\n  p.send 2\n  p.send 3\n  # urge '^97-4^', d for d from p.walk()\n  info '^97-4^', p.run()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  echo '—————————————————————————————————————————————'\n  { Pipeline } = require '../../../apps/moonriver'\n  on_before_process = null\n  on_before_step    = null\n  on_after_step     = null\n  on_after_process  = null\n  # on_before_process = -> help '^98-1^', @\n  # on_after_process  = -> warn '^98-2^', @\n  # on_before_step    =  ( sidx ) -> urge '^98-3^', sidx, @\n  # on_after_step     =  ( sidx ) -> urge '^98-4^', sidx, @\n  p = new Pipeline { on_before_process, on_before_step, on_after_step, on_after_process, }\n  # p = new Pipeline()\n  # p.push 'AB'\n  # p.push 'CD'\n  # p.push [ 1, 2, 3, ]\n  # p.push [ 4, 5, 6, ]\n  p.push { one: 'cat', two: 'dog', three: 'pony', }\n  p.push new Set '+-*'\n  p.push new Map [ [ 11, 12, ], [ 13, 14, ], ]\n  p.push 'ABC'\n  p.push 'DEF'\n  p.push 'GHIJ'\n  # p.push show_1 = ( d, send ) -> whisper rpr d; send d\n  p.push show_2 = ( d       ) -> whisper rpr d\n  p.send 0\n  p.send 1\n  p.send 2\n  info '^98-5^', p\n  info '^98-6^', p.run()\n  return null\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  demo_1()\n  demo_2()\n\n"
  ]
}