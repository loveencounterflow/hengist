{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/TESTS/BASIC'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\nafter                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n\n\n  # #.........................................................................................................\n  # probes_and_matchers = [\n  #   ]\n  # #.........................................................................................................\n  # for [ probe, matcher, error, ] in probes_and_matchers\n  #   await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n\n\n#-----------------------------------------------------------------------------------------------------------\n@simple = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  do =>\n    collector = []\n    p        = new Pipeline()\n    p.push [ 1, 2, 3, 5, ]\n    p.push [ 6, 7, 8, 9, ].values()\n    p.push ( d, send ) -> send d * 2\n    p.push ( d, send ) -> send d #; urge d\n    p.push ( d, send ) -> collector.push d #; help collector\n    p.run()\n    T?.eq collector, [ 2, 12, 4, 14, 6, 16, 10, 18 ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@simple_with_generatorfunction = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  do =>\n    collector = []\n    p        = new Pipeline()\n    p.push ( send ) -> yield n for n in [ 1, 2, 3, 5, ]\n    p.push ( d, send ) -> send d * 2\n    p.push ( d, send ) -> send d #; urge d\n    p.push ( d, send ) -> collector.push d #; help collector\n    p.run()\n    T?.eq collector, [ 2, 4, 6, 10, ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@simple_with_generator = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  do =>\n    collector = []\n    p        = new Pipeline()\n    p.push ( ( send ) -> yield n for n in [ 1, 2, 3, 5, ] )()\n    p.push ( d, send ) -> send d * 2\n    p.push ( d, send ) -> send d #; urge d\n    p.push ( d, send ) -> collector.push d #; help collector\n    p.run()\n    T?.eq collector, [ 2, 4, 6, 10, ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"can access pipeline from within transform, get user area\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  do =>\n    collector = []\n    pipeline  = [\n      [ '^4564^', ]\n      ( d ) -> urge d\n      #.....................................................................................................\n      can_access_pipeline_1 = ( d ) ->\n        if @ is p then T?.ok true\n        else            T?.fail \"^478-1^ not ok\"\n        return null\n      #.....................................................................................................\n      can_access_pipeline_2 = ( d, send ) ->\n        send d\n        if @ is p then T?.ok true\n        else            T?.fail \"^478-2^ not ok\"\n        return null\n      #.....................................................................................................\n      has_user_area = ( d, send ) ->\n        send d\n        if isa.object @user then  T?.ok true\n        else                      T?.fail \"^478-3^ not ok\"\n        return null\n      #.....................................................................................................\n      ]\n    p = new Pipeline pipeline\n    debug '^558^', p\n    p.run()\n    # T?.eq collector, [ 2, 4, 6, 10, ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_asyncgenerator_as_source = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                 = require '../../../apps/guy'\n  { Async_pipeline }  = require '../../../apps/moonriver'\n  count               = 0\n  source              = -> await yield d for d in [ 3, 5, 7, 11, ]\n  #.......................................................................................................\n  p = new Async_pipeline()\n  p.push source()\n  p.push sync_square  = ( d, send ) ->                      send d * d\n  p.push sync_show    = ( d       ) ->                      urge '^49-1^', d\n  p.push async_square = ( d, send ) -> await after 0.05, -> send d * d\n  p.push async_show   = ( d       ) -> await after 0.05, -> urge '^49-1^', d\n  #.........................................................................................................\n  info '^3424^', p\n  result = await p.run()\n  T?.eq result, [ 81, 625, 2401, 14641 ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_asyncgeneratorfunction_as_source = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY                 = require '../../../apps/guy'\n  { Async_pipeline }  = require '../../../apps/moonriver'\n  count               = 0\n  source              = -> await yield d for d in [ 3, 5, 7, 11, ]\n  debug '^49-1^', source\n  debug '^49-1^', source()\n  debug '^49-1^', source().next\n  #.......................................................................................................\n  p = new Async_pipeline()\n  p.push source\n  p.push square = ( d, send ) -> send d * d\n  p.push show = ( d ) -> urge '^49-1^', d\n  #.........................................................................................................\n  result = await p.run()\n  info '^49-1^', result\n  T?.eq result, [ 9, 25, 49, 121, ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_asyncfunction_as_transform = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY               = require '../../../apps/guy'\n  { Async_pipeline\n    $           }   = require '../../../apps/moonriver'\n  count             = 0\n  #.......................................................................................................\n  p = new Async_pipeline()\n  p.push Array.from '覚える'\n  p.push ( d, send ) -> send await after 0.1, -> \"(#{d})\"\n  p.push show = ( d ) -> urge '^49-1^', d\n  #.........................................................................................................\n  result = await p.run()\n  info '^49-1^', result\n  T?.eq result, [ '(覚)', '(え)', '(る)' ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@can_use_walk_with_async_pipeline = ( T, done ) ->\n  # T?.halt_on_error()\n  GUY               = require '../../../apps/guy'\n  { Async_pipeline\n    $           }   = require '../../../apps/moonriver'\n  count             = 0\n  #.......................................................................................................\n  p = new Async_pipeline()\n  p.push Array.from '覚える'\n  p.push ( d, send ) -> send await after 0.1, -> \"(#{d})\"\n  p.push show = ( d ) -> urge '^49-1^', d\n  #.........................................................................................................\n  result = []\n  for await d from p.walk()\n    result.push d\n  info '^49-1^', result\n  T?.eq result, [ '(覚)', '(え)', '(る)' ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@types_rundown = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline }  = require '../../../apps/moonriver'\n  p             = new Pipeline()\n  T?.eq ( p.types.type_of 'abc'                                               ), 'text'\n  T?.eq ( p.types.type_of producer = -> 'def'                                 ), 'producer_fitting'\n  T?.eq ( p.types.type_of [ 1, 2, ]                                           ), 'list'\n  T?.eq ( p.types.type_of [ 6, 7, ].values()                                  ), 'arrayiterator'\n  T?.eq ( p.types.type_of { x: 42, }                                          ), 'object'\n  T?.eq ( p.types.type_of new Map [ [ 23, true, ], ]                          ), 'map'\n  T?.eq ( p.types.type_of new Set 'xyz'                                       ), 'set'\n  T?.eq ( p.types.type_of sync_transducer   = ( d, send ) -> send d           ), 'transducer_fitting'\n  T?.eq ( p.types.type_of sync_observer     = ( d       ) -> info '^23-1^', d ), 'observer_fitting'\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@everything_sync = ( T, done ) ->\n  # T?.halt_on_error()\n  { Pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  p = new Pipeline()\n  p.push 'abc'\n  p.push producer = -> 'def'\n  p.push [ 1, 2, ]\n  p.push [ 6, 7, ].values()\n  p.push { x: 42, }\n  p.push new Map [ [ 23, true, ], ]\n  p.push new Set 'xyz'\n  p.push sync_transducer   = ( d, send ) -> send d\n  p.push sync_observer     = ( d       ) -> info '^23-1^', d\n  result = p.run()\n  help '^23-2^', result\n  T?.eq result, [ 'a', 'd', 1, 6, [ 'x', 42 ], [ 23, true ], 'x', 'b', 'e', 2, 7, 'y', 'c', 'f', 'z' ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@everything_async = ( T, done ) ->\n  # T?.halt_on_error()\n  { Async_pipeline } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  p = new Async_pipeline()\n  p.push 'abc'\n  p.push producer = -> 'def'\n  p.push [ 1, 2, ]\n  p.push [ 6, 7, ].values()\n  p.push { x: 42, }\n  p.push new Map [ [ 23, true, ], ]\n  p.push new Set 'xyz'\n  p.push sync_transducer   = ( d, send ) -> send d\n  p.push sync_observer     = ( d       ) -> info '^23-3^', d\n  p.push async_transducer  = ( d, send ) -> send await after 0.01, -> d\n  p.push async_observer    = ( d       ) -> await after 0.01, -> urge '^23-4^', d\n  result = await p.run()\n  help '^23-5^', result\n  T?.eq result, [ 'a', 'd', 1, 6, [ 'x', 42 ], [ 23, true ], 'x', 'b', 'e', 2, 7, 'y', 'c', 'f', 'z' ]\n  #.........................................................................................................\n  done?()\n  return null\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # await @can_use_asyncgenerator_as_source()\n  # await @can_use_asyncgeneratorfunction_as_source()\n  # @simple()\n  # @types_rundown()\n  # test @types_rundown\n  # @everything_sync()\n  # @everything_async()\n  # test @everything_sync\n  # test @everything_async\n  # test @can_use_asyncgenerator_as_source\n  # test @can_use_asyncgeneratorfunction_as_source\n  # @can_use_asyncfunction_as_transform()\n  # test @can_use_asyncfunction_as_transform\n  # @simple_with_generatorfunction()\n  # test @simple_with_generatorfunction\n  await @can_use_walk_with_async_pipeline()\n  await test @can_use_walk_with_async_pipeline\n  # test @\n\n"
  ]
}