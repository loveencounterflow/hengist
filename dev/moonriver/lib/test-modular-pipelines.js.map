{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-modular-pipelines.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,4BAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,yBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAdA;;;EAmBA,IAAA,GAA4B,OAAA,CAAQ,wBAAR;;EAC5B,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,yBAAR,CAAF,CAAqC,CAAC,SAA1C,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,MADF,EAEE,OAFF,EAGE,QAHF,CAAA,GAG4B,KAH5B,EArBA;;;;;;;;;;EAmCA,4BAAA,GAA+B,QAAA,CAAA,CAAA;AAC/B,QAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,GAAA,EAAA;IAAE,CAAA,CAAE,QAAF,EACE,WADF,CAAA,GACkB,OAAA,CAAQ,yBAAR,CADlB,EAAF;;IAIQ,MAAN,MAAA,IAAA,QAAkB,YAAlB;MAEE,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;MACR,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;MACR,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;IAJV,EAJF;;IAWQ,MAAN,MAAA,IAAA,QAAkB,YAAlB;MAEE,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;MACR,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;MACR,MAAQ,CAAA,CAAA;AAAE,YAAA;eAAC,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,IAAA,CAAK,QAAL;UAAe,CAAC,CAAC,IAAF,CAAO,QAAP;iBAAiB,IAAA,CAAK,CAAL;QAA/C;MAAX;;IAJV;IAOM;;MAAN,MAAA,KAAA,QAAmB,YAAnB,CAAA;;qBACE,GAAA,GAAK,IAAI,GAAJ,CAAA;;qBACL,GAAA,GAAK,IAAI,GAAJ,CAAA;;;;kBApBT;;IAuBE,GAAA,GAAM,IAAI,QAAJ,CAAA;IACN,GAAG,CAAC,IAAJ,CAAS,KAAA,GAAQ,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;MAAe,IAAA,CAAK,OAAL;MAAc,CAAC,CAAC,IAAF,CAAO,OAAP;aAAgB,IAAA,CAAK,CAAL;IAA7C,CAAjB;IAGM;;;;MAAN,MAAA,OAAA,QAAqB,YAArB,CAAA;;;uBAGE,CAAA,GAAG;QACD,SAAA,GAAmB,QAAA,CAAE,CAAF;QAAK,IAAL,CAAA;UAAe,IAAA,CAAK,WAAL;UAAsB,CAAC,CAAC,IAAF,CAAO,WAAP;iBAAwB,IAAA,CAAK,CAAL;QAA7D,CADlB;QAED,YAAA,GAAgB,QAAA,CAAA,CAAA;iBAAG,QAAA,CAAE,CAAF;QAAK,IAAL,CAAA;YAAe,IAAA,CAAK,cAAL;YAAsB,CAAC,CAAC,IAAF,CAAO,cAAP;mBAAwB,IAAA,CAAK,CAAL;UAA7D;QAAH,CAFf;QAGD,IAAI,GAAJ,CAAA,CAHC;QAID,GAJC;QAKD,GALC;;;;;;IASC;;MAAN,MAAA,IAAA,QAAkB,YAAlB;QACE,GAAK,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,CAAC,CAAC,IAAF,CAAO,KAAP;iBAAc,IAAA,CAAK,CAAL;QAA7B;;QACL,GAAK,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,CAAC,CAAC,IAAF,CAAO,KAAP;iBAAc,IAAA,CAAK,CAAL;QAA7B;;MAFP;;oBAGE,GAAA,GAAK;;;;kBA1CT;;IA6CQ,UAAN,MAAA,QAAA,QAAsB,YAAtB,CAAA;IAGM;;MAAN,MAAA,IAAA,QAAkB,YAAlB;QACE,GAAK,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,CAAC,CAAC,IAAF,CAAO,KAAP;iBAAc,IAAA,CAAK,CAAL;QAA7B;;QACL,GAAK,CAAE,CAAF,EAAK,IAAL,CAAA;UAAe,CAAC,CAAC,IAAF,CAAO,KAAP;iBAAc,IAAA,CAAK,CAAL;QAA7B;;MAFP;;oBAGE,KAAA,GAAO;;oBACP,GAAA,GAAK;;;;kBApDT;;IAuDQ,MAAN,MAAA,IAAA,QAAkB,IAAlB;MACE,IAAM,CAAE,CAAF,CAAA,EAAA;;IADR,EAvDF;;AA2DE,WAAO,CACL,GADK,EAEL,GAFK,EAGL,IAHK,EAIL,MAJK,EAKL,GALK,EAML,OANK,EAOL,GAPK,EAQL,GARK;EA5DsB,EAnC/B;;;EA0GA,IAAC,CAAA,2BAAD,GAA+B,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAC/B,QAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA,EAAA;IAAE,CAAA,CAAE,QAAF,EACE,WADF,CAAA,GACkB,OAAA,CAAQ,yBAAR,CADlB;IAEA,CAAA,CAAE,GAAF,EACE,GADF,EAEE,IAFF,EAGE,MAHF,EAIE,GAJF,EAKE,OALF,EAME,GANF,EAOE,GAPF,CAAA,GAOsB,4BAAA,CAAA,CAPtB;IASG,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA,CAAA,EAAA;MAAI,OAAA,CAAQ,QAAR,EAAkB,0CAAlB;MACA,CAAA,GAAI,IAAI,OAAJ,CAAA;MACJ,IAAA,CAAK,QAAL,EAAe,CAAf;;QACA,CAAC,CAAE,EAAH,CAAM,CAAA,YAAa,WAAnB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,WAAR,EAAqB,EAArB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;;QACA,CAAC,CAAE,EAAH;;AAAQ;UAAA,KAAA,MAAA;sIAA+B;UAA/B,CAAA;;YAAR,EAA6D,EAA7D;;MACA,CAAC,CAAC,MAAF,GAAW;;QACX,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;AACA,aAAO;IAVN,CAAA;IAYA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA,CAAA,EAAA;MAAI,OAAA,CAAQ,QAAR,EAAkB,0CAAlB;MACA,CAAA,GAAI,IAAI,GAAJ,CAAA;MACJ,IAAA,CAAK,QAAL,EAAe,CAAf;;QACA,CAAC,CAAE,EAAH,CAAM,CAAA,YAAa,WAAnB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;;QACA,CAAC,CAAE,EAAH;;AAAQ;UAAA,KAAA,MAAA;sIAA+B;UAA/B,CAAA;;YAAR,EAA6D,CAAE,OAAF,EAAW,OAAX,EAAoB,OAApB,CAA7D;;MACA,CAAC,CAAC,MAAF,GAAW;;QACX,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;AACA,aAAO;IATN,CAAA;IAWA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA,CAAA,EAAA;MAAI,OAAA,CAAQ,QAAR,EAAkB,0CAAlB;MACA,CAAA,GAAI,IAAI,MAAJ,CAAA;MACJ,IAAA,CAAK,QAAL,EAAe,CAAf;MACA,IAAA,CAAK,QAAL,EAAe,CAAC,CAAC,WAAjB;;QACA,CAAC,CAAE,EAAH,CAAM,CAAA,YAAa,WAAnB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;;QACA,CAAC,CAAE,EAAH;;AAAQ;UAAA,KAAA,MAAA;sIAA+B;UAA/B,CAAA;;YAAR,EAA6D,CAAE,WAAF,EAAe,EAAf,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,UAAjC,CAA7D;;MACA,CAAC,CAAC,MAAF,GAAW;;QACX,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;AACA,aAAO;IAVN,CAAA;IAYA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA,CAAA,EAAA;MAAI,OAAA,CAAQ,QAAR,EAAkB,0CAAlB;MACA,CAAA,GAAI,IAAI,GAAJ,CAAA;MACJ,IAAA,CAAK,QAAL,EAAe,CAAf;MACA,IAAA,CAAK,QAAL,EAAe,CAAC,CAAC,WAAjB;;QACA,CAAC,CAAE,EAAH,CAAM,CAAA,YAAa,WAAnB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;;QACA,CAAC,CAAE,EAAH;;AAAQ;UAAA,KAAA,MAAA;sIAA+B;UAA/B,CAAA;;YAAR,EAA6D,CAAE,KAAF,EAAS,KAAT,EAAgB,SAAhB,EAA2B,OAA3B,CAA7D;;MACA,CAAC,CAAC,MAAF,GAAW;;QACX,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;AACA,aAAO;IAVN,CAAA;IAYA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA,CAAA,EAAA;MAAI,OAAA,CAAQ,QAAR,EAAkB,0CAAlB;MACA,CAAA,GAAI,IAAI,GAAJ,CAAA;MACJ,IAAA,CAAK,QAAL,EAAe,CAAf;MACA,IAAA,CAAK,QAAL,EAAe,CAAC,CAAC,WAAjB;;QACA,CAAC,CAAE,EAAH,CAAM,CAAA,YAAa,WAAnB;;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;;QACA,CAAC,CAAE,EAAH;;AAAQ;UAAA,KAAA,MAAA;sIAA+B;UAA/B,CAAA;;YAAR,EAA6D,CAAE,KAAF,EAAS,KAAT,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,MAApC,CAA7D;;MACA,CAAC,CAAC,MAAF,GAAW;;QACX,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,MAAR,EAAgB,CAAhB;;AACA,aAAO;IAVN,CAAA;wCAYH;EAvE6B,EA1G/B;;;EAoLA,IAAC,CAAA,cAAD,GAAkB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAClB,QAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA;IAAE,CAAA,CAAE,QAAF,CAAA,GAA4B,OAAA,CAAQ,yBAAR,CAA5B;IACA,CAAA,CAAE,GAAF,EACE,GADF,EAEE,IAFF,EAGE,MAHF,EAIE,GAJF,EAKE,OALF,EAME,GANF,CAAA,GAMc,4BAAA,CAAA,CANd;IAQG,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,GAAP;MACA,CAAC,CAAC,IAAF,CAAO,EAAP;MACA,IAAA,CAAK,OAAL,EAAc,CAAd,EAHJ;;;QAKI,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAE,QAAF,EAAY,QAAZ,EAAsB,QAAtB,CAAF,CAAf;;AACA,aAAO;IAPN,CAAA;IASA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,GAAP;MACA,CAAC,CAAC,IAAF,CAAO,EAAP;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAE,QAAF,EAAY,QAAZ,EAAsB,QAAtB,CAAF,CAAf;;AACA,aAAO;IALN,CAAA;IAOA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,IAAP;MACA,CAAC,CAAC,IAAF,CAAO,EAAP;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAE,QAAF,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,QAA1C,EAAoD,QAApD,CAAF,CAAf;;AACA,aAAO;IALN,CAAA;IAOA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,MAAP;MACA,CAAC,CAAC,IAAF,CAAO,EAAP;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAE,WAAF,EAAe,cAAf,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,EAAiF,QAAjF,EAA2F,OAA3F,CAAF,CAAf;;AACA,aAAO;IALN,CAAA;IAOA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,GAAP;MACA,CAAC,CAAC,IAAF,CAAO,EAAP;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAE,KAAF,EAAS,KAAT,EAAgB,OAAhB,CAAF,CAAf;;AACA,aAAO;IALN,CAAA;IAOA,CAAA,QAAA,CAAA,CAAA,EAAA;AACL,UAAA;MAAI,CAAA,GAAI,IAAI,QAAJ,CAAA;MACJ,CAAC,CAAC,IAAF,CAAO,OAAP;MACA,CAAC,CAAC,IAAF,CAAO,CAAP;MACA,CAAC,CAAC,IAAF,CAAO,CAAP;MACA,CAAC,CAAC,IAAF,CAAO,CAAP;;QACA,CAAC,CAAE,EAAH,CAAM,CAAC,CAAC,GAAF,CAAA,CAAN,EAAe,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAAf;;AACA,aAAO;IAPN,CAAA;wCASH;EAxDgB,EApLlB;;;EA+OA,IAAC,CAAA,gDAAD,GAAoD,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACpD,QAAA,QAAA,EAAA,WAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA;IAAE,CAAA,CAAE,QAAF,EACE,WADF,CAAA,GACkB,OAAA,CAAQ,yBAAR,CADlB,EAAF;;IAGQ,IAAN,MAAA,EAAA,QAAgB,YAAhB;MACE,WAAa,CAAA,CAAA;aACX,CAAA;QACA,IAAC,CAAA,GAAD,GAAO;AACP,eAAO;MAHI;;MAIb,eAAiB,CAAA,CAAA;AACrB,YAAA;AAAM,eAAO,cAAA,GAAiB,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA,EAAA;;iBAEtB,IAAA,CAAK,CAAA,IAAK,CAAV;QAFsB;MADT;;IALnB,EAHF;;IAaQ,IAAN,MAAA,EAAA,QAAgB,SAAhB;MACE,WAAa,CAAA,CAAA;aACX,CAAA;QACA,IAAC,CAAA,GAAD,GAAO;QACP,IAAC,CAAA,IAAD,CAAM,IAAI,CAAJ,CAAA,CAAN;AACA,eAAO;MAJI;;IADf,EAbF;;IAoBE,CAAA,GAAI,IAAI,CAAJ,CAAA;IACJ,CAAC,CAAC,IAAF,CAAO,EAAP;IACA,CAAC,CAAC,IAAF,CAAO,EAAP;IACA,MAAA,GAAS,CAAC,CAAC,YAAF,CAAA;;MACT,CAAC,CAAE,EAAH,CAAM,MAAN,EAAc,CAAE,IAAF,EAAQ,KAAR,CAAd;;wCAEA;EA3BkD,EA/OpD;;;EA8QA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA,EAAA;;;;;;aAMhC,IAAA,CAAK,IAAL;IANgC,CAAA,IAAlC;;;EA9QA;;AAAA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MOONRIVER/TESTS/MODULES'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\ntypes                     = new ( require '../../../apps/intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate }              = types\n# H                         = require './helpers'\n# after                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n# { DATOM }                 = require '../../../apps/datom'\n# { new_datom\n#   lets\n#   stamp     }             = DATOM\n\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_modular_pipeline_classes = ->\n  { Pipeline\n    Transformer } = require '../../../apps/moonriver'\n\n  #=========================================================================================================\n  class P_1 extends Transformer\n\n    $p_1_1: -> p_1_1 = ( d, send ) -> help '$p_1_1'; d.push '$p_1_1'; send d\n    $p_1_2: -> p_1_2 = ( d, send ) -> help '$p_1_2'; d.push '$p_1_2'; send d\n    $p_1_3: -> p_1_3 = ( d, send ) -> help '$p_1_3'; d.push '$p_1_3'; send d\n\n  #=========================================================================================================\n  class P_2 extends Transformer\n\n    $p_2_1: -> p_2_1 = ( d, send ) -> help '$p_2_1'; d.push '$p_2_1'; send d\n    $p_2_2: -> p_2_2 = ( d, send ) -> help '$p_2_2'; d.push '$p_2_2'; send d\n    $p_2_3: -> p_2_3 = ( d, send ) -> help '$p_2_3'; d.push '$p_2_3'; send d\n\n  #=========================================================================================================\n  class P_12 extends Transformer\n    p_1: new P_1()\n    p_2: new P_2()\n\n  #=========================================================================================================\n  p_4 = new Pipeline()\n  p_4.push p_4_1 = ( d, send ) -> help 'p_4_1'; d.push 'p_4_1'; send d\n\n  #=========================================================================================================\n  class P_12_x extends Transformer\n\n    #-------------------------------------------------------------------------------------------------------\n    $: [\n      direct_fn     =    ( d, send ) -> help 'direct_fn';     d.push 'direct_fn';     send d\n      $indirect_fn  = -> ( d, send ) -> help '$indirect_fn';  d.push '$indirect_fn';  send d\n      new P_1()\n      P_2\n      p_4\n      ]\n\n  #=========================================================================================================\n  class P_3 extends Transformer\n    foo: ( d, send ) -> d.push 'foo'; send d\n    bar: ( d, send ) -> d.push 'bar'; send d\n    baz: p_4_1\n\n  #=========================================================================================================\n  class P_empty extends Transformer\n\n  #=========================================================================================================\n  class P_5 extends Transformer\n    foo: ( d, send ) -> d.push 'foo'; send d\n    bar: ( d, send ) -> d.push 'bar'; send d\n    empty: P_empty\n    baz: p_4_1\n\n  #=========================================================================================================\n  class P_6 extends P_5\n    last: ( d ) ->\n\n  #=========================================================================================================\n  return {\n    P_1\n    P_2\n    P_12\n    P_12_x\n    P_3\n    P_empty\n    P_5\n    P_6 }\n\n#-----------------------------------------------------------------------------------------------------------\n@can_iterate_over_transforms = ( T, done ) ->\n  { Pipeline\n    Transformer } = require '../../../apps/moonriver'\n  { P_1\n    P_2\n    P_12\n    P_12_x\n    P_3\n    P_empty\n    P_5\n    P_6             } = get_modular_pipeline_classes()\n  #.........................................................................................................\n  do ->\n    whisper '^46-1^', '————————————————————————————————————————'\n    p = new P_empty()\n    info '^46-1^', p\n    T?.ok p instanceof Transformer\n    T?.eq p._transforms, []\n    T?.eq p.length, 0\n    T?.eq ( t.name ? t.constructor?.name ? '???' for t from p ), []\n    p.length = 0\n    T?.eq p.length, 0\n    return null\n  #.........................................................................................................\n  do ->\n    whisper '^46-1^', '————————————————————————————————————————'\n    p = new P_1()\n    info '^46-1^', p\n    T?.ok p instanceof Transformer\n    T?.eq p.length, 3\n    T?.eq ( t.name ? t.constructor?.name ? '???' for t from p ), [ 'p_1_1', 'p_1_2', 'p_1_3' ]\n    p.length = 0\n    T?.eq p.length, 0\n    return null\n  #.........................................................................................................\n  do ->\n    whisper '^46-1^', '————————————————————————————————————————'\n    p = new P_12_x()\n    info '^46-1^', p\n    info '^46-1^', p._transforms\n    T?.ok p instanceof Transformer\n    T?.eq p.length, 5\n    T?.eq ( t.name ? t.constructor?.name ? '???' for t from p ), [ 'direct_fn', '', 'P_1', 'P_2', 'Pipeline' ]\n    p.length = 0\n    T?.eq p.length, 0\n    return null\n  #.........................................................................................................\n  do ->\n    whisper '^46-1^', '————————————————————————————————————————'\n    p = new P_5()\n    info '^46-1^', p\n    info '^46-1^', p._transforms\n    T?.ok p instanceof Transformer\n    T?.eq p.length, 4\n    T?.eq ( t.name ? t.constructor?.name ? '???' for t from p ), [ 'foo', 'bar', 'P_empty', 'p_4_1' ]\n    p.length = 0\n    T?.eq p.length, 0\n    return null\n  #.........................................................................................................\n  do ->\n    whisper '^46-1^', '————————————————————————————————————————'\n    p = new P_6()\n    info '^46-1^', p\n    info '^46-1^', p._transforms\n    T?.ok p instanceof Transformer\n    T?.eq p.length, 5\n    T?.eq ( t.name ? t.constructor?.name ? '???' for t from p ), [ 'foo', 'bar', 'P_empty', 'p_4_1', 'last' ]\n    p.length = 0\n    T?.eq p.length, 0\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@transformers_1 = ( T, done ) ->\n  { Pipeline }              = require '../../../apps/moonriver'\n  { P_1\n    P_2\n    P_12\n    P_12_x\n    P_3\n    P_empty\n    P_5     } = get_modular_pipeline_classes()\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_1\n    p.send []\n    urge '^234^', p\n    # urge '^234^', p.run()\n    T?.eq p.run(), [ [ '$p_1_1', '$p_1_2', '$p_1_3' ] ]\n    return null\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_2\n    p.send []\n    T?.eq p.run(), [ [ '$p_2_1', '$p_2_2', '$p_2_3' ] ]\n    return null\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_12\n    p.send []\n    T?.eq p.run(), [ [ '$p_1_1', '$p_1_2', '$p_1_3', '$p_2_1', '$p_2_2', '$p_2_3' ] ]\n    return null\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_12_x\n    p.send []\n    T?.eq p.run(), [ [ 'direct_fn', '$indirect_fn', '$p_1_1', '$p_1_2', '$p_1_3', '$p_2_1', '$p_2_2', '$p_2_3', 'p_4_1' ] ]\n    return null\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_5\n    p.send []\n    T?.eq p.run(), [ [ 'foo', 'bar', 'p_4_1' ] ]\n    return null\n  #.........................................................................................................\n  do ->\n    p = new Pipeline()\n    p.push P_empty\n    p.send 1\n    p.send 2\n    p.send 3\n    T?.eq p.run(), [ 1, 2, 3, ]\n    return null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@transformers_methods_called_with_current_context = ( T, done ) ->\n  { Pipeline\n    Transformer } = require '../../../apps/moonriver'\n  #.........................................................................................................\n  class X extends Transformer\n    constructor: ->\n      super()\n      @foo = 'class X'\n      return undefined\n    $unbound_method: ->\n      return unbound_method = ( d, send ) ->\n        # debug '^98-1^', @constructor.name\n        send d ** 3\n  #.........................................................................................................\n  class Y extends Pipeline\n    constructor: ->\n      super()\n      @foo = 'class Y'\n      @push new X()\n      return undefined\n  #.........................................................................................................\n  y = new Y()\n  y.send 12\n  y.send 34\n  result = y.run_and_stop()\n  T?.eq result, [ 1728, 39304 ]\n  #.........................................................................................................\n  done?()\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @transformers_1()\n  # @transformers_1()\n  # test @transformers_1\n  # @transformers_methods_called_with_current_context()\n  # @can_iterate_over_transforms()\n  test @\n  # test @can_iterate_over_transforms\n  # test @transformers_methods_called_with_current_context\n"
  ]
}