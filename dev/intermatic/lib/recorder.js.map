{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/recorder.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/INTERMATIC/RECORDER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nlog                       = urge\n#...........................................................................................................\ntest                      = require 'guy-test'\nPATH                      = require 'path'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  declare\n  type_of }               = types.export()\n{ freeze\n  lets }                  = require 'letsfreezethat'\n# ITX                       = require '../../../apps/intertext'\n{ to_width\n  width_of }              = require 'to-width'\n\n\n#-----------------------------------------------------------------------------------------------------------\n# declare\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\nclass Recorder\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( fsm ) ->\n    # validate.fsm fsm\n    @fsm    = fsm\n    tnames  = Object.keys @fsm.triggers\n    @cstate = { @fsm.cstate..., }\n    @_compile_state_handlers @fsm\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_state_handlers: ( fsm ) ->\n    @_compile_state_handler fsm\n    @_compile_state_handlers sub_fsm for sub_fsm in fsm.fsms\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _compile_state_handler: ( fsm ) ->\n    # is_first    = true\n    self = @\n    if ( original_handler = fsm.enter.any )?\n      handler = ( s, P... ) ->\n        original_handler s, P...\n        self.render_state @path, s, P...\n    else\n      handler = ( s, P... ) ->\n        self.render_state @path, s, P...\n    fsm.enter.any = handler.bind fsm\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  render_state: ( path, s, P... ) ->\n    @cstate = { @fsm.cstate..., }\n    whisper '^27776^', path, s.via, @fsm.cstate\n    debug @cstate\n    return null\n\n\n############################################################################################################\nmodule.exports = Recorder\n\n\n\n############################################################################################################\nif module is require.main then do =>\n\n\n\n\n\n"
  ]
}