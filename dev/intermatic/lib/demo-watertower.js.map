{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-watertower.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/WATERTOWER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nlog                       = urge\n#...........................................................................................................\ntest                      = require 'guy-test'\nPATH                      = require 'path'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  equals\n  validate\n  declare\n  type_of }               = types.export()\n{ freeze\n  lets }                  = require 'letsfreezethat'\n{ Intermatic, }           = require '../../../apps/intermatic'\nRecorder                  = require './recorder'\nafter                     = ( dts, f ) -> setTimeout  f, dts * 1000\nevery                     = ( dts, f ) -> setInterval f, dts * 1000\nsleep                     = ( dts ) -> new Promise ( done ) -> after dts, done\n\n\n#===========================================================================================================\n# TYPES\n#-----------------------------------------------------------------------------------------------------------\n# declare 'toolbox_button_cfg', tests:\n#   \"x is an object\": ( x ) -> @isa.object x\n\n#===========================================================================================================\n# FACTORIES\n#-----------------------------------------------------------------------------------------------------------\nnew_watertower_fsm = ->\n  #---------------------------------------------------------------------------------------------------------\n  barrel =\n    moves:\n      start:  [ 'void',   'active', ]\n      stop:   [ 'active', 'stopped', ]\n    data:\n      max_level:  110 # maximum fill level in ℓ\n      min_level:   90 # minimum fill level in ℓ\n      level:        0 # current fill level in ℓ\n  #---------------------------------------------------------------------------------------------------------\n  inlet =\n    moves:\n      start:  [ 'void',   'active', ]\n      stop:   [ 'active', 'stopped', ]\n    data:\n      max_rate:   10 # maximum water filling rate in ℓ / s\n      min_rate:    0 # minimum water filling rate in ℓ / s\n      rate:        0 # current water filling rate in ℓ / s\n  #---------------------------------------------------------------------------------------------------------\n  outlet =\n    moves:\n      start:  [ 'void',   'active', ]\n      stop:   [ 'active', 'stopped', ]\n    data:\n      max_rate:   20 # maximum water outflow rate in ℓ / s\n      min_rate:    0 # minimum water outflow rate in ℓ / s\n      rate:        0 # current water outflow rate in ℓ / s\n  #---------------------------------------------------------------------------------------------------------\n  fsmd =\n    name: 'tower'\n    moves:\n      start:  [ 'void',   'active', ]\n      stop:   [ 'active', 'stopped', ]\n    cascades: [ 'start', 'stop', ]\n    fsms: { barrel, inlet, outlet, }\n  #---------------------------------------------------------------------------------------------------------\n  return new Intermatic fsmd\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo_watertower = ->\n  fsm       = new_watertower_fsm()\n  recorder  = new Recorder fsm\n  # debug '^3334^', fsm.barrel.EXP_dstate\n  # debug '^3334^', fsm.inlet.EXP_dstate\n  # debug '^3334^', fsm.outlet.EXP_dstate\n  # echo CND.inspect fsm.EXP_dstate\n  help fsm.EXP_dstate\n  info 'fsm.start()';                   fsm.start()\n  help fsm.EXP_dstate\n  #---------------------------------------------------------------------------------------------------------\n  return null\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nnew_regulator_fsm = ->\n  #---------------------------------------------------------------------------------------------------------\n  fsmd =\n    name: 'regulator'\n    moves:\n      start:  [ 'void',       'idle',         ]\n      stop:   [ 'idle',       'stopped',      ]\n      tick:   [ 'idle',       'idle',         ]\n      tick:   [ 'growing',    'growing',      ]\n      tick:   [ 'declare',    'declare',      ]\n      set:    [ 'idle',       'idle',         ]\n      inc:    [ 'idle',       'growing',      ]\n      # inc:    [ 'growing',    'growing',      ]\n      set:    [ 'growing',    'idle',         ]\n      dec:    [ 'idle',       'shrinking',    ]\n      # dec:    [ 'shrinking',  'shrinking',    ]\n      chill:  [ 'any',        'idle',         ]\n    #.......................................................................................................\n    data:\n      tps:        5 # ticks per second\n      target:     0\n      value:      0\n    #.......................................................................................................\n    after:\n      # #.....................................................................................................\n      # tick: ( d ) -> whisper '^332^', \"tick\", d\n      #.....................................................................................................\n      inc: ( timer, handler ) ->\n        @data.value++\n        # urge '^44445^', @EXP_dstate\n        if @data.value >= @data.target\n          clearInterval timer\n          @chill()\n          handler()\n      #.....................................................................................................\n      dec: ( timer, handler ) ->\n        @data.value--\n        # urge '^44445^', @EXP_dstate\n        if @data.value <= @data.target\n          clearInterval timer\n          @chill()\n          handler()\n      #.....................................................................................................\n      set: ( target, handler ) ->\n        @stop_all_timers()\n        @data.target  = target\n        delta         = Math.sign target - @data.value\n        warn '^22332^', @move, @EXP_dstate\n        #...................................................................................................\n        if @data.value is target\n          return handler()\n        if @data.value < target then  timer = every 1 / @data.tps, => @inc timer, handler\n        else                          timer = every 1 / @data.tps, => @dec timer, handler\n        #...................................................................................................\n        @timers.push timer\n        return null\n    #.......................................................................................................\n    stop_all_timers: ->\n      for timer in @timers\n        clearInterval timer\n      return null\n    timers: []\n  #---------------------------------------------------------------------------------------------------------\n  return new Intermatic fsmd\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_regulator = ->\n  fsm       = new_regulator_fsm()\n  # recorder  = new Recorder fsm\n  prv_value = null\n  every 0.25, ->\n    return if fsm.data.value is prv_value\n    prv_value = fsm.data.value\n    help fsm.EXP_dstate\n  fsm.start()\n  fsm.scoobydoo = ( verb, P... ) ->\n    p = ( require 'util' ).promisify\n    ( p @[ verb ] ) P...\n  # await ( p fsm.set ) 10\n  fsm.scoobydoo 'set', 10\n  after 1, -> fsm.scoobydoo 'set', 3\n  after 5, -> fsm.scoobydoo 'set', 8\n  # ( p fsm.set ) 10\n  info fsm.EXP_dstate\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await demo_watertower()\n  # await demo_regulator()\n\n\n\n\n"
  ]
}