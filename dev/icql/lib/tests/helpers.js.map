{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../../src/tests/helpers.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;;;;;;;EAqBA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR,EAtB5B;;;EAyBA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,YAAY,KAAd,CAAA;AACrB,QAAA,CAAA,EAAA;IAAE,CAAA,GAAoB,CAAA;IACpB,CAAC,CAAC,SAAF,GAAoB,OAAA,CAAQ,gBAAR;IACpB,CAAC,CAAC,OAAF,GAAoB;IACpB,CAAC,CAAC,SAAF,GAAoB,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,mCAArB,CAAb;IACpB,IAAG,SAAH;AACE;QACE,CAAE,OAAA,CAAQ,IAAR,CAAF,CAAgB,CAAC,UAAjB,CAA4B,CAAC,CAAC,OAA9B,EADF;OAEA,cAAA;QAAM;QACJ,KAAmB,CAAE,KAAK,CAAC,IAAN,KAAc,QAAhB,CAAnB;UAAA,MAAM,MAAN;SADF;OAHF;;AAKA,WAAO;EAVY,EAzBrB;;;EAsCA,IAAC,CAAA,kBAAD,GAAsB,QAAA,CAAE,IAAF,CAAA;AACtB,QAAA;AAAE;MAAI,EAAE,CAAC,UAAH,CAAc,IAAd,EAAJ;KAAuB,cAAA;MAAM;MAC3B,IAAU,KAAK,CAAC,IAAN,KAAc,QAAxB;AAAA,eAAA;;MACA,MAAM,MAFe;;AAGvB,WAAO;EAJa;AAtCtB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL/TESTS/HELPERS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n# #...........................................................................................................\n# test                      = require 'guy-test'\n# jr                        = JSON.stringify\n# { inspect, }              = require 'util'\n# xrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n# xrpr2                     = ( x ) -> inspect x, { colors: yes, breakLength: 20, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\n\n#-----------------------------------------------------------------------------------------------------------\n@get_icql_settings = ( remove_db = false ) ->\n  R                 = {}\n  R.connector       = require 'better-sqlite3'\n  R.db_path         = '/tmp/icql.db'\n  R.icql_path       = PATH.resolve PATH.join __dirname, '../../../../assets/icql/test.icql'\n  if remove_db\n    try\n      ( require 'fs' ).unlinkSync R.db_path\n    catch error\n      throw error unless ( error.code is 'ENOENT' )\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@try_to_remove_file = ( path ) ->\n  try FS.unlinkSync path catch error\n    return if error.code is 'ENOENT'\n    throw error\n  return null\n\n\n"
  ]
}