

-- \set ECHO queries

/* ###################################################################################################### */
\ir './_trm.sql'
-- \ir './set-signal-color.sql'
-- \ir './test-begin.sql'
-- \pset pager on
\timing off
\set filename datamill/000-first.sql
\set signal :green

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
drop schema if exists DEMO cascade; create schema DEMO;



-- =========================================================================================================
-- DOMAINS
-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 2 }———:reset
-- ### TAINT use intershop.ptv variables to make configurable?
create domain DEMO.positive_integer as integer  check ( value > 0                   );
create domain DEMO.nonempty_text    as text     check ( value ~ '.+'                );
-- create domain DEMO.absolute_path    as text     check ( DEMO.test_absolute_path( value ) );
-- create domain DEMO.topic            as text     check ( DEMO.test_topic( value ) );
-- create domain DEMO.focus            as text     check ( DEMO.test_focus( value ) );

-- comment on domain DEMO.absolute_path is 'Data type for FlowMatic paths (qualified names); must be either a
-- slash (for the root element) or else start with a slash, followed by at least one character other than a
-- slash, not contain any slash directly followed by another slash, and not end in a slash.';


-- =========================================================================================================
--
-- ---------------------------------------------------------------------------------------------------------
--     partid    bigint                  generated by default as identity primary key,

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 3 }———:reset
create table DEMO.datoms (
  -- doc         integer     not null references
  -- dsk
  -- dsnr
  vnr         integer[]   not null,
  key         text        not null,
  atr         jsonb,      -- consider to use hstore
  stamped     boolean     not null default false,
  primary key ( vnr ) );

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 5 }———:reset
create function DEMO.on_before_update_datoms() returns trigger language plpgsql as $$ begin
  raise sqlstate 'IMM04' using message = format( 'illegal to update record %s', old ); end; $$;

create trigger on_before_update_datoms before update on DEMO.datoms
  for each row when ( old is distinct from new and (
    ( old.stamped = true and new.stamped = false ) or IMMUTABLE.record_has_changed( old, new ) ) )
  execute procedure DEMO.on_before_update_datoms();


-- =========================================================================================================
--
-- ---------------------------------------------------------------------------------------------------------
select * from CATALOG.catalog where schema = 'demo';
select * from DEMO.datoms;

/* ###################################################################################################### */
\echo :red ———{ :filename 15 }———:reset
\quit







