{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-tags.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN/TESTS/TAGS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nH                         = require './helpers'\n# after                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n{ DATOM }                 = require '../../../apps/datom'\n{ new_datom\n  lets\n  stamp     }             = DATOM\n\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_1 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'foo <!-- comment --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'foo <!-- comment \\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment' }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'foo <!-- comment \\\\\\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:escchr', value: '\\\\', x: { chr: '\\n' } }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:gt', value: '>' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar/>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar/xyz/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar>xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar/>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar/>xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar/xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar/xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar/xyz'/>\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar/xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<i/>xyz/>', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'i' }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:slash', value: '/' }, { mk: 'plain:other', value: '>' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<i/xyz/>', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'i' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:slash', value: '/' }, { mk: 'plain:other', value: '>' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar/>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar/>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar/xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar/xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_lexer } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # lexer   = new_tag_lexer()\n      lexer   = new Hypedown_lexer()\n      result  = []\n      for token from lexer.walk probe\n        d = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n        result.push d\n      # H.tabulate ( rpr probe ), result\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_2 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    # [ 'abc', \"plain:nl'',plain:nl'',html:parbreak'',html:text'<p>',plain:other'abc',html:text'abc',plain:nl'\\\\n',html:text'\\\\n'\", null ]\n    [ 'abc<div>def</>xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:o_ltr'<div>',html:text'def',tag:c_lsr'</>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div\\\\>xyz', \"html:parbreak'',html:text'<p>',html:text'abc'\", null ]\n    # [ 'abc<div/>xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:stag'<div/>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div/',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div k=v/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div k=v/',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div k=v/def/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div k=v/',html:text'def',html:text'xyz',html:text'\\\\n'\", null ]\n\n    # [ '1<a/2<b/3<i>4</i>5/6/7', \"html:parbreak'',html:text'<p>',html:text'abc',raw-html:tag'<div>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ '1</i>2', \"html:parbreak'',html:text'<p>',html:text'abc',raw-html:tag'<div>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div#c1 foo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slash'/',tag:ntag'<div#c1 foo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slash'/',tag:ntag'<div#c1\\\\nfoo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1 foo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:gt'>',tag:otag'<div#c1 foo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:gt'>',tag:otag'<div#c1\\\\nfoo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1 foo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slashgt'/>',tag:stag'<div#c1 foo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slashgt'/>',tag:stag'<div#c1\\\\nfoo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_parser } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      parser      = new Hypedown_parser()\n      result      = []\n      result_rpr  = []\n      for line from GUY.str.walk_lines probe\n        parser.send line\n        for token from parser.walk()\n          # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n          result.push H.excerpt_token token\n          result_rpr.push \"#{token.mk}#{rpr token.value}\" unless token.$stamped\n      text = ( t.value for t in result when not t.$stamped ).join '|'\n      # debug '^3534^', rpr text\n      H.tabulate ( rpr probe ), result\n      # H.tabulate ( rpr probe ), ( t for t in result when not t.$stamped )\n      resolve result_rpr.join ','\n      # resolve null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@parse_closing_tags = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '1</i>2', \"html:parbreak'',html:text'<p>',html:text'abc',raw-html:tag'<div>',html:text'xyz',html:text'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_parser } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      parser      = new Hypedown_parser()\n      result      = []\n      result_rpr  = []\n      for line from GUY.str.walk_lines probe\n        parser.send line\n        for token from parser.walk()\n          # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n          result.push H.excerpt_token token\n          result_rpr.push \"#{token.mk}#{rpr token.value}\" unless token.$stamped\n      text = ( t.value for t in result when not t.$stamped ).join '|'\n      debug '^3534^', rpr text\n      H.tabulate ( rpr probe ), result\n      H.tabulate ( rpr probe ), ( t for t in result when not t.$stamped )\n      resolve result_rpr.join ','\n      # resolve null\n  #.........................................................................................................\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_tags_2_for_profiling = ( T, done ) ->\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [ 'abc<div#c1 foo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slash'/',tag:ntag'<div#c1 foo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slash'/',tag:ntag'<div#c1\\\\nfoo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1 foo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:gt'>',tag:otag'<div#c1 foo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:gt'>',tag:otag'<div#c1\\\\nfoo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1 foo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slashgt'/>',tag:stag'<div#c1 foo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slashgt'/>',tag:stag'<div#c1\\\\nfoo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     lexer       = new_tag_lexer()\n#     parser      = new_parser lexer\n#     for _ in [ 1 .. 100 ]\n#     # for _ in [ 1 ]\n#       result      = []\n#       result_rpr  = []\n#       for line from GUY.str.walk_lines probe\n#         parser.send line\n#         for token from parser.walk()\n#           # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n#           result.push token\n#           result_rpr.push \"#{token.mk}#{rpr token.value}\"\n#       urge '^34-1^', Date.now(), result_rpr\n#       # H.tabulate ( rpr probe ), result\n#   #.........................................................................................................\n#   done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@htmlish_tag_types = ( T, done ) ->\n  _HTMLISH        = ( require 'paragate/lib/htmlish.grammar' ).new_grammar { bare: true, }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '<a>', [ \"otag'<a>'{}\" ], null ]\n    [ '<a b=c>', [ \"otag'<a b=c>'{ b: 'c' }\" ], null ]\n    [ '<a b=c/>', [ \"stag'<a b=c/>'{ b: 'c' }\" ], null ]\n    [ '<a b=c/', [ \"ntag'<a b=c/'{ b: 'c' }\" ], null ]\n    [ '</a>', [ \"ctag'</a>'{}\" ], null ]\n    [ '<br>', [ \"otag'<br>'{}\" ], null ]\n    [ '<br/>', [ \"stag'<br/>'{}\" ], null ]\n    [ '<i/', [ \"ntag'<i/'{}\" ], null ]\n    [ '<i/>', [ \"stag'<i/>'{}\" ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result      = _HTMLISH.parse probe\n      result_rpr  = ( \"#{t.type}#{rpr t.text}#{rpr t.atrs ? {}}\" for t in result )\n      # H.tabulate ( rpr probe ), result\n      resolve result_rpr\n      # resolve undefined\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@xncrs = ( T, done ) ->\n  { Hypedown_lexer } = require '../../../apps/hypedown'\n  probes_and_matchers = [\n    [ '&amp', \"plain:forbidden'&',plain:other'amp',plain:nl'\\\\n'\", null ]\n    [ '&amp what', \"plain:forbidden'&',plain:other'amp what',plain:nl'\\\\n'\", null ]\n    [ '&amp\\n', \"plain:forbidden'&',plain:other'amp',plain:nl'\\\\n',plain:nl'\\\\n'\", null ]\n    [ '&amp;', \"plain:amp'&',xncr:name'amp',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&amp\\\\;', \"plain:forbidden'&',plain:other'amp',plain:escchr'\\\\\\\\;',plain:nl'\\\\n'\", null ]\n    [ '&amp;\\n', \"plain:amp'&',xncr:name'amp',xncr:sc';',plain:nl'\\\\n',plain:nl'\\\\n'\", null ]\n    [ '&xamp;', \"plain:amp'&',xncr:name'xamp',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&123;', \"plain:amp'&',xncr:name'123',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&x123;', \"plain:amp'&',xncr:name'x123',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&#123;', \"plain:amp'&',xncr:dec'#123',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&#x123;', \"plain:amp'&',xncr:hex'#x123',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ '&jzr#123;', \"plain:amp'&',xncr:csg'jzr',xncr:dec'#123',xncr:sc';',plain:nl'\\\\n'\", null ]\n    [ 'some <b/&jzr#x123;&jzr#x124;/ text', \"plain:other'some ',plain:lt'<',tag:text'b',tag:slash'/',plain:amp'&',xncr:csg'jzr',xncr:hex'#x123',xncr:sc';',plain:amp'&',xncr:csg'jzr',xncr:hex'#x124',xncr:sc';',plain:slash'/',plain:ws' ',plain:other'text',plain:nl'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      lexer       = new Hypedown_lexer()\n      result      = []\n      for token from lexer.walk probe\n        result.push token\n      H.tabulate ( rpr probe ), result\n      result_rpr = ( \"#{token.mk}#{rpr token.value}\" for token in result ).join ','\n      # info '^94-1^', result_rpr\n      resolve result_rpr\n  #.........................................................................................................\n  done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @tags_1\n  # @tags_2()\n  test @tags_2\n  # test @parse_closing_tags\n  # @_tags_2_for_profiling()\n  # test @htmlish_tag_types\n  # test @xncrs\n  # test @parse_codespans_and_single_star\n  # test @parse_md_stars_markup\n\n"
  ]
}