{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-tags.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN/TESTS/TAGS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nH                         = require './helpers'\n# after                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n{ DATOM }                 = require '../../../apps/datom'\n{ new_datom\n  lets\n  stamp     }             = DATOM\n\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_1 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n      [ 'foo <!-- comment --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'comment:$border', value: '' }, { mk: 'comment:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'foo <!-- comment \\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'comment:$border', value: '' }, { mk: 'comment:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment' }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'foo <!-- comment \\\\\\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'comment:$border', value: '' }, { mk: 'comment:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:escchr', value: '\\\\' }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=bar>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:gt', value: '>' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=bar/>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=bar/xyz/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:$border', value: '' }, { mk: 'tag:c_s', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar/>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar/xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ \"abc<div#c1 foo='bar>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:$border', value: '' }, { mk: 'tag:sq:text', value: 'bar>xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ \"abc<div#c1 foo='bar/>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:$border', value: '' }, { mk: 'tag:sq:text', value: 'bar/>xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ \"abc<div#c1 foo='bar/xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:$border', value: '' }, { mk: 'tag:sq:text', value: 'bar/xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ \"abc<div#c1 foo='bar/xyz'/>\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:$border', value: '' }, { mk: 'tag:sq:text', value: 'bar/xyz' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<i/>xyz/>', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'i' }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:$border', value: '' }, { mk: 'tag:c_s', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: '>' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ 'abc<i/xyz/>', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'i' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:$border', value: '' }, { mk: 'tag:c_s', value: '/' }, { mk: 'plain:$border', value: '' }, { mk: 'plain:other', value: '>' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n      [ \"\"\"abc<div#c1 foo=\"bar>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: \"bar>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n      [ \"\"\"abc<div#c1 foo=\"bar/>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: \"bar/>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n      [ \"\"\"abc<div#c1 foo=\"bar/xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: \"bar/xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"' }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar/>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"' }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n      [ 'abc<div#c1 foo=\"bar/xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'tag:$border', value: '' }, { mk: 'tag:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:$border', value: '' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"' }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_lexer } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # lexer   = new_tag_lexer()\n      lexer   = new Hypedown_lexer()\n      result  = []\n      for token from lexer.walk probe\n        d = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n        result.push d\n      # H.tabulate ( rpr probe ), result\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_2 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    # [ 'abc', \"plain:nl'',plain:nl'',html:parbreak'',html:text'<p>',plain:other'abc',html:text'abc',plain:nl'\\\\n',html:text'\\\\n'\", null ]\n    [ 'abc<div>def</>xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:o_ltr'<div>',html:text'def',tag:c_lsr'</>',html:text'xyz',html:text'\\\\n'\", null ]\n    [ 'abc<div/def/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:o_lts'<div/',html:text'def',tag:c_s'/',html:text'xyz',html:text'\\\\n'\", null ]\n    [ '1<a/2<b/3<i>4</i>5/6/7', \"html:parbreak'',html:text'<p>',html:text'1',tag:o_lts'<a/',html:text'2',tag:o_lts'<b/',html:text'3',tag:o_ltr'<i>',html:text'4',tag:c_lstr'</i>',html:text'5',tag:c_s'/',html:text'6',tag:c_s'/',html:text'7',html:text'\\\\n'\", null ]\n    [ 'abc<div#c1 foo=bar/xyz/', \"html:parbreak'',html:text'<p>',html:text'abc',tag:o_lts'<div#c1 foo=bar/',html:text'xyz',tag:c_s'/',html:text'\\\\n'\", null ]\n    # [ 'abc<div\\\\>xyz', \"html:parbreak'',html:text'<p>',html:text'abc'\", null ]\n    # [ 'abc<div/>xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:stag'<div/>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div/',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div k=v/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div k=v/',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div k=v/def/xyz', \"html:parbreak'',html:text'<p>',html:text'abc',tag:ntag'<div k=v/',html:text'def',html:text'xyz',html:text'\\\\n'\", null ]\n\n    # [ '1</i>2', \"html:parbreak'',html:text'<p>',html:text'abc',raw-html:tag'<div>',html:text'xyz',html:text'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slash'/',tag:ntag'<div#c1\\\\nfoo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1 foo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:gt'>',tag:otag'<div#c1 foo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:gt'>',tag:otag'<div#c1\\\\nfoo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1 foo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slashgt'/>',tag:stag'<div#c1 foo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    # [ 'abc<div#c1\\nfoo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slashgt'/>',tag:stag'<div#c1\\\\nfoo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_parser } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      parser      = new Hypedown_parser()\n      result      = []\n      result_rpr  = []\n      for line from GUY.str.walk_lines probe\n        parser.send line\n        for token from parser.walk()\n          # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n          result.push H.excerpt_token token\n          result_rpr.push \"#{token.mk}#{rpr token.value}\" unless token.$stamped\n      text = ( t.value for t in result when not t.$stamped ).join '|'\n      # debug '^3534^', rpr text\n      H.tabulate ( rpr probe ), result\n      H.tabulate ( rpr probe ), ( t for t in result when not t.$stamped )\n      resolve result_rpr.join ','\n      # resolve null\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@parse_closing_tags = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '1</i>2', \"html:parbreak'',html:text'<p>',html:text'1',tag:c_lstr'</i>',html:text'2',html:text'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  { Hypedown_parser } = require '../../../apps/hypedown'\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      parser      = new Hypedown_parser()\n      result      = []\n      result_rpr  = []\n      for line from GUY.str.walk_lines probe\n        parser.send line\n        for token from parser.walk()\n          # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n          result.push H.excerpt_token token if not token.$stamped\n          result_rpr.push \"#{token.mk}#{rpr token.value}\" unless token.$stamped\n      text = ( t.value for t in result when not t.$stamped ).join '|'\n      debug '^3534^', rpr text\n      H.tabulate ( rpr probe ), result\n      H.tabulate ( rpr probe ), ( t for t in result when not t.$stamped )\n      resolve result_rpr.join ','\n      # resolve null\n  #.........................................................................................................\n  done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_tags_2_for_profiling = ( T, done ) ->\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [ 'abc<div#c1 foo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slash'/',tag:ntag'<div#c1 foo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar/xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slash'/',tag:ntag'<div#c1\\\\nfoo=bar/',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1 foo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:gt'>',tag:otag'<div#c1 foo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:gt'>',tag:otag'<div#c1\\\\nfoo=bar>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1 foo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1 foo=bar',tag:slashgt'/>',tag:stag'<div#c1 foo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     [ 'abc<div#c1\\nfoo=bar/>xyz/', \"plain:other'abc',plain:lt'<',tag:text'div#c1',tag:nl'\\\\n',tag:text'foo=bar',tag:slashgt'/>',tag:stag'<div#c1\\\\nfoo=bar/>',plain:other'xyz',plain:slash'/',plain:nl'\\\\n'\", null ]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     lexer       = new_tag_lexer()\n#     parser      = new_parser lexer\n#     for _ in [ 1 .. 100 ]\n#     # for _ in [ 1 ]\n#       result      = []\n#       result_rpr  = []\n#       for line from GUY.str.walk_lines probe\n#         parser.send line\n#         for token from parser.walk()\n#           # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n#           result.push token\n#           result_rpr.push \"#{token.mk}#{rpr token.value}\"\n#       urge '^34-1^', Date.now(), result_rpr\n#       # H.tabulate ( rpr probe ), result\n#   #.........................................................................................................\n#   done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@htmlish_tag_types = ( T, done ) ->\n  _HTMLISH        = ( require 'paragate/lib/htmlish.grammar' ).new_grammar { bare: true, }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ '<a>', [ \"otag'<a>'{}\" ], null ]\n    [ '<a b=c>', [ \"otag'<a b=c>'{ b: 'c' }\" ], null ]\n    [ '<a b=c/>', [ \"stag'<a b=c/>'{ b: 'c' }\" ], null ]\n    [ '<a b=c/', [ \"ntag'<a b=c/'{ b: 'c' }\" ], null ]\n    [ '</a>', [ \"ctag'</a>'{}\" ], null ]\n    [ '<br>', [ \"otag'<br>'{}\" ], null ]\n    [ '<br/>', [ \"stag'<br/>'{}\" ], null ]\n    [ '<i/', [ \"ntag'<i/'{}\" ], null ]\n    [ '<i/>', [ \"stag'<i/>'{}\" ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result      = _HTMLISH.parse probe\n      result_rpr  = ( \"#{t.type}#{rpr t.text}#{rpr t.atrs ? {}}\" for t in result )\n      # H.tabulate ( rpr probe ), result\n      resolve result_rpr\n      # resolve undefined\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@xncrs = ( T, done ) ->\n  { Hypedown_lexer } = require '../../../apps/hypedown'\n  probes_and_matchers = [\n    [ '&amp', \"plain:forbidden'&',plain:other'amp',plain:nl'\\\\n'\", null ]\n    [ '&amp what', \"plain:forbidden'&',plain:other'amp what',plain:nl'\\\\n'\", null ]\n    [ '&amp\\n', \"plain:forbidden'&',plain:other'amp',plain:nl'\\\\n',plain:nl'\\\\n'\", null ]\n    [ '&amp;', \"xncr:$border'',xncr:amp'&',xncr:name'amp',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&amp\\\\;', \"plain:forbidden'&',plain:other'amp',plain:escchr'\\\\\\\\;',plain:nl'\\\\n'\", null ]\n    [ '&amp;\\n', \"xncr:$border'',xncr:amp'&',xncr:name'amp',xncr:sc';',plain:$border'',plain:nl'\\\\n',plain:nl'\\\\n'\", null ]\n    [ '&xamp;', \"xncr:$border'',xncr:amp'&',xncr:name'xamp',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&123;', \"xncr:$border'',xncr:amp'&',xncr:name'123',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&x123;', \"xncr:$border'',xncr:amp'&',xncr:name'x123',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&#123;', \"xncr:$border'',xncr:amp'&',xncr:dec'#123',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&#x123;', \"xncr:$border'',xncr:amp'&',xncr:hex'#x123',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ '&jzr#123;', \"xncr:$border'',xncr:amp'&',xncr:csg'jzr',xncr:dec'#123',xncr:sc';',plain:$border'',plain:nl'\\\\n'\", null ]\n    [ 'some <b/&jzr#x123;&jzr#x124;/ text', \"plain:other'some ',tag:$border'',tag:lt'<',tag:text'b',tag:slash'/',plain:$border'',xncr:$border'',xncr:amp'&',xncr:csg'jzr',xncr:hex'#x123',xncr:sc';',plain:$border'',xncr:$border'',xncr:amp'&',xncr:csg'jzr',xncr:hex'#x124',xncr:sc';',plain:$border'',plain:$border'',tag:c_s'/',plain:$border'',plain:ws' ',plain:other'text',plain:nl'\\\\n'\", null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      lexer       = new Hypedown_lexer()\n      result      = []\n      for token from lexer.walk probe\n        result.push token\n      # H.tabulate ( rpr probe ), result\n      result_rpr = ( \"#{t.mk}#{rpr t.value}\" for t in result ).join ','\n      # result_rpr = ( \"#{t.mk}#{rpr t.value}\" for t in result when not t.$stamped ).join ','\n      # info '^94-1^', result_rpr\n      resolve result_rpr\n  #.........................................................................................................\n  done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  test @tags_1\n  # @tags_2()\n  # test @tags_2\n  # test @parse_closing_tags\n  # @_tags_2_for_profiling()\n  # test @htmlish_tag_types\n  # test @xncrs\n  # test @parse_codespans_and_single_star\n  # test @parse_md_stars_markup\n\n"
  ]
}