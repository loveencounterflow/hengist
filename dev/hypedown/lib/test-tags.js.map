{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-tags.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN/TESTS/TAGS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nH                         = require '../../../lib/helpers'\n# after                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n{ DATOM }                 = require '../../../apps/datom'\n{ new_datom\n  lets\n  stamp     }             = DATOM\n\n#-----------------------------------------------------------------------------------------------------------\nnew_tag_lexer = ->\n  { Interlex } = require '../../../apps/intertext-lexer'\n  lexer = new Interlex { linewise: true, catchall_concat: true, reserved_concat: true, }\n  # lexer.add_lexeme { mode, tid: 'eol',      pattern: ( /$/u  ), }\n  #.........................................................................................................\n  new_escchr_descriptor = ( mode ) ->\n    create = ( token ) ->\n      token.x = { chr: '\\n', } unless ( token.x?.chr )?\n      return token\n    return { mode, tid: 'escchr', pattern: /\\\\(?<chr>.|$)/u, reserved: '\\\\', create, }\n  #.........................................................................................................\n  new_nl_descriptor = ( mode ) ->\n    ### TAINT consider to force value by setting it in descriptor (needs interlex update) ###\n    create = ( token ) ->\n      token.value = '\\n'\n      return token\n    return { mode, tid: 'nl', pattern: /$/u, create, }\n  #.........................................................................................................\n  do =>\n    mode = 'plain'\n    lexer.add_lexeme new_escchr_descriptor  mode\n    lexer.add_lexeme new_nl_descriptor      mode\n    lexer.add_lexeme { mode,  tid: 'ltbang',    jump: 'comment',  pattern: '<!--',  reserved: '<', }\n    lexer.add_lexeme { mode,  tid: 'lt',        jump: 'tag',      pattern: '<',     reserved: '<', }\n    lexer.add_lexeme { mode,  tid: 'ws',        jump: null,       pattern: /\\s+/u, }\n    lexer.add_catchall_lexeme { mode, tid: 'other', }\n    lexer.add_reserved_lexeme { mode, tid: 'forbidden', }\n  #.........................................................................................................\n  do =>\n    mode = 'tag'\n    lexer.add_lexeme new_escchr_descriptor  mode\n    lexer.add_lexeme new_nl_descriptor      mode\n    # lexer.add_lexeme { mode,  tid: 'tagtext',   jump: null,       pattern: ( /[^\\/>]+/u ), }\n    lexer.add_lexeme { mode,  tid: 'dq',        jump: 'tag:dq',   pattern: '\"',       reserved: '\"' }\n    lexer.add_lexeme { mode,  tid: 'sq',        jump: 'tag:sq',   pattern: \"'\",       reserved: \"'\" }\n    lexer.add_lexeme { mode,  tid: 'slashgt',   jump: '^',        pattern: '/>',      reserved: [ '>', '/', ] }\n    lexer.add_lexeme { mode,  tid: 'slash',     jump: '^',        pattern: '/',       reserved: '/', }\n    lexer.add_lexeme { mode,  tid: 'gt',        jump: '^',        pattern: '>',       reserved: '>', }\n    lexer.add_catchall_lexeme { mode, tid: 'text', }\n    lexer.add_reserved_lexeme { mode, tid: 'forbidden', }\n  #.........................................................................................................\n  do =>\n    mode = 'tag:dq'\n    lexer.add_lexeme new_escchr_descriptor  mode\n    lexer.add_lexeme new_nl_descriptor      mode\n    lexer.add_lexeme { mode,  tid: 'dq',        jump: '^',        pattern: '\"',       reserved: '\"', }\n    lexer.add_catchall_lexeme { mode, tid: 'text', }\n  #.........................................................................................................\n  do =>\n    mode = 'tag:sq'\n    lexer.add_lexeme new_escchr_descriptor  mode\n    lexer.add_lexeme new_nl_descriptor      mode\n    lexer.add_lexeme { mode,  tid: 'sq',        jump: '^',        pattern: \"'\",       reserved: \"'\", }\n    lexer.add_catchall_lexeme { mode, tid: 'text', }\n  #.........................................................................................................\n  do =>\n    mode = 'comment'\n    lexer.add_lexeme new_escchr_descriptor  mode\n    lexer.add_lexeme new_nl_descriptor      mode\n    lexer.add_lexeme { mode, tid: 'eoc',       jump: '^',         pattern:  '-->',    reserved: '--',  }\n    lexer.add_catchall_lexeme { mode, tid: 'text', }\n    lexer.add_reserved_lexeme { mode, tid: 'forbidden', }\n  return lexer\n\n#-----------------------------------------------------------------------------------------------------------\nnew_parser = ( lexer ) ->\n  { Pipeline\n    transforms  } = require '../../../apps/moonriver'\n  _HTMLISH        = ( require 'paragate/lib/htmlish.grammar' ).new_grammar { bare: true, }\n  htmlish_sym     = Symbol 'htmlish'\n  #.........................................................................................................\n  $tokenize     = ( parser ) ->\n    return tokenize = ( line, send ) ->\n      @types.validate.text line\n      send token for token from parser.lexer.walk line\n      return null\n  #.........................................................................................................\n  $_hd_token_from_paragate_token = ->\n    return _hd_token_from_paragate_token = ( d, send ) ->\n      return send d unless d[htmlish_sym]?\n      first = d.$collector.at  0\n      last  = d.$collector.at -1\n      # delete d.$collector; H.tabulate \"htmlish\", [ d, ]\n      e     =\n        mode:   'tag'\n        tid:    d.type\n        mk:     \"tag:#{d.type}\"\n        jump:   null\n        value:  d.$source\n        ### TAINT must give first_lnr, last_lnr ###\n        lnr:    first.lnr\n        start:  first.start\n        stop:   last.stop\n        x:\n          atrs:   d.atrs\n          id:     d.id\n        source: null\n        $key:   '^tag'\n      send e\n    return null\n  #.........................................................................................................\n  $parse_htmlish_tag  = ->\n    collector   = []\n    within_tag  = false\n    sp          = new Pipeline()\n    sp.push transforms.$window { min: 0, max: +1, empty: null, }\n    sp.push parse_htmlish_tag = ( [ d, nxt, ], send ) ->\n      #.....................................................................................................\n      if within_tag\n        collector.push d\n        # debug '^parse_htmlish_tag@1^', d\n        if d.jump is 'plain' ### TAINT magic number ###\n          within_tag  = false\n          $source     = ( e.value for e from collector ).join ''\n          $collector  = [ collector..., ]\n          send stamp collector.shift() while collector.length > 0\n          htmlish     = _HTMLISH.parse $source\n          # H.tabulate '^78^', htmlish\n          # debug '^78^', rpr $source\n          # info '^78^', x for x in htmlish\n          unless htmlish.length is 1\n            ### TAINT use API to create token ###\n            # throw new Error \"^34345^ expected single token, got #{rpr htmlish}\"\n            return send { mode: 'tag', tid: '$error', }\n          [ htmlish ]           = GUY.lft.thaw htmlish\n          htmlish[htmlish_sym]  = true\n          htmlish.$collector    = $collector\n          htmlish.$source       = $source\n          send htmlish\n        return null\n      #.....................................................................................................\n      else\n        return send d unless nxt?.mk.startsWith 'tag:'\n        within_tag = true\n        collector.push d\n      #.....................................................................................................\n      return null\n    sp.push $_hd_token_from_paragate_token()\n    return sp\n  #.........................................................................................................\n  p             = new Pipeline()\n  p.lexer       = lexer\n  p.push $tokenize p\n  p.push $parse_htmlish_tag()\n  # p.push show = ( d ) -> urge '^parser@1^', d\n  # debug '^43^', p\n  return p\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_1 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'foo <!-- comment --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'foo <!-- comment \\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment' }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'foo <!-- comment \\\\\\n --> bar', [ { mk: 'plain:other', value: 'foo ' }, { mk: 'plain:ltbang', value: '<!--' }, { mk: 'comment:text', value: ' comment ' }, { mk: 'comment:escchr', value: '\\\\', x: { chr: '\\n' } }, { mk: 'comment:nl', value: '\\n' }, { mk: 'comment:text', value: ' ' }, { mk: 'comment:eoc', value: '-->' }, { mk: 'plain:ws', value: ' ' }, { mk: 'plain:other', value: 'bar' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:gt', value: '>' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar/>xyz', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slashgt', value: '/>' }, { mk: 'plain:other', value: 'xyz' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=bar/xyz/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=bar' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:other', value: 'xyz/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/>xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/xyz\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:dq:dq', value: '\"' }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar>xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar/>xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar/>xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"abc<div#c1 foo='bar/xyz'/\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:sq', value: \"'\" }, { mk: 'tag:sq:text', value: 'bar/xyz' }, { mk: 'tag:sq:sq', value: \"'\" }, { mk: 'tag:slash', value: '/' }, { mk: 'plain:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar/>xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar/>xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ \"\"\"abc<div#c1 foo=\"bar/xyz'/\"\"\", [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: \"bar/xyz'/\" }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/>xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/>xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    [ 'abc<div#c1 foo=\"bar/xyz\\\\\"/', [ { mk: 'plain:other', value: 'abc' }, { mk: 'plain:lt', value: '<' }, { mk: 'tag:text', value: 'div#c1 foo=' }, { mk: 'tag:dq', value: '\"' }, { mk: 'tag:dq:text', value: 'bar/xyz' }, { mk: 'tag:dq:escchr', value: '\\\\\"', x: { chr: '\"' } }, { mk: 'tag:dq:text', value: '/' }, { mk: 'tag:dq:nl', value: '\\n' } ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      lexer   = new_tag_lexer()\n      result  = []\n      for token from lexer.walk probe\n        d = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n        result.push d\n      # H.tabulate ( rpr probe ), result\n      resolve result\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@tags_2 = ( T, done ) ->\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'abc<div#c1 foo=bar/xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1 foo=bar', lnr: 1, start: 4, stop: 18, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'slash', mk: 'tag:slash', jump: 'plain', value: '/', lnr: 1, start: 18, stop: 19, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'ntag', mk: 'tag:ntag', jump: null, value: '<div#c1 foo=bar/', lnr: 1, start: 3, stop: 19, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 1, start: 19, stop: 23, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 1, start: 23, stop: 23, x: null, source: 'abc<div#c1 foo=bar/xyz/', '$key': '^plain' } ], null ]\n    [ 'abc<div#c1\\nfoo=bar/xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1', lnr: 1, start: 4, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'nl', mk: 'tag:nl', jump: null, value: '\\n', lnr: 1, start: 10, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'foo=bar', lnr: 2, start: 0, stop: 7, x: null, source: 'foo=bar/xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'slash', mk: 'tag:slash', jump: 'plain', value: '/', lnr: 2, start: 7, stop: 8, x: null, source: 'foo=bar/xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'ntag', mk: 'tag:ntag', jump: null, value: '<div#c1\\nfoo=bar/', lnr: 1, start: 3, stop: 8, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 2, start: 8, stop: 12, x: null, source: 'foo=bar/xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 2, start: 12, stop: 12, x: null, source: 'foo=bar/xyz/', '$key': '^plain' } ], null ]\n    [ 'abc<div#c1 foo=bar>xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1 foo=bar', lnr: 1, start: 4, stop: 18, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'gt', mk: 'tag:gt', jump: 'plain', value: '>', lnr: 1, start: 18, stop: 19, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'otag', mk: 'tag:otag', jump: null, value: '<div#c1 foo=bar>', lnr: 1, start: 3, stop: 19, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 1, start: 19, stop: 23, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 1, start: 23, stop: 23, x: null, source: 'abc<div#c1 foo=bar>xyz/', '$key': '^plain' } ], null ]\n    [ 'abc<div#c1\\nfoo=bar>xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1', lnr: 1, start: 4, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'nl', mk: 'tag:nl', jump: null, value: '\\n', lnr: 1, start: 10, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'foo=bar', lnr: 2, start: 0, stop: 7, x: null, source: 'foo=bar>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'gt', mk: 'tag:gt', jump: 'plain', value: '>', lnr: 2, start: 7, stop: 8, x: null, source: 'foo=bar>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'otag', mk: 'tag:otag', jump: null, value: '<div#c1\\nfoo=bar>', lnr: 1, start: 3, stop: 8, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 2, start: 8, stop: 12, x: null, source: 'foo=bar>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 2, start: 12, stop: 12, x: null, source: 'foo=bar>xyz/', '$key': '^plain' } ], null ]\n    [ 'abc<div#c1 foo=bar/>xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1 foo=bar', lnr: 1, start: 4, stop: 18, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'slashgt', mk: 'tag:slashgt', jump: 'plain', value: '/>', lnr: 1, start: 18, stop: 20, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'stag', mk: 'tag:stag', jump: null, value: '<div#c1 foo=bar/>', lnr: 1, start: 3, stop: 20, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 1, start: 20, stop: 24, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 1, start: 24, stop: 24, x: null, source: 'abc<div#c1 foo=bar/>xyz/', '$key': '^plain' } ], null ]\n    [ 'abc<div#c1\\nfoo=bar/>xyz/', [ { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'abc', lnr: 1, start: 0, stop: 3, x: null, source: 'abc<div#c1', '$key': '^plain' }, { mode: 'plain', tid: 'lt', mk: 'plain:lt', jump: 'tag', value: '<', lnr: 1, start: 3, stop: 4, x: null, source: 'abc<div#c1', '$key': '^plain', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'div#c1', lnr: 1, start: 4, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'nl', mk: 'tag:nl', jump: null, value: '\\n', lnr: 1, start: 10, stop: 10, x: null, source: 'abc<div#c1', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'foo=bar', lnr: 2, start: 0, stop: 7, x: null, source: 'foo=bar/>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'slashgt', mk: 'tag:slashgt', jump: 'plain', value: '/>', lnr: 2, start: 7, stop: 9, x: null, source: 'foo=bar/>xyz/', '$key': '^tag', '$stamped': true }, { mode: 'tag', tid: 'stag', mk: 'tag:stag', jump: null, value: '<div#c1\\nfoo=bar/>', lnr: 1, start: 3, stop: 9, x: { atrs: { foo: 'bar' }, id: 'c1' }, source: null, '$key': '^tag' }, { mode: 'plain', tid: 'other', mk: 'plain:other', jump: null, value: 'xyz/', lnr: 2, start: 9, stop: 13, x: null, source: 'foo=bar/>xyz/', '$key': '^plain' }, { mode: 'plain', tid: 'nl', mk: 'plain:nl', jump: null, value: '\\n', lnr: 2, start: 13, stop: 13, x: null, source: 'foo=bar/>xyz/', '$key': '^plain' } ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      lexer   = new_tag_lexer()\n      parser  = new_parser lexer\n      result  = []\n      for line from GUY.str.walk_lines probe\n        parser.send line\n        for token from parser.walk()\n          # token = GUY.props.omit_nullish GUY.props.pick_with_fallback token, null, 'mk', 'value', 'x'\n          result.push token\n      H.tabulate ( rpr probe ), result\n      resolve result\n      # resolve null\n  #.........................................................................................................\n  done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @parse_codespans_and_single_star\n  # test @parse_md_stars_markup\n  # test @tags_1\n  # test @tags_2\n\n"
  ]
}