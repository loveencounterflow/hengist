{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "AAC4G;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,aAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAC5G,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,wBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAX4G;;;;;;;;;EAsB5G,CAAA,GAA4B,OAAA,CAAQ,sBAAR,EAtBgF;;;;;EA6B5G,mBAAA,GAAsB,QAAA,CAAE,KAAF,EAAS,KAAT,CAAA;AACtB,QAAA,MAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAAA,GAAA,EAAA;IAAE,OAAA,GAAU;AACV;IAAA,KAAA,WAAA;;AACE;MAAA,KAAA,WAAA;;QACE,CAAA,CAAE,IAAF,EAAQ,GAAR,EAAa,OAAb,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD,WAArD,CAAA,GAAsE,MAAtE;QACA,OAAO,CAAC,IAAR,CAAa,CAAE,IAAF,EAAQ,GAAR,EAAa,OAAb,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC,MAAtC,EAA8C,KAA9C,EAAqD,WAArD,CAAb;MAFF;IADF;IAIA,CAAC,CAAC,QAAF,CAAW,KAAX,EAAkB,OAAlB;AACA,WAAO;EAPa,EA7BsF;;;EAuC5G,aAAA,GAAgB,QAAA,CAAE,KAAF,CAAA;WAAa,GAAG,CAAC,KAAK,CAAC,kBAAV,CAA6B,KAA7B,EAAoC,IAApC,EAC3B,MAD2B,EACnB,KADmB,EACZ,IADY,EACN,MADM,EACE,OADF,EACW,MADX,EACmB,MADnB,EAC2B,IAD3B,EACiC,MADjC,EACyC,IADzC,EAC+C,UAD/C;EAAb,EAvC4F;;;EA2C5G,MAAM,CAAC,OAAP,GAAiB,CAAE,GAAA,CAAF,EAAQ,mBAAR,EAA6B,aAA7B;AA3C2F",
  "sourcesContent": [
    "\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN/TESTS/HELPERS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n# types                     = new ( require 'intertype' ).Intertype\n# { isa\n#   equals\n#   type_of\n#   validate\n#   validate_list_of }      = types.export()\nH                         = require '../../../lib/helpers'\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nshow_lexer_as_table = ( title, lexer ) ->\n  lexemes = []\n  for mode, entry of lexer.registry\n    for tid, lexeme of entry.lexemes\n      { mode, tid, pattern, jump, reserved, create, value, empty_value, } = lexeme\n      lexemes.push { mode, tid, pattern, jump, reserved, create, value, empty_value, }\n  H.tabulate title, lexemes\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nexcerpt_token = ( token ) -> GUY.props.pick_with_fallback token, null, \\\n  'mode', 'tid', 'mk', 'jump', 'value', 'data', 'lnr1', 'x1', 'lnr2', 'x2', '$stamped'\n\n#===========================================================================================================\nmodule.exports = { H..., show_lexer_as_table, excerpt_token, }\n\n\n"
  ]
}