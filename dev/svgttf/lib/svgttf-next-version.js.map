{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/svgttf-next-version.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/SVGTTF'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nPATH                      = require 'path'\n#...........................................................................................................\n@types                    = require './types'\n{ isa\n  validate\n  type_of }               = @types\nOT                        = require 'opentype.js'\n\n#-----------------------------------------------------------------------------------------------------------\n@_transform_fn_as_text = ( transform_fn ) ->\n  validate.svgttf_svg_transform_fn transform_fn\n  [ name, p..., ] = transform_fn\n  if p.length is 1 then p = p[ 0 ]\n  return \"#{name}(#{p})\" if ( isa.text p ) or ( isa.float p )\n  return \"#{name}(#{p.join ','})\" if isa.list p\n\n#-----------------------------------------------------------------------------------------------------------\n@_transform_as_text = ( transform ) ->\n  return null unless transform?\n  validate.list transform\n  return null if transform.length is 0\n  return \"transform='#{(@_transform_fn_as_text tf for tf in transform).join ' '}'\"\n\n#-----------------------------------------------------------------------------------------------------------\n@pathelement_from_glyphidx = ( me, glyph_idx, size = null, transform ) ->\n  @_pathelement_from_pathdata me, ( @pathdata_from_glyphidx me, glyph_idx, size ), transform\n\n#-----------------------------------------------------------------------------------------------------------\n@pathdata_from_glyphidx = ( me, glyph_idx, size = null ) ->\n  validate.svgttf_font me\n  validate.count glyph_idx\n  validate.nonnegative size if size?\n  return @_fast_pathdata_from_glyphidx me, glyph_idx, size\n\n#-----------------------------------------------------------------------------------------------------------\n@_fast_pathdata_from_glyphidx = ( me, glyph_idx, size = null ) ->\n  path_precision  = 0\n  x               = 0\n  y               = 0\n  glyph           = me.otjsfont.glyphs.glyphs[ glyph_idx ]\n  size            = me.otjsfont.unitsPerEm\n  path            = glyph.getPath x, y, size\n  return path.toPathData path_precision\n\n#-----------------------------------------------------------------------------------------------------------\n@_pathelement_from_pathdata = ( me, pathdata, transform ) ->\n  if ( tf_txt = @_transform_as_text transform )?\n    return \"<path #{tf_txt} d='#{pathdata}'/>\"\n  return \"<path d='#{pathdata}'/>\"\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_svg = ( me, x1, y1, x2, y2, content ) ->\n  validate.float x1\n  validate.float y1\n  validate.float x2\n  validate.float y2\n  R = []\n  R.push \"<?xml version='1.0' standalone='no'?>\"\n  R.push \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='#{x1} #{y1} #{x2} #{y2}'>\"\n  switch type = type_of content\n    when 'text'   then R.push content\n    when 'list'   then R = R.concat content\n    else throw new Error \"^svgttf/_get_svg_from_glyphidx@3337^ expected a text or a list, got a #{type}\"\n  R.push \"</svg>\"\n  return R.join ''\n\n#-----------------------------------------------------------------------------------------------------------\n@svg_from_glyphidx = ( me, glyph_idx, size ) ->\n  pathelement = @pathelement_from_glyphidx me, glyph_idx, size #, transform\n  ### TAINT derive coordinates from metrics ###\n  return @_get_svg me, 0, -800, 1000, 1000, pathelement\n\n#-----------------------------------------------------------------------------------------------------------\n@svg_from_harfbuzz_linotype = ( me, harfbuzz_linotype, size ) ->\n  ### TAINT code duplication ###\n  validate.svgttf_harfbuzz_linotype harfbuzz_linotype\n  x = 0\n  y = 0\n  R = []\n  for sort in harfbuzz_linotype\n    transform   = [ [ 'translate', x, y, ], ]\n    ### TAINT figure out relationship between size and upem ###\n    x          += sort.x_advance * size\n    R.push '\\n' + \"<!--gid:#{sort.gid}-->\" + @pathelement_from_glyphidx me, sort.gid, size, transform\n  R.push '\\n'\n  return @_get_svg me, 0, -800, x, 1000, R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@font_from_path = ( path ) ->\n  validate.nonempty_text path\n  otjsfont = OT.loadSync path\n  return { path, otjsfont, }\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # await @_demo_opentypejs()\n  # test @[ \"VNR sort 2\" ]\n  # test @[ \"VNR sort 3\" ]\n  # @[ \"VNR sort 3\" ]()\n  # test @[ \"test VNR._first_nonzero_is_negative()\" ]\n\n\n\n\n"
  ]
}