{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERVOKE/TESTS/BASIC'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\n\n  # probes_and_matchers = [\n  #   ]\n  # #.........................................................................................................\n  # for [ probe, matcher, error, ] in probes_and_matchers\n  #   await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n\n#===========================================================================================================\nget_isa_class = ->\n  IVK = require '../../../apps/intervoke'\n\n  #===========================================================================================================\n  class Isa extends IVK.Word_prompter\n\n    #---------------------------------------------------------------------------------------------------------\n    null:       ( x ) -> x is null\n    undefined:  ( x ) -> x is undefined\n    boolean:    ( x ) -> ( x is true ) or ( x is false )\n    float:      ( x ) -> Number.isFinite x\n    symbol:     ( x ) -> ( typeof x ) is 'symbol'\n\n    #---------------------------------------------------------------------------------------------------------\n    __create_handler: ( phrase ) ->\n      return ( details ) -> 'Yo'\n\n  #===========================================================================================================\n  return Isa\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@ivk_isa = ( T, done ) ->\n  IVK = require '../../../apps/intervoke'\n  Isa = get_isa_class()\n  #.........................................................................................................\n  isa = new Isa()\n  # debug '^98-2^', isa.__cache\n  try debug '^98-3^', ( new IVK.Prompter() ).__do() catch e then warn GUY.trm.reverse e.message\n  T?.throws /not allowed to call method '__do' of abstract base class/, -> ( new IVK.Prompter() ).__do()\n  T?.eq ( isa 'float', 42       ), true\n  T?.eq ( isa.float 42          ), true\n  T?.eq ( isa.float NaN         ), false\n  T?.eq ( isa.float '22'        ), false\n  T?.eq ( isa.boolean '22'      ), false\n  T?.eq ( isa.boolean true      ), true\n  T?.eq ( isa 'boolean', true   ), true\n  T?.eq ( isa.xxx '22'        ), false\n  debug '^99-1^', isa\n  debug '^99-4^', ( k for k of isa )\n  # T?.eq [ isa.__cache.keys()..., ], [ 'null', 'undefined', 'boolean', 'float', 'symbol' ]\n  # isa.float___or_text 42;     T?.eq [ isa.__cache.keys()..., ], [ 'null', 'undefined', 'boolean', 'float', 'symbol', 'float_or_text', 'float___or_text' ]\n  # isa.float_or_text 42;       T?.eq [ isa.__cache.keys()..., ], [ 'null', 'undefined', 'boolean', 'float', 'symbol', 'float_or_text', 'float___or_text' ]\n  # isa 'float   or text', 42;  T?.eq [ isa.__cache.keys()..., ], [ 'null', 'undefined', 'boolean', 'float', 'symbol', 'float_or_text', 'float___or_text', 'float   or text' ]\n  # T?.eq ( ( isa.__cache.get 'float___or_text' )     is ( isa.__cache.get 'float_or_text' )    ), true\n  # T?.eq ( ( isa.__cache.get 'float___or_text' )     is ( isa.__cache.get 'float   or text' )  ), true\n  # T?.eq ( ( isa.__cache.get 'float_or_text' ).name  is 'float_or_text'                        ), true\n  # T?.eq ( ( isa.__cache.get 'float_or_text' )       is isa.float_or_text                      ), false\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@ivk_disallowed_to_redeclare = ( T, done ) ->\n  IVK = require '../../../apps/intervoke'\n  Isa = get_isa_class()\n  isa = new Isa()\n  try debug '^98-3^', isa.__declare 'float', ( -> ) catch e then warn GUY.trm.reverse e.message\n  T?.throws /property 'float' already declared/, -> isa.__declare 'float', ( -> )\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_longest_first_matching = ( T, done ) ->\n  vocabulary  = [ 'of', 'or', 'empty', 'nonempty', 'list', 'empty list', 'empty list of', 'integer', 'list of', 'of integer', ]\n  #-----------------------------------------------------------------------------------------------------------\n  sort_vocabulary = ( vocabulary ) -> [ vocabulary..., ].sort ( a, b ) ->\n    ### TAINT in edge cases, sorting can be off when code units != code points ###\n    return +1 if a.length < b.length\n    return -1 if a.length > b.length\n    return  0\n  #-----------------------------------------------------------------------------------------------------------\n  re_from_vocabulary = ( vocabulary ) ->\n    vocabulary      = sort_vocabulary vocabulary\n    words_pattern   = ( \"(?:#{GUY.str.escape_for_regex term})\" for term in vocabulary ).join '|'\n    return new RegExp \"(?<=^|\\\\s+)#{words_pattern}(?=$|\\\\s+)\", 'ug'\n  #-----------------------------------------------------------------------------------------------------------\n  analyze_ncc = ( vocabulary_re, ncc ) -> ( d for [ d, ] from probe.matchAll vocabulary_re )\n  # info '^95-1^', vocabulary\n  probes_and_matchers = [\n    [ 'list of integer', [ 'list of', 'integer' ] ]\n    [ 'empty list of integer', [ 'empty list of', 'integer' ] ]\n    [ 'nonempty integer list', [ 'nonempty', 'integer', 'list' ] ]\n    [ 'empty list of integer or list of text', [ 'empty list of', 'integer', 'or', 'list of' ] ]\n    [ 'nonempty list of integer or list of text', [ 'nonempty', 'list of', 'integer', 'or', 'list of' ] ]\n    [ 'integer', [ 'integer' ] ]\n    ]\n  vocabulary_re = re_from_vocabulary vocabulary\n  for [ probe, matcher, error, ] in probes_and_matchers\n    result  = analyze_ncc vocabulary_re, probe\n    info '^23423^', [ probe, result, ]\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\nif module is require.main then do =>\n  # @ivk_isa()\n  test @\n  # @demo_longest_first_matching()\n\n\n\n\n\n"
  ]
}