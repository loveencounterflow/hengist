{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/lftng-basics.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/LFTNG-BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  type_of }               = types.export()\n\n#-----------------------------------------------------------------------------------------------------------\nresolve_project_path = ( path ) -> PATH.resolve PATH.join __dirname, '../../..', path\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG API\" ] = ( T, done ) ->\n  lft_cfg       = { freeze: true, }\n  LFT           = ( require './letsfreezethat-NG-rc2' ).new lft_cfg\n  #.........................................................................................................\n  T.eq 'function', type_of LFT.assign;      T.eq 1, LFT.assign.length ### NOTE actually splat argument ###\n  T.eq 'function', type_of LFT.freeze;      T.eq 1, LFT.freeze.length\n  T.eq 'function', type_of LFT.thaw;        T.eq 1, LFT.thaw.length\n  T.eq 'function', type_of LFT.lets;        T.eq 2, LFT.lets.length\n  T.eq 'function', type_of LFT.get;         T.eq 2, LFT.get.length\n  T.eq 'function', type_of LFT.set;         T.eq 3, LFT.set.length\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG lets, set, get\" ] = ( T, done ) ->\n  LFT_DFLT      = require './letsfreezethat-NG-rc2'\n  # #.........................................................................................................\n  # urge '^33738-1^'\n  # LFT_CNFY      = null\n  # T.throws /not a valid.*cfg/, -> LFT_CNFY = LFT_DFLT.new { copy: false, freeze: true, }\n  # T.eq LFT_CNFY, null\n  #.........................................................................................................\n  do =>\n    urge '^33738-2^'\n    LFT = LFT_DFLT\n    d1 = {}\n    d2 = LFT.lets d1\n    T.ok d1 isnt d2\n    T.ok isa.frozen d2\n    d3 = LFT.set d2, 'key', 'value'\n    T.eq ( LFT.get d3, 'key' ), 'value'\n    T.eq d3.key, 'value'\n    T.ok d2 isnt d3\n    T.eq ( LFT.get d2, 'key' ), undefined\n    T.eq d2.key, undefined\n  #.........................................................................................................\n  do =>\n    urge '^33738-3^'\n    LFT = LFT_DFLT.new { freeze: true, }\n    d1 = {}\n    d2 = LFT.lets d1\n    T.ok d1 isnt d2\n    T.ok isa.frozen d2\n    d3 = LFT.set d2, 'key', 'value'\n    T.ok isa.frozen d3\n    T.eq ( LFT.get d3, 'key' ), 'value'\n    T.eq d3.key, 'value'\n    T.ok d2 isnt d3\n    T.eq ( LFT.get d2, 'key' ), undefined\n    T.eq d2.key, undefined\n  #.........................................................................................................\n  do =>\n    LFT = LFT_DFLT.new { freeze: false,  }\n    urge '^33738-4^'\n    d1 = {}\n    d2 = LFT.lets d1\n    T.ok d1 isnt d2\n    T.ok not isa.frozen d2\n    d3 = LFT.set d2, 'key', 'value'\n    T.ok not isa.frozen d3\n    T.eq ( LFT.get d3, 'key' ), 'value'\n    T.eq d3.key, 'value'\n    T.ok d2 isnt d3\n    T.eq ( LFT.get d2, 'key' ), undefined\n    T.eq d2.key, undefined\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG freeze, thaw (shallow)\" ] = ( T, done ) ->\n  LFT       = require './letsfreezethat-NG-rc2'\n  { lets\n    freeze\n    thaw }  = LFT.export()\n  #.........................................................................................................\n  d1 = lets { a: 42, b: 'helo', }\n  T.ok isa.frozen d1\n  d2 = thaw d1\n  T.ok isa.frozen d1\n  T.ok not isa.frozen d2\n  d2.a += +1\n  d2.b += ' world'\n  d3    = freeze d2\n  T.ok isa.frozen d2\n  T.ok isa.frozen d3\n  T.ok d2 is d3\n  T.eq d3, { a: 43, b: 'helo world', }\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG freeze, thaw (deep)\" ] = ( T, done ) ->\n  LFT       = require './letsfreezethat-NG-rc2'\n  { lets\n    freeze\n    thaw }  = LFT.export()\n  #.........................................................................................................\n  d1 = lets { $key: '^a-list', $value: [ 1, 2, { $key: '^another', $value: [ 'c', 'd', ], }, ], }\n  T.ok isa.frozen d1\n  T.ok isa.frozen d1.$value\n  T.ok isa.frozen d1.$value[ 2 ]\n  T.ok isa.frozen d1.$value[ 2 ].$value\n  T.eq d1, { $key: '^a-list', $value: [ 1, 2, { $key: '^another', $value: [ 'c', 'd', ], }, ], }\n  d2 = thaw d1\n  T.eq d1, { $key: '^a-list', $value: [ 1, 2, { $key: '^another', $value: [ 'c', 'd', ], }, ], }\n  T.eq d2, { $key: '^a-list', $value: [ 1, 2, { $key: '^another', $value: [ 'c', 'd', ], }, ], }\n  T.ok isa.frozen d1\n  T.ok isa.frozen d1.$value\n  T.ok isa.frozen d1.$value[ 2 ]\n  T.ok isa.frozen d1.$value[ 2 ].$value\n  T.ok not isa.frozen d2\n  T.ok not isa.frozen d2.$value\n  T.ok not isa.frozen d2.$value[ 2 ]\n  T.ok not isa.frozen d2.$value[ 2 ].$value\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG lets makes a copy on entry, not on exit\" ] = ( T, done ) ->\n  LFT       = require './letsfreezethat-NG-rc2'\n  { lets\n    freeze\n    thaw }  = LFT.export()\n  #.........................................................................................................\n  d1      = { a: 42, b: 'helo', }\n  d2_ref  = null\n  d3      = lets d1, ( d2 ) -> d2_ref = d2; d2.c = 'value'\n  T.ok not isa.frozen d1\n  T.ok isa.frozen d3\n  T.ok d1 isnt  d2_ref\n  T.ok d1 isnt  d3\n  T.ok d3 is    d2_ref\n  T.eq d3.a, 42\n  T.eq d3.b, 'helo'\n  T.eq d3.c, 'value'\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"LFTNG thaw makes a copy, freeze does not\" ] = ( T, done ) ->\n  LFT       = require './letsfreezethat-NG-rc2'\n  { lets\n    freeze\n    thaw }  = LFT.export()\n  #.........................................................................................................\n  d1      = { a: 42, b: 'helo', }\n  d2      = thaw d1\n  d3      = freeze d2\n  d4      = thaw d3\n  T.ok d2 isnt  d1\n  T.ok d3 is    d2\n  T.ok d4 isnt  d3\n  T.ok not  isa.frozen d1\n  T.ok      isa.frozen d2\n  T.ok      isa.frozen d3\n  T.ok not  isa.frozen d4\n  #.........................................................................................................\n  done()\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"LFTNG API\" ] = ( T, done ) ->\n#   lft_cfg       = { copy: true, freeze: true, }\n#   LFT           = ( require './letsfreezethat-NG-rc2' ).new lft_cfg\n#   #.........................................................................................................\n#   probes_and_matchers = []\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ type, value, ] = probe\n#       resolve LFTNG.types.isa type, value\n#   done()\n#   return null\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  test @\n  # test @[ \"test VNR._first_nonzero_is_negative()\" ]\n\n\n\n"
  ]
}