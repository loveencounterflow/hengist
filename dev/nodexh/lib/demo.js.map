{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,WAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,cAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,WAAA,GAA4B,OAAA,CAAQ,aAAR;;EAC5B,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,CAAA,GAC4B,KAD5B,EAlBA;;;EAsBA,cAAA,GAAiB,QAAA,CAAE,IAAF,CAAA;WAAY,EAAE,CAAC,YAAH,CAAgB,IAAhB,EAAsB;MAAE,QAAA,EAAU;IAAZ,CAAtB;EAAZ,EAtBjB;;;EAyBA,IAAA,GAAO,QAAA,CAAA,CAAA;AACP,QAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA;IAAE,GAAA,GAAQ,OAAA,CAAQ,oBAAR;IACR,KAAA,GAAQ,IAAI,KAAJ,CAAU,uCAAV;IACR,IAAA,GAAQ;IACR,IAAA,GAAQ,cAAA,CAAe,IAAf;IACR,GAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,IAAb;IACR,KAAA,CAAM,CAAE,IAAF,EAAQ,GAAR,CAAN;AACA;MACE,CAAA,GAAI,GAAG,CAAC,WAAJ,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,cAA5B,EADN;KAEA,cAAA;MAAM,eACR;;;MAEI,IAAA,CAAK,KAAK,CAAC,IAAX,EAAiB,KAAK,CAAC,IAAvB;MACA,MAAM,MAJR;;IAKA,IAAA,CAAK,OAAL,EAAc,oBAAd,EAAsC,CAAC,CAAC,eAAxC;IACA,IAAA,CAAK,OAAL,EAAc,mBAAd,EAAsC,CAAC,CAAC,cAAxC;IACA,IAAA,CAAK,OAAL,EAAc,QAAd;;AAAwC;MAAA,KAAA,UAAA;qBAAA;MAAA,CAAA;;QAAxC;IACA,IAAA,CAAK,OAAL,EAAc,QAAd,EAAsC,CAAC,CAAC,GAAxC;IACA,IAAA,CAAK,OAAL,EAAc,QAAd,EAAsC,CAAC,CAAC,GAAxC;IACA,IAAA,CAAK,OAAL,EAAc,sBAAd,EAAsC,CAAC,CAAC,iBAAxC;IACA,IAAA,CAAK,OAAL,EAAc,qBAAd,EAAsC,CAAC,CAAC,gBAAxC;IACA,KAAA;;AAAQ;MAAA,KAAA,QAAA;qBAAA;MAAA,CAAA;;QAAR,EApBF;;IAsBE,GAAA,GAAM,IAAI,GAAG,CAAC,iBAAR,CAA0B,CAAC,CAAC,GAA5B,EAtBR;;IAwBE,GAAG,CAAC,kBAAJ,CAAA,EAxBF;;IA0BE,KAAY,kCAAZ;MACE,MAAA,GAAU;MACV,KAAA,GAAU,GAAG,CAAC;MACd,KAAA,GAAU,GAAG,CAAC,sCAFlB;;MAII,QAAA,GAAa,GAAG,CAAC,mBAAJ,CAAwB;QAAE,IAAF;QAAQ,MAAR;QAAgB,IAAA,EAAM;MAAtB,CAAxB;MAEb,IAAgB,qBAAhB;;AAAA,iBAAA;OANJ;;;MASI,IAAA,CAAK,QAAL,EAAe,CAAE,IAAF,CAAf,EAA0B,QAA1B;MACA,KAAS,+GAAT;QACE,QAAA,GAAa,GAAG,CAAC,mBAAJ,CAAwB;UAAE,IAAF;UAAQ,MAAA,EAAQ,CAAhB;UAAmB,IAAA,EAAM;QAAzB,CAAxB;QACb,OAAA,CAAQ,QAAR;MAFF;IAXF,CA1BF;;;;;AA4CE,WAAO;EA7CF,EAzBP;;;EAyEA,WAAA,GAAc,MAAA,QAAA,CAAA,CAAA;AACd,QAAA,CAAA,EAAA,CAAA,EAAA;IAAE,CAAA,GAAI,QAAA,CAAE,CAAF,CAAA;aAAS,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AAC3B,YAAA;QAAI,CAAA,GAAI,QAAA,CAAA,CAAA;AACR,cAAA;UAAM,IAAG,CAAA,KAAK,CAAR;YAAe,MAAM,IAAI,KAAJ,CAAU,uBAAV;YAAmC,WAAA,GAAc,KAAtE;;UACA,IAAG,CAAA,KAAK,EAAR;AAAgB,mBAAO,MAAA,CAAO,IAAI,KAAJ,CAAU,wBAAV,CAAP,EAAvB;;iBACA,OAAA,CAAQ,CAAA,IAAK,CAAb;QAHE;eAIJ,UAAA,CAAW,CAAX,EAAc,GAAd;MALuB,CAAZ;IAAT;IAMJ,CAAA,GAAI,QAAA,CAAE,CAAF,CAAA;aAAS,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,CAAA;eAAe,UAAA,CAAW,CAAE,QAAA,CAAA,CAAA;iBAAG,OAAA,CAAQ,CAAA,CAAE,CAAA,IAAK,CAAP,CAAR;QAAH,CAAF,CAAX,EAAoC,GAApC;MAAf,CAAZ;IAAT;IACJ,CAAA,GAAI,QAAA,CAAE,CAAF,CAAA;aAAS,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,CAAA;eAAe,UAAA,CAAW,CAAE,QAAA,CAAA,CAAA;iBAAG,OAAA,CAAQ,CAAA,CAAE,CAAA,IAAK,CAAP,CAAR;QAAH,CAAF,CAAX,EAAoC,GAApC;MAAf,CAAZ;IAAT,EAPN;;IASE,IAAA,CAAK,CAAA,MAAM,CAAA,CAAE,CAAF,CAAN,CAAL;WACA,IAAA,CAAK,CAAA,MAAM,CAAA,CAAE,CAAF,CAAN,CAAL;EAXY,EAzEd;;;;;EAwFA,UAAA,GAAa,MAAA,QAAA,CAAA,CAAA;AACb,QAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,aAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA;IAAE,CAAA,CAAE,aAAF,EAAiB,SAAjB,CAAA,GAA+B,OAAA,CAAQ,QAAR,CAA/B;IACA,QAAQ,CAAC,QAAT,CAAkB,aAAlB;AACA;MACE,MAAM,WAAA,CAAA,EADR;KAEA,cAAA;MAAM;MACJ,IAAA,CAAK,KAAL,EADF;;IAEA,IAAG,aAAH;MACE,gBAAA,CAAiB,KAAjB;MACA,KAAA,GAAQ,CAAE,IAAI,WAAJ,CAAgB,KAAhB,CAAF,CAAyB,CAAE,CAAF,EADrC;;MAGI,IAAA,GAAO,KAAK,CAAC,KAHjB;;;MAMI,KAAA,CAAM,OAAN,EAAe,aAAf,EANJ;MAOI,KAAA,CAAM,OAAN,EAAe,SAAf,EAPJ;MAQI,KAAA,CAAM,OAAN,EAAe,SAAA,GAAY,aAAA,CAAc,IAAd,EAAoB,KAApB,CAA3B;MACA,KAAA,CAAM,OAAN;;AAAiB;QAAA,KAAA,cAAA;uBAAA;QAAA,CAAA;;UAAjB;MACA,IAAA,CAAK,QAAL,EAAe,SAAS,CAAC,OAAO,CAAC,IAAjC,EAVJ;;MAYI,IAAA,CAAK,QAAL,EAAe,SAAS,CAAC,OAAO,CAAC,OAAjC,EAZJ;;MAcI,IAAA,CAAK,QAAL,EAAe,SAAS,CAAC,OAAO,CAAC,KAAjC,EAdJ;;;;;MAmBI,IAAA,CAAK,OAAL,EAAc,QAAd,EAAwB,KAAxB;MACA,CAAA,CAAE,IAAF,EAAQ,MAAR,CAAA,GAAoB,KAApB;MACA,MAAA,GAAoB,IAAA,GAAU;MAC9B,QAAA,GAAoB,MAAA,GAAU;MAC9B,EAAA,GAAK,SAAS,CAAC,SAAV,CAAoB,MAApB,EAA4B,QAA5B;MACL,IAAA,CAAK,OAAL,EAAc,CAAE,IAAF,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,QAAxB,CAAd;MACA,IAAA,CAAK,OAAL,EAAc,EAAd;MACA,IAAA,CAAK,OAAL,EAAc;QAAE,SAAA,EAAW;UAAE,IAAA,EAAM,EAAE,CAAC,aAAH,GAAmB,CAA3B;UAA8B,MAAA,EAAQ,EAAE,CAAC,eAAH,GAAqB;QAA3D,CAAb;QAA6E,QAAA,EAAU;UAAE,IAAA,EAAM,EAAE,CAAC,YAAH,GAAkB,CAA1B;UAA6B,MAAA,EAAQ,EAAE,CAAC,cAAH,GAAoB;QAAzD;MAAvF,CAAd;MACA,GAAA,GAAM;MACN,GAAA,GAAM;AACN,aAAA,IAAA;QACE,GAAA;QACA,IAAS,GAAA,GAAM,QAAN,GAAiB,CAA1B;AAAA,gBAAA;;QACA,EAAA,GAAK,SAAS,CAAC,SAAV,CAAoB,GAApB,EAAyB,GAAzB;QACL,IAAA,CAAK,OAAL,EAAc;UAAE,IAAF;UAAQ,MAAA,EAAQ;QAAhB,CAAd,EAAsC,EAAtC;MAJF;AAKA,aAlCJ;;;MAqCI,IAAA,CAAK,KAAK,CAAC,OAAX,EAtCF;KANF;;AA8CE,WAAO;EA/CI,EAxFb;;;EA0IA,gBAAA,GAAmB,QAAA,CAAE,KAAF,EAAS,OAAT,CAAA;AACnB,QAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,YAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,EAAA,CAAA,EAAA,GAAA,EAAA;IAAE,MAAA,GAAW,IAAI,WAAJ,CAAgB,KAAhB,EAAb;IACE,KAAA,wCAAA;;MACE,CAAA,CAAE,MAAF,EAAU,WAAV,EAAuB,IAAvB,EAA6B,YAA7B,EAA2C,SAA3C,EAAsD,QAAtD,EAAgE,IAAhE,EAAsE,MAAtE,CAAA,GAAkF,KAAlF;MACA,IAAkB,SAAa,MAAb,SAAiB,QAAnC;QAAA,IAAA,GAAU,KAAV;;MACA,IAAkB,WAAa,MAAb,WAAiB,QAAnC;QAAA,MAAA,GAAU,KAAV;;MACA,IAAG,YAAH;QACE,IAAA,CAAK,aAAL,EAAoB,CAAE,IAAF,EAAQ,IAAR,EAAc,MAAd,EAAsB,MAAtB,CAApB,EADF;OAAA,MAAA;QAGE,IAAA,CAAK,aAAL,EAAoB,oBAApB,EAHF;;IAJF,CADF;;AAUE,WAAO;EAXU,EA1InB;;;EAwJA,kBAAA,GAAqB,QAAA,CAAA,CAAA;AACrB,QAAA;IAAE,YAAA,GAAe,QAAA,CAAE,KAAF,CAAA;MACb,YAAA,CAAa,QAAA,CAAA,CAAA;QACX,UAAA,CAAW,CAAE,QAAA,CAAA,CAAA;iBAAG,IAAA,CAAK,OAAL;QAAH,CAAF,CAAX,EAAgC,GAAhC;eACA,KAAA,CAAM,SAAN,EAAiB,KAAjB;MAFW,CAAb;AAGA,aAAO;IAJM;IAKf,OAAO,CAAC,EAAR,CAAW,0BAAX,EAAwC,YAAxC;IACA,OAAO,CAAC,EAAR,CAAW,oBAAX,EAAiC,YAAjC;IACA,MAAM,IAAI,KAAJ,CAAU,iBAAV;EARa,EAxJrB;;;EAmKA,sBAAA,GAAyB,MAAA,QAAA,CAAA,CAAA;AACzB,QAAA,CAAA,EAAA,CAAA,EAAA;IAAE,CAAA,GAAI,QAAA,CAAA,CAAA;aAAG,IAAI,OAAJ,CAAY,MAAA,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;eAAuB,CAAA,MAAM,CAAA,CAAA,CAAN;MAAvB,CAAZ;IAAH;IACJ,CAAA,GAAI,QAAA,CAAA,CAAA;aAAG,IAAI,OAAJ,CAAY,MAAA,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;eAAuB,CAAA,MAAM,CAAA,CAAA,CAAN;MAAvB,CAAZ;IAAH;IACJ,CAAA,GAAI,QAAA,CAAA,CAAA;aAAG,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;eAAuB,MAAA,CAAO,IAAI,KAAJ,CAAU,QAAV,CAAP;MAAvB,CAAZ;IAAH;WACJ,CAAA,MAAM,CAAA,CAAA,CAAN;EAJuB,EAnKzB;;;EA6KA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,KAAA,CAAA,CAAA,GAAA,EAAA;;;aAGhC,CAAA,MAAM,sBAAA,CAAA,CAAN;IAHgC,CAAA,IAAlC;;AA7KA",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'NODEXH/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nFS                        = require 'fs'\nPATH                      = require 'path'\nSMC                       = require 'source-map'\nStackTracey               = require 'stacktracey'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  validate }              = types\n\n#-----------------------------------------------------------------------------------------------------------\nread_file_sync = ( path ) -> FS.readFileSync path, { encoding: 'utf-8', }\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  SMR   = require 'source-map-resolve'\n  error = new Error \"^hengist/nodexh@4458^ simulated error\"\n  path  = __filename\n  code  = read_file_sync path\n  ref   = PATH.dirname path\n  debug { path, ref, }\n  try\n    d = SMR.resolveSync code, path, read_file_sync\n  catch error\n    # if error.code is 'ENOENT'\n    #   warn \"^4487^ file not found: #{rpr }\"\n    warn error.code, error.name\n    throw error\n  info '^330^', 'd.sourcesResolved:',   d.sourcesResolved\n  info '^330^', 'd.sourcesContent:',    d.sourcesContent\n  info '^330^', 'd.map:',               ( k for k of d.map )\n  info '^330^', 'd.map:',               d.map\n  info '^330^', 'd.url:',               d.url\n  info '^330^', 'd.sourcesRelativeTo:', d.sourcesRelativeTo\n  info '^330^', 'd.sourceMappingURL:',  d.sourceMappingURL\n  debug ( k for k of SMC )\n  # d.map.sourcesContent = d.sourcesContent\n  map = new SMC.SourceMapConsumer d.map\n  # map = await new SMC.SourceMapConsumer d.map\n  map.computeColumnSpans()\n  # debug '^2772^', map\n  for line in [ 1 .. 120 ]\n    column  = 3\n    bias1   = SMC.SourceMapConsumerLEAST_UPPER_BOUND\n    bias2   = SMC.SourceMapConsumerGREATEST_LOWER_BOUND\n    # urge '^7764^', { line, }, ( map.originalPositionFor { line, column: 3, bias: bias1, } ), ( map.originalPositionFor { line, column: 3, bias: bias2, } )\n    location  =  map.originalPositionFor { line, column, bias: bias1, }\n    # locations = map.originalPositionFor  { line, bias: bias1, }\n    continue unless location.line?\n    # generated_positions = map.allGeneratedPositionsFor { line: location.line, source: location.source, }\n    # locations = map.allGeneratedPositionsFor location\n    urge '^7764^', { line, }, location\n    for c in [ column .. column + 10 ]\n      location  =  map.originalPositionFor { line, column: c, bias: bias1, }\n      whisper location\n    # for gp in generated_positions\n    #   help '^7764^', ' ', gp\n    #   # help '^7764^', ' ', map.originalPositionFor { line: gp.line, column: gp.column, }\n    #   # urge '^7764^', ' ', map.originalPositionFor { line: gp.line, column: gp.lastColumn + 1, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n_demo_async = ->\n  h = ( x ) -> new Promise ( resolve, reject ) ->\n    s = ->\n      if x is 1 then throw new Error \"^227-1^ x cannot be 1\"; unreachable = yes\n      if x is 16 then return reject new Error \"^227-2^ x cannot be 16\"\n      resolve x ** 2\n    setTimeout s, 250\n  g = ( x ) -> new Promise ( resolve ) -> setTimeout ( -> resolve h x ** 2 ), 250\n  f = ( x ) -> new Promise ( resolve ) -> setTimeout ( -> resolve g x ** 2 ), 250\n  # --enable-source-maps --stack-trace-limit=100\n  urge await f 3\n  urge await f 2\n  # urge await f 1\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_async = ->\n  { findSourceMap, SourceMap } = require 'module'\n  validate.function findSourceMap\n  try\n    await _demo_async()\n  catch error\n    warn error\n  if error?\n    demo_stacktracey error\n    frame = ( new StackTracey error )[ 0 ] #.reverse()\n    # { callee, calleeShort, file, fileRelative, fileShort, fileName, line, column, } = frame\n    path = frame.file\n    # debug frames[ 0 ]\n    # [ path, line, column, ] = frames[ 0 ]\n    debug '^334^', findSourceMap #(path[, error])\n    debug '^334^', SourceMap #(path[, error])\n    debug '^334^', sourcemap = findSourceMap path, error\n    debug '^334^', ( k for k of sourcemap )\n    urge '^3736^', sourcemap.payload.file\n    # urge '^3736^', sourcemap.payload.version\n    urge '^3736^', sourcemap.payload.sources\n    # urge '^3736^', sourcemap.payload.sourcesContent\n    urge '^3736^', sourcemap.payload.names\n    # urge '^3736^', sourcemap.payload.mappings\n    # urge '^3736^', sourcemap.payload.sourceRoot\n    # for line in [ 1 .. 50 ]\n    #   column = 0\n    info '^767^', \"frame:\", frame\n    { line, column, } = frame\n    zbline            = line    - 1\n    zbcolumn          = column  - 1\n    p1 = sourcemap.findEntry zbline, zbcolumn\n    info '^767^', { line, column, zbline, zbcolumn, }\n    info '^767^', p1\n    info '^767^', { generated: { line: p1.generatedLine + 1, column: p1.generatedColumn + 1 }, original: { line: p1.originalLine + 1, column: p1.originalColumn + 1 }}\n    zbl = zbline\n    zbc = zbcolumn\n    loop\n      zbc++\n      break if zbc - zbcolumn > 6\n      p2 = sourcemap.findEntry zbl, zbc\n      urge '^930^', { line, column: zbc, }, p2\n    return\n      # continue if ( p1.originalLine is p2.originalLine ) and ( p1.originalColumn is p2.originalColumn )\n      # break\n    warn error.message\n    # throw error\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_stacktracey = ( error, handler ) ->\n  frames = ( new StackTracey error ) #.reverse()\n  for frame in frames\n    { callee, calleeShort, file, fileRelative, fileShort, fileName, line, column, } = frame\n    file    = null if file    in [ '', undefined, ]\n    callee  = null if callee  in [ '', undefined, ]\n    if file?\n      info 'stacktracey', [ file, line, column, callee, ]\n    else\n      info 'stacktracey', '——————————————————'\n  # resolve_locations frames, handler\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_async_handler = ->\n  exit_handler = ( error ) ->\n    setImmediate ->\n      setTimeout ( -> urge 'later' ), 500\n      debug '^33443^', error\n    return null\n  process.on 'uncaughtExceptionMonitor',  exit_handler\n  process.on 'unhandledRejection', exit_handler\n  throw new Error \"^4476^ an error\"\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_synchronous_await = ->\n  f = -> new Promise ( resolve, reject ) -> await g()\n  g = -> new Promise ( resolve, reject ) -> await h()\n  h = -> new Promise ( resolve, reject ) -> reject new Error \"foobar\"\n  await f()\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await demo()\n  # await demo_async()\n  await demo_synchronous_await()\n\n\n"
  ]
}