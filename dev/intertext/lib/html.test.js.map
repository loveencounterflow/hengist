{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/html.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/TESTS/HTML'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"must quote attribute value\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { isa\n    validate\n    type_of }               = INTERTEXT.types.export()\n  probes_and_matchers = [\n    [ \"\",           true,   null, ]\n    [ \"\\\"\",         true,   null, ]\n    [ \"'\",          true,   null, ]\n    [ \"<\",          true,   null, ]\n    [ \"<>\",         true,   null, ]\n    [ \"foo\",        false,  null, ]\n    [ \"foo bar\",    true,   null, ]\n    [ \"foo\\nbar\",   true,   null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      must_quote = not isa.intertext_html_naked_attribute_value probe\n      resolve must_quote\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DATOM.HTML._as_attribute_literal\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ \"\",           \"''\",                       null, ]\n    [ '\"',          '\\'\"\\'',                    null, ]\n    [ \"'\",          \"'&#39;'\",                  null, ]\n    [ \"<\",          \"'&lt;'\",                   null, ]\n    [ \"<>\",         \"'&lt;&gt;'\",               null, ]\n    [ \"foo\",        \"foo\",                      null, ]\n    [ \"foo bar\",    \"'foo bar'\",                null, ]\n    [ \"foo\\nbar\",   \"'foo&#10;bar'\",            null, ]\n    [ \"'<>'\",       \"'&#39;&lt;&gt;&#39;'\",     null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve HTML._as_attribute_literal probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"isa.intertext_html_tagname (1)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { isa\n    validate\n    type_of }               = INTERTEXT.types.export()\n  probes_and_matchers = [\n    [ \"\",             false,  null, ]\n    [ \"\\\"\",           false,  null, ]\n    [ \"'\",            false,  null, ]\n    [ \"<\",            false,  null, ]\n    [ \"<>\",           false,  null, ]\n    [ \"foo bar\",      false,  null, ]\n    [ \"foo\\nbar\",     false,  null, ]\n    [ \"foo\",          true,   null, ]\n    [ \"此は何ですか\", true,   null, ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve isa.intertext_html_tagname probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"isa.intertext_html_tagname (2)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { isa\n    validate\n    type_of }               = INTERTEXT.types.export()\n  probes = \"\"\"a abbr acronym address applet area article aside audio b base basefont bdi bdo bgsound big\n  blink blockquote body br button canvas caption center cite code col colgroup command datalist dd del\n  details dfn dialog dir div dl dt em embed fieldset figcaption figure font footer form frame frameset h1 h2\n  h3 h4 h5 h6 head header hgroup hr html i iframe img input ins isindex kbd keygen label legend li link\n  listing main map mark marquee menu meta meter multicol nav nextid nobr noembed noframes noscript object ol\n  optgroup option output p param plaintext pre progress q rb rp rt ruby s samp script section select small\n  source spacer span strike strong sub summary sup table tbody td textarea tfoot th thead time title tr\n  track tt u ul video wbr xmp\n  foo:bar foo-bar Foo-bar\n  \"\"\".split /\\s+/\n  for probe in probes\n    await T.perform probe, true, null, -> new Promise ( resolve ) ->\n      resolve isa.intertext_html_tagname probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (singular tags)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '^foo', ],                                    \"<foo></foo>\",                                       ]\n    [ [ '^foo', { height: 42,               }, ],     \"<foo height=42></foo>\",                             ]\n    [ [ '^foo', { class: 'plain',           }, ],     \"<foo class=plain></foo>\",                           ]\n    [ [ '^foo', { class: 'plain hilite',    }, ],     \"<foo class='plain hilite'></foo>\",                  ]\n    [ [ '^foo', { editable: true,           }, ],     \"<foo editable></foo>\",                              ]\n    [ [ '^foo', { empty: '',                }, ],     \"<foo empty=''></foo>\",                              ]\n    [ [ '^foo', { specials: '<\\n\\'\"&>',     }, ],     \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'></foo>\",  ]\n    [ [ '^something', { one: 1, two: 2,     }, ],     \"<something one=1 two=2></something>\",               ]\n    [ [ '^something', { z: 'Z', a: 'A',     }, ],     \"<something a=A z=Z></something>\",                   ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (closing tags)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '>foo', ],                                    \"</foo>\",           ]\n    [ [ '>foo', { height: 42,               }, ],     \"</foo>\",           ]\n    [ [ '>foo', { class: 'plain',           }, ],     \"</foo>\",           ]\n    [ [ '>foo', { class: 'plain hilite',    }, ],     \"</foo>\",           ]\n    [ [ '>foo', { editable: true,           }, ],     \"</foo>\",           ]\n    [ [ '>foo', { empty: '',                }, ],     \"</foo>\",           ]\n    [ [ '>foo', { specials: '<\\n\\'\"&>',     }, ],     \"</foo>\",           ]\n    [ [ '>something', { one: 1, two: 2,     }, ],     \"</something>\",     ]\n    [ [ '>something', { z: 'Z', a: 'A',     }, ],     \"</something>\",     ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (opening tags)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '<foo', ],                                    \"<foo>\",                                        ]\n    [ [ '<foo', { height: 42,               }, ],     \"<foo height=42>\",                              ]\n    [ [ '<foo', { class: 'plain',           }, ],     \"<foo class=plain>\",                            ]\n    [ [ '<foo', { class: 'plain hilite',    }, ],     \"<foo class='plain hilite'>\",                   ]\n    [ [ '<foo', { editable: true,           }, ],     \"<foo editable>\",                               ]\n    [ [ '<foo', { empty: '',                }, ],     \"<foo empty=''>\",                               ]\n    [ [ '<foo', { specials: '<\\n\\'\"&>',     }, ],     \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'>\",   ]\n    [ [ '<something', { one: 1, two: 2,     }, ],     \"<something one=1 two=2>\",                      ]\n    [ [ '<something', { z: 'Z', a: 'A',     }, ],     \"<something a=A z=Z>\",                          ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (texts)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '^text', ],                                    \"\",                            ]\n    [ [ '^text', { height: 42,               }, ],     \"\",                            ]\n    [ [ '^text', { text: '<me & you>\\n',     }, ],     \"&lt;me &amp; you&gt;\\n\",      ]\n    [ [ '<text', { z: 'Z', a: 'A',           }, ],     \"<text a=A z=Z>\",              ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (opening tags w/ $value)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '<foo', ],                                    \"<foo>\",                                        ]\n    [ [ '<foo', { ignored: 'xxx', $value: { height: 42,              }, }, ], \"<foo height=42>\",                              ]\n    [ [ '<foo', { ignored: 'xxx', $value: { class: 'plain',          }, }, ], \"<foo class=plain>\",                            ]\n    [ [ '<foo', { ignored: 'xxx', $value: { class: 'plain hilite',   }, }, ], \"<foo class='plain hilite'>\",                   ]\n    [ [ '<foo', { ignored: 'xxx', $value: { editable: true,          }, }, ], \"<foo editable>\",                               ]\n    [ [ '<foo', { ignored: 'xxx', $value: { empty: '',               }, }, ], \"<foo empty=''>\",                               ]\n    [ [ '<foo', { ignored: 'xxx', $value: { specials: '<\\n\\'\"&>',    }, }, ], \"<foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'>\",   ]\n    [ [ '<something', { ignored: 'xxx', $value: { one: 1, two: 2,    }, }, ], \"<something one=1 two=2>\",                      ]\n    [ [ '<something', { ignored: 'xxx', $value: { z: 'Z', a: 'A',    }, }, ], \"<something a=A z=Z>\",                          ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (system tags)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [[\"~foo\"],\"<x-sys x-key=foo><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"~foo\",{\"height\":42}],\"<x-sys x-key=foo height=42><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"[foo\",{\"class\":\"plain\"}],\"<x-sys x-key=foo class=plain><x-sys-key>foo</x-sys-key>\",null]\n    [[\"[foo\",{\"class\":\"plain hilite\"}],\"<x-sys x-key=foo class='plain hilite'><x-sys-key>foo</x-sys-key>\",null]\n    [[\"]foo\",{\"editable\":true}],\"</x-sys>\",null]\n    [[\"]foo\",{\"empty\":\"\"}],\"</x-sys>\",null]\n    [[\"~foo\",{\"specials\":\"<\\n'\\\"&>\"}],\"<x-sys x-key=foo specials='&lt;&#10;&#39;\\\"&amp;&gt;'><x-sys-key>foo</x-sys-key></x-sys>\",null]\n    [[\"~something\",{\"one\":1,\"two\":2}],\"<x-sys x-key=something one=1 two=2><x-sys-key>something</x-sys-key></x-sys>\",null]\n    [[\"~something\",{\"z\":\"Z\",\"a\":\"A\"}],\"<x-sys x-key=something a=A z=Z><x-sys-key>something</x-sys-key></x-sys>\",null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (raw pseudo-tag)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '^raw', ],                                    \"\",                                       ]\n    [ [ '^raw', { height: 42,               }, ],     \"\",                                       ]\n    [ [ '^raw', { text: '<\\n\\'\"&>',           }, ],   '<\\n\\'\"&>',                               ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (doctype)\" ] = ( T, done ) ->\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { HTML, }                 = INTERTEXT\n  probes_and_matchers = [\n    [ [ '^doctype', ],                  \"<!DOCTYPE html>\",        ]\n    [ [ '^doctype', { height: 42, }, ], \"<!DOCTYPE html>\",        ]\n    [ [ '^doctype', \"obvious\", ],       \"<!DOCTYPE obvious>\",     ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      d = new_datom probe...\n      resolve HTML.html_from_datoms d\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (1)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { html_from_datoms\n    tag }                 = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[\"div\"],\"<div></div>\",null]\n    [[\"div#x32\"],\"<div id=x32></div>\",null]\n    [[\"div.foo\"],\"<div class=foo></div>\",null]\n    [[\"div#x32.foo\"],\"<div class=foo id=x32></div>\",null]\n    [[\"div#x32\",{\"alt\":\"nice guy\"}],\"<div alt='nice guy' id=x32></div>\",null]\n    [[\"div#x32\",{\"alt\":\"nice guy\"},\" a > b & b > c => a > c\"],\"<div alt='nice guy' id=x32> a &gt; b &amp; b &gt; c =&gt; a &gt; c</div>\",null]\n    [[\"foo-bar\"],\"<foo-bar></foo-bar>\",null]\n    [[\"foo-bar#c55\"],\"<foo-bar id=c55></foo-bar>\",null]\n    [[\"foo-bar.blah.beep\"],\"<foo-bar class='blah beep'></foo-bar>\",null]\n    [[\"foo-bar#c55.blah.beep\"],\"<foo-bar class='blah beep' id=c55></foo-bar>\",null]\n    [[\"#c55\"],null,\"not a valid intertext_html_tagname\"]\n    [[\".blah.beep\"],null,\"not a valid intertext_html_tagname\"]\n    [[\"...#\"],null,\"illegal compact tag syntax\"]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      # urge html_from_datoms tag probe...\n      resolve html_from_datoms tag probe...\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (2)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { html_from_datoms\n    tag }                 = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  urge ds = tag 'article#c2', { editable: true, }, ( tag 'h1', \"A truly curious Coincidence\" )\n  T.eq ds, [\n    { '$key': '<article', id: 'c2', editable: true },\n    { '$key': '<h1' },\n    { '$key': '^text', text: 'A truly curious Coincidence' },\n    { '$key': '>h1' }\n    { '$key': '>article' }\n    ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML.html_from_datoms (3)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { html_from_datoms\n    tag }                 = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  urge ds = tag 'article#c2', { editable: true, },\n    tag 'h1', \"A truly curious Coincidence\"\n    tag 'p.noindent', ( tag 'em', \"Seriously,\" ), \" he said, \", ( tag 'em', \"we'd better start cooking now.\" )\n  #.........................................................................................................\n  whisper jr html_from_datoms ds\n  T.eq ( html_from_datoms ds ), \"<article editable id=c2><h1>A truly curious Coincidence</h1><p class=noindent><em>Seriously,</em> he said, <em>we'd better start cooking now.</em></p></article>\"\n  T.eq ds, [\n    { '$key': '<article', id: 'c2', editable: true },\n    { '$key': '<h1' },\n    { '$key': '^text', text: 'A truly curious Coincidence' },\n    { '$key': '>h1' },\n    { '$key': '<p', class: 'noindent' },\n    { '$key': '<em' },\n    { '$key': '^text', text: 'Seriously,' },\n    { '$key': '>em' },\n    { '$key': '^text', text: ' he said, ' },\n    { '$key': '<em' },\n    { '$key': '^text', text: \"we'd better start cooking now.\" },\n    { '$key': '>em' },\n    { '$key': '>p' },\n    { '$key': '>article' }\n    ]\n  #.........................................................................................................\n  done()\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"HTML.datoms_as_nlhtml (1)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n#   { datoms_as_nlhtml\n#     datoms_from_html }        = INTERTEXT.HTML.export()\n#   #.........................................................................................................\n#   urge jr ds = datoms_from_html \"\"\"\n#     <h1>A Star is Born</h1><p class=noindent>Stars are born when hydrogen amasses.</p><p>When they are <em>big</em> enough, nuclear fusion starts.</p>\n#     \"\"\"\n#   #.........................................................................................................\n#   help datoms_as_nlhtml ds\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML specials\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { html_from_datoms\n    tag }                 = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[\"script\",( -> square = ( ( x ) -> x ** 2 ); console.log square 42 )],[[{\"$key\":\"<script\"},{\"text\":\"(function() {\\n            var square;\\n            square = (function(x) {\\n              return x ** 2;\\n            });\\n            return console.log(square(42));\\n          })();\",\"$key\":\"^raw\"},{\"$key\":\">script\"}],\"<script>(function() {\\n            var square;\\n            square = (function(x) {\\n              return x ** 2;\\n            });\\n            return console.log(square(42));\\n          })();</script>\"],null]\n    [[\"script\",\"path to app.js\"],[[{\"src\":\"path to app.js\",\"$key\":\"^script\"}],\"<script src='path to app.js'></script>\"],null]\n    [[\"css\",\"path/to/styles.css\"],[[{\"rel\":\"stylesheet\",\"href\":\"path/to/styles.css\",\"$key\":\"^link\"}],\"<link href=path/to/styles.css rel=stylesheet>\"],null]\n    [[\"text\",\"a b c < & >\"],[[{\"text\":\"a b c < & >\",\"$key\":\"^text\"}],\"a b c &lt; &amp; &gt;\"],null]\n    [[\"raw\",\"a b c < & >\"],[[{\"text\":\"a b c < & >\",\"$key\":\"^raw\"}],\"a b c < & >\"],null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      [ key, P..., ] = probe\n      result  = INTERTEXT.HTML[ key ] P...\n      result  = [ result, ( html_from_datoms result ), ]\n      resolve result\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML Cupofhtml (1)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  HTML                      = INTERTEXT.HTML\n  cupofhtml                 = new HTML.Cupofhtml()\n  { isa\n    type_of }               = INTERTEXT.types.export()\n  #.........................................................................................................\n  T.eq cupofhtml.settings.flatten, true\n  T.ok isa.list cupofhtml.collector\n  T.ok cupofhtml.target is cupofhtml.collector\n  T.ok isa.function cupofhtml.cram\n  T.ok isa.function cupofhtml.expand\n  T.ok isa.asyncfunction cupofhtml.expand_async\n  T.ok isa.function cupofhtml.tag\n  T.ok isa.function cupofhtml.css\n  T.ok isa.function cupofhtml.script\n  T.ok isa.function cupofhtml.raw\n  T.ok isa.function cupofhtml.text\n  #.........................................................................................................\n  { cram\n    expand\n    expand_async\n    tag\n    raw\n    text\n    script\n    css }                   = cupofhtml.export()\n  T.ok isa.function cram\n  T.ok isa.function expand\n  T.ok isa.asyncfunction expand_async\n  T.ok isa.function tag\n  T.ok isa.function text\n  T.ok isa.function raw\n  T.ok isa.function script\n  T.ok isa.function css\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML Cupofhtml (2)\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { isa\n    type_of }               = INTERTEXT.types.export()\n  HTML                      = INTERTEXT.HTML\n  cupofhtml                 = new HTML.Cupofhtml()\n  { cram\n    expand\n    expand_async\n    tag\n    raw\n    text\n    script\n    css }                   = cupofhtml.export()\n  { datoms_from_html\n    html_from_datoms }      = HTML.export()\n  #.........................................................................................................\n  # debug '^33343^', ( k for k of cupofhtml )\n  # debug '^33343^', ( k for k of cupofhtml.export() )\n  tag 'paper', ->\n    css     './styles.css'\n    script  './awesome.js'\n    script ->\n      console.log \"pretty darn cool\"\n    tag 'article', ->\n      tag 'title', \"Some Thoughts on Nested Data Structures\"\n      tag 'p', ->\n        text        \"An interesting \"\n        tag   'em', \"fact\"\n        text        \" about CupOfJoe is that you \"\n        tag   'em', -> text \"can\"\n        tag  'strong', \" nest\", \" with both sequences\", \" and function calls.\"\n      tag 'p', ->\n        text \"Text is escaped before output: <&>, \"\n        raw  \"but can also be included literally with `raw`: <&>.\"\n    tag 'conclusion', ->\n      text  \"With CupOfJoe, you don't need brackets.\"\n  datoms = expand()\n  html   = html_from_datoms datoms\n  info datoms\n  urge jr html\n  T.eq html, \"<paper><link href=./styles.css rel=stylesheet><script src=./awesome.js></script><script>(function() {\\n        return console.log(\\\"pretty darn cool\\\");\\n      })();</script><article><title>Some Thoughts on Nested Data Structures</title><p>An interesting <em>fact</em> about CupOfJoe is that you <em>can</em><strong> nest with both sequences and function calls.</strong></p><p>Text is escaped before output: &lt;&amp;&gt;, but can also be included literally with `raw`: <&>.</p></article><conclusion>With CupOfJoe, you don't need brackets.</conclusion></paper>\"\n  #.........................................................................................................\n  done() if done?\n\n\n############################################################################################################\nif module is require.main then do => # await do =>\n  # debug ( k for k of ( require '../..' ).HTML ).sort().join ' '\n  # await @_demo()\n  # test @\n\t# test @[ \"must quote attribute value\" ]\n\t# test @[ \"DATOM.HTML._as_attribute_literal\" ]\n\t# test @[ \"isa.intertext_html_tagname (1)\" ]\n\t# test @[ \"isa.intertext_html_tagname (2)\" ]\n\t# test @[ \"HTML.html_from_datoms (singular tags)\" ]\n\t# test @[ \"HTML.html_from_datoms (closing tags)\" ]\n\t# test @[ \"HTML.html_from_datoms (opening tags)\" ]\n\t# test @[ \"HTML.html_from_datoms (texts)\" ]\n\t# test @[ \"HTML.html_from_datoms (opening tags w/ $value)\" ]\n\t# test @[ \"HTML.html_from_datoms (system tags)\" ]\n\t# test @[ \"HTML.html_from_datoms (raw pseudo-tag)\" ]\n\t# test @[ \"HTML.html_from_datoms (doctype)\" ]\n\t# test @[ \"HTML.html_from_datoms (1)\" ]\n\t# test @[ \"HTML.html_from_datoms (2)\" ]\n\t# test @[ \"HTML.html_from_datoms (3)\" ]\n\t# test @[ \"HTML specials\" ]\n\t# test @[ \"HTML demo\" ]\n\ttest @[ \"HTML Cupofhtml (1)\" ]\n\t# test @[ \"HTML Cupofhtml (2)\" ]\n\n\n"
  ]
}