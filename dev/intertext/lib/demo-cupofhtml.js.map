{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-cupofhtml.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/INTERTEXT/DEMO-CUPOFHTML'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  INTERTEXT = require '../../../apps/intertext'\n  coh       = new INTERTEXT.CUPOFHTML.Cupofhtml { flatten: true, }\n  { tag\n    H\n    S }     = coh.export()\n  S.doctype 'html'\n  tag 'mytag'\n  H.title \"A Short Introduction\"\n  S.link_css  'https://example.com/style.css'\n  S.newline()\n  S.script  'https://example.com/script.js'\n  S.newline()\n  S.script  -> console.log 'helo world'\n  S.newline()\n  H.h1 { id: 'c334', }, \"The Importance of Being Earnest\"\n  H.div { id: 'c334', }, ->\n    S.comment \"just a comment\"\n    S.text    \"foo\", \"bar\"\n    S.raw     \"foo\", \"bar\"\n    S.text    \"helo\"\n  H.p \"Some remarks\"\n\n  # tag 'mytag', { style: \"display:block;width:50%;\", }\n  # tag 'othertag', { style: \"display:block;\", }, \"some \", ->\n  #   tag 'bold', \"bold content\"\n  #   coh.text \" here indeed.\"\n  # tag 'p', ->\n  #   coh.text \"It is very \", ( -> tag 'em', \"convenient\" ), \" to write\"\n  # tag 'p', ->\n  #   coh.text \"It is very \"\n  #   tag 'em', \"convenient\"\n  #   coh.text \" to write\"\n  # tag 'mytag', =>\n  #   tag 'h1', => #, { id: 'c67', }\n  #     tag 'p', \"helo world\"\n  # debug '^3344^', coh\n  ds = coh.expand()\n  echo CND.blue d for d in ds\n  trim = ( text ) -> text.replace /\\s+$/, ''\n  urge '^3344^', '\\n' + trim INTERTEXT.HTML.html_from_datoms ds\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_comprehensive_tagnames = ->\n  INTERTEXT = require '../../../apps/intertext'\n  html      = new INTERTEXT.CUPOFHTML.Cupofhtml { flatten: true, }\n  urge INTERTEXT.HTML._parse_compact_tagname 'mytag'\n  urge INTERTEXT.HTML._parse_compact_tagname 'mytag#id8702'\n  urge INTERTEXT.HTML._parse_compact_tagname 'mytag.flat.draggable'\n  urge INTERTEXT.HTML._parse_compact_tagname 'mytag#id77787.flat.draggable'\n  # debug '^3344^', h\n  # ds = h.expand()\n  # info d for d in ds\n  # debug '^3344^', INTERTEXT.HTML.html_from_datoms ds\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_cupofhtml_without_newlines = ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  #.........................................................................................................\n  cupofhtml                 = new Cupofhtml { newlines: false, }\n  info cupofhtml.settings\n  info CND.truth INTERTEXT.types.equals cupofhtml.settings.newlines, false\n  #.........................................................................................................\n  cupofhtml                 = new Cupofhtml { newlines: true, }\n  info cupofhtml.settings\n  info CND.truth INTERTEXT.types.equals cupofhtml.settings.newlines, true\n  #.........................................................................................................\n  cupofhtml                 = new Cupofhtml()\n  info cupofhtml.settings\n  info CND.truth INTERTEXT.types.equals cupofhtml.settings.newlines, true\n\n\n############################################################################################################\nif module is require.main then do =>\n  # demo()\n  demo_2()\n  demo_comprehensive_tagnames()\n  demo_cupofhtml_without_newlines()\n\n\n\n\n"
  ]
}