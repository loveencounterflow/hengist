{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/cupofhtml.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/TESTS/HTML'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HTML specials\" ] = ( T, done ) ->\n  INTERTEXT \t\t\t\t\t\t\t\t= require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  #.........................................................................................................\n  probes_and_matchers = [\n    [[\"script\",( -> square = ( ( x ) -> x ** 2 ); console.log square 42 )],[[{\"$key\":\"<script\"},{\"text\":\"(function() {\\n            var square;\\n            square = (function(x) {\\n              return x ** 2;\\n            });\\n            return console.log(square(42));\\n          })();\",\"$key\":\"^raw\"},{\"$key\":\">script\"}],\"<script>(function() {\\n            var square;\\n            square = (function(x) {\\n              return x ** 2;\\n            });\\n            return console.log(square(42));\\n          })();</script>\"],null]\n    [[\"script\",\"path to app.js\"],[[{\"src\":\"path to app.js\",\"$key\":\"^script\"}],\"<script src='path to app.js'></script>\"],null]\n    [[\"link_css\",\"path/to/styles.css\"],[[{\"rel\":\"stylesheet\",\"href\":\"path/to/styles.css\",\"$key\":\"^link\"}],\"<link href=path/to/styles.css rel=stylesheet>\"],null]\n    [[\"text\",\"a b c < & >\"],[[{\"text\":\"a b c < & >\",\"$key\":\"^text\"}],\"a b c &lt; &amp; &gt;\"],null]\n    [[\"raw\",\"a b c < & >\"],[[{\"text\":\"a b c < & >\",\"$key\":\"^raw\"}],\"a b c < & >\"],null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    coh = new Cupofhtml()\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      [ key, P..., ] = probe\n      coh.S[ key ] P...\n      html  = coh.as_html()\n      ds    = coh.last_expansion\n      for d, idx in ds\n        ds[ idx ] = coh.DATOM.lets d, ( d ) -> delete d.$\n      # debug ds\n      resolve [ ds, html, ]\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML (1)\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  cupofhtml                 = new Cupofhtml()\n  { isa\n    type_of }               = INTERTEXT.types.export()\n  #.........................................................................................................\n  T.eq cupofhtml.settings.flatten, true\n  T.ok isa.list cupofhtml.collector\n  T.ok isa.function cupofhtml.cram\n  T.ok isa.function cupofhtml.expand\n  T.ok isa.function cupofhtml.tag\n  T.ok isa.function cupofhtml.S.link_css\n  T.ok isa.function cupofhtml.S.script\n  T.ok isa.function cupofhtml.S.raw\n  T.ok isa.function cupofhtml.S.text\n  T.ok isa.function cupofhtml.as_html\n  #.........................................................................................................\n  { cram\n    expand\n    tag\n    H\n    S }                   = cupofhtml.export()\n  T.ok isa.function cram\n  T.ok isa.function expand\n  T.ok isa.function tag\n  T.ok isa.function S.text\n  T.ok isa.function S.raw\n  T.ok isa.function S.script\n  T.ok isa.function S.link_css\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML (2)\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  cupofhtml                 = new Cupofhtml()\n  { cram\n    expand\n    tag\n    S\n    H   }                   = cupofhtml.export()\n  { datoms_from_html\n    html_from_datoms }      = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  # debug '^33343^', ( k for k of cupofhtml )\n  # debug '^33343^', ( k for k of cupofhtml.export() )\n  cupofhtml.new_tag 'paper',      { $blk: true, }\n  cupofhtml.new_tag 'conclusion', { $blk: true, }\n  H.paper ->\n    S.link_css  './styles.css'\n    S.script  './awesome.js'\n    S.script ->\n      console.log \"pretty darn cool\"\n    S.newline()\n    H.article ->\n      H.h3 \"Some Thoughts on Nested Data Structures\"\n      H.p ->\n        S.text  \"An interesting \"\n        tag     'em', \"fact\"\n        S.text  \" about CupOfJoe is that you \"\n        tag     'em', -> S.text \"can\"\n        tag     'strong', \" nest\", \" with both sequences\", \" and function calls.\"\n      # H.p ->\n      H.p ->\n        S.text \"Text is escaped before output: <&>, \"\n        S.raw  \"but can also be included literally with `raw`: <&>.\"\n    H.conclusion { id: 'c2334', class: 'hilite big', }, ->\n      S.text  \"With CupOfJoe, you don't need brackets.\"\n  html   = cupofhtml.as_html()\n  info cupofhtml.last_expansion\n  urge '\\n' + html\n  # T.eq html, \"<paper><link href=./styles.css rel=stylesheet><script src=./awesome.js></script><script>(function() {\\n        return console.log(\\\"pretty darn cool\\\");\\n      })();</script><article><title>Some Thoughts on Nested Data Structures</title><p>An interesting <em>fact</em> about CupOfJoe is that you <em>can</em><strong> nest with both sequences and function calls.</strong></p><p>Text is escaped before output: &lt;&amp;&gt;, but can also be included literally with `raw`: <&>.</p></article><conclusion>With CupOfJoe, you don't need brackets.</conclusion></paper>\"\n  T.eq html.trim(), \"\"\"<paper><link href=./styles.css rel=stylesheet><script src=./awesome.js></script><script>(function() {\n            return console.log(\"pretty darn cool\");\n          })();</script>\n    <article><h3>Some Thoughts on Nested Data Structures</h3>\n\n    <p>An interesting <em>fact</em> about CupOfJoe is that you <em>can</em><strong> nest with both sequences and function calls.</strong></p>\n\n    <p>Text is escaped before output: &lt;&amp;&gt;, but can also be included literally with `raw`: <&>.</p>\n\n    </article>\n\n    <conclusion class='hilite big' id=c2334>With CupOfJoe, you don't need brackets.</conclusion>\n\n    </paper>\n    \"\"\"\n  #.........................................................................................................\n  done() if done?\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML w/o newlines\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  cupofhtml                 = new Cupofhtml { newlines: false, }\n  { cram\n    expand\n    tag\n    S\n    H   }                   = cupofhtml.export()\n  { datoms_from_html\n    html_from_datoms }      = INTERTEXT.HTML.export()\n  #.........................................................................................................\n  T.eq cupofhtml.settings.newlines, false\n  #.........................................................................................................\n  # debug '^33343^', ( k for k of cupofhtml )\n  # debug '^33343^', ( k for k of cupofhtml.export() )\n  cupofhtml.new_tag 'paper',      { $blk: true, }\n  cupofhtml.new_tag 'conclusion', { $blk: true, }\n  H.paper ->\n    S.link_css  './styles.css'\n    S.script  './awesome.js'\n    S.script ->\n      console.log \"pretty darn cool\"\n    S.newline()\n    H.article ->\n      H.h3 \"Some Thoughts on Nested Data Structures\"\n      H.p ->\n        S.text  \"An interesting \"\n        tag     'em', \"fact\"\n        S.text  \" about CupOfJoe is that you \"\n        tag     'em', -> S.text \"can\"\n        tag     'strong', \" nest\", \" with both sequences\", \" and function calls.\"\n      # H.p ->\n      H.p ->\n        S.text \"Text is escaped before output: <&>, \"\n        S.raw  \"but can also be included literally with `raw`: <&>.\"\n    H.conclusion { id: 'c2334', class: 'hilite big', }, ->\n      S.text  \"With CupOfJoe, you don't need brackets.\"\n  html   = cupofhtml.as_html()\n  info cupofhtml.last_expansion\n  urge rpr html\n  T.eq html, '<paper><link href=./styles.css rel=stylesheet><script src=./awesome.js></script><script>(function() {\\n        return console.log(\"pretty darn cool\");\\n      })();</script>\\n<article><h3>Some Thoughts on Nested Data Structures</h3><p>An interesting <em>fact</em> about CupOfJoe is that you <em>can</em><strong> nest with both sequences and function calls.</strong></p><p>Text is escaped before output: &lt;&amp;&gt;, but can also be included literally with `raw`: <&>.</p></article><conclusion class=\\'hilite big\\' id=c2334>With CupOfJoe, you don\\'t need brackets.</conclusion></paper>'\n  #.........................................................................................................\n  done() if done?\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML w/ arbitrary tags\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml }             = INTERTEXT.CUPOFHTML\n  cupofhtml                 = new Cupofhtml { newlines: false, }\n  T.eq ( cupofhtml.tag 'arbitrary1' ), null\n  cupofhtml.new_tag 'arbitrary2'\n  T.eq cupofhtml.H.arbitrary2(), null\n  T.eq cupofhtml.as_html(), \"<arbitrary1></arbitrary1><arbitrary2></arbitrary2>\"\n  ds = cupofhtml.last_expansion\n  ds = ( ( cupofhtml.DATOM.lets d, ( d ) -> delete d.$ ) for d in ds )\n  T.eq ds, [\n    { '$key': '^arbitrary1' }\n    { '$key': '^arbitrary2' } ]\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML w/ new tags, specials by way of subclassing\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml\n    Tags\n    Specials }             = INTERTEXT.CUPOFHTML\n  class Mytags extends Tags\n    arbitrary:       ( P... ) => @_.tag 'arbitrary', { $blk: true, foo: 'bar', }, P...\n  class Mycupofhtml extends Cupofhtml\n    H: Mytags\n  mc = new Mycupofhtml { newlines: true, }\n  T.eq mc.H.arbitrary(), null\n  T.eq mc.as_html(), \"<arbitrary foo=bar></arbitrary>\\n\\n\"\n  ds = mc.last_expansion\n  ds = ( ( mc.DATOM.lets d, ( d ) -> delete d.$ ) for d in ds )\n  T.eq ds, [ { '$blk': true, foo: 'bar', '$key': '^arbitrary' } ]\n  #.........................................................................................................\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUPOFHTML tag with literal text\" ] = ( T, done ) ->\n  INTERTEXT                 = require '../../../apps/intertext'\n  { Cupofhtml\n    Tags\n    Specials }             = INTERTEXT.CUPOFHTML\n  c = new Cupofhtml()\n  c.tag 'earmark', -> \"42\"\n  T.eq c.as_html(), \"<earmark>42</earmark>\"\n  c = new Cupofhtml()\n  c.tag 'earmark', -> 42\n  try c.as_html() catch error\n    T.ok /unable to convert a float to HTML/.test error.message\n  T.ok error?\n  #.........................................................................................................\n  done()\n\n\n############################################################################################################\nif module is require.main then do => # await do =>\n  # debug ( k for k of ( require '../..' ).HTML ).sort().join ' '\n  # await @_demo()\n  # test @\n  # test @[ \"CUPOFHTML w/ new tags, specials by way of subclassing\" ]\n  test @[ \"CUPOFHTML tag with literal text\" ]\n  # test @[ \"HTML specials\" ]\n  # test @[ \"CUPOFHTML (1)\" ]\n  # test @[ \"CUPOFHTML (2)\" ]\n  # test @[ \"CUPOFHTML w/o newlines\" ]\n\n\n\n"
  ]
}