{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB;;EAC5B,GAAA,GAA4B,KAjB5B;;;EAoBA,IAAC,CAAA,OAAD,CAAS,qBAAT,EACE;IAAA,KAAA,EACE;MAAA,eAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT;IAAxC;EADF,CADF,EApBA;;;EAyBA,IAAC,CAAA,OAAD,CAAS,eAAT,EACE;IAAA,KAAA,EACE;MAAA,eAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAAxC;MACA,yBAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAC,CAAC,EAArB;MAAT;IADxC;EADF,CADF,EAzBA;;;;;EAgCA,IAAC,CAAA,OAAD,CAAS,qBAAT,EACE;IAAA,KAAA,EACE;MAAA,eAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT;IAAxC;EADF,CADF,EAhCA;;;;;EAsCA,IAAC,CAAA,QAAD,GAEE,CAAA;;IAAA,mBAAA,EAME,CAAA;;;;;;MAAA,MAAA,EAAY,MAAZ;MACA,IAAA,EAAY,IADZ;MAEA,IAAA,EAAY;IAFZ;EANF;AAxCF",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS-PARSER/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nDba                       = null\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'gdb_constructor_cfg',\n  tests:\n    \"@isa.object x\":                        ( x ) -> @isa.object x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'gdb_node_body',\n  tests:\n    \"@isa.object x\":                        ( x ) -> @isa.object x\n    \"@isa.nonempty_text x.id\":              ( x ) -> @isa.nonempty_text x.id\n    # \"@isa_optional.boolean x.echo\":         ( x ) -> @isa_optional.boolean x.echo\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'gdb_edge_properties',\n  tests:\n    \"@isa.object x\":                        ( x ) -> @isa.object x\n    # \"@isa.nonempty_text x.id\":              ( x ) -> @isa.nonempty_text x.id\n\n#-----------------------------------------------------------------------------------------------------------\n@defaults =\n  #.........................................................................................................\n  gdb_constructor_cfg:\n    # _temp_prefix: '_dba_temp_'\n    # readonly:     false\n    # create:       true\n    # overwrite:    false\n    # timeout:      5000\n    schema:     'main'\n    path:       null\n    echo:       false\n\n"
  ]
}