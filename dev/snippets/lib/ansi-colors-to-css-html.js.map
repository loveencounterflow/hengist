{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ansi-colors-to-css-html.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,UAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,OAAA;;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;;;EAkBA,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,MADF,EAEE,OAFF,EAGE,QAHF,EAIE,gBAJF,CAAA,GAI4B,KAAK,CAAC,MAAN,CAAA,CAJ5B;;EAKA,GAAA,GAA4B,MAAM,CAAC;;EACnC,GAAA,GAA4B,OAAA,CAAQ,mBAAR;;EAC5B,UAAA,GAA4B,OAAA,CAAQ,iBAAR;;EAC5B,MAAA,GAA4B;;EAG5B,QAAA,GAEE,CAAA;;IAAA,MAAA,EAAQ,QAAA,CAAE,IAAF,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,OAArB,EAA8B,IAA9B,EAAJ;;MAEI,MAAM,CAAC,IAAP,CAAY,IAAZ;AACA,aAAO;IAJD,CAAR;;IAOA,MAAA,EAAQ,QAAA,CAAE,CAAF,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,KAArB,EAA4B,CAA5B;AACA,aAAO;IAFD,CAPR;;IAYA,MAAA,EAAQ,QAAA,CAAE,IAAF,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,SAArB,EAAgC,IAAI,CAAC,UAAL,CAAgB,CAAhB,CAAhC;AACA,aAAO;IAFD,CAZR;;IAiBA,MAAA,EAAQ,QAAA,CAAE,SAAF,EAAa,UAAb,EAAyB,IAAzB,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,KAArB,EAA4B,SAA5B,EAAuC,UAAvC,EAAmD,IAAnD;AACA,cAAO,IAAP;AAAA,aACO,GAAI,mCADX;UAEI,IAAG,UAAU,CAAC,MAAX,KAAqB,CAAxB;YACE,IAAG,UAAU,CAAE,CAAF,CAAV,KAAmB,CAAE,WAAxB;cACE,MAAM,CAAC,IAAP,CAAY,SAAZ,EADF;aAAA,MAAA;cAGE,KAHF;aADF;;AADG;AADP;UAQI;AARJ;AASA,aAAO;IAXD,CAjBR;;IA+BA,MAAA,EAAQ,QAAA,CAAE,SAAF,EAAa,IAAb,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,KAArB,EAA4B,SAA5B,EAAuC,IAAvC;AACA,aAAO;IAFD,CA/BR;;IAoCA,MAAA,EAAQ,QAAA,CAAE,SAAF,EAAa,UAAb,EAAyB,IAAzB,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,UAArB,EAAiC,SAAjC,EAA4C,UAA5C,EAAwD,IAAxD;AACA,aAAO;IAFD,CApCR;;IAyCA,MAAA,EAAQ,QAAA,CAAE,GAAF,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,SAArB,EAAgC,GAAhC;AACA,aAAO;IAFD,CAzCR;;IA8CA,MAAA,EAAQ,QAAA,CAAA,CAAA;MACN,IAAA,CAAK,cAAL,EAAqB,YAArB;AACA,aAAO;IAFD;EA9CR,EAhCF;;;EAmFA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;AAClC,UAAA,KAAA;;;;;;;;;;;;;MAaE,KAAA,GAAQ,OAAA,CAAQ,4BAAR;MACR,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU,OAAV,CAAL;MACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,KAAJ,CAAU,OAAV,CAAd,CAAL;MACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,KAAJ,CAAU,OAAV,CAAd,CAAL;MACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,GAAJ,CAAW,KAAX,CAAd,CAAL;MACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,IAAJ,CAAW,MAAX,CAAd,CAAL;MACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,KAAJ,CAAW,OAAX,CAAd,CAAL;aACA,IAAA,CAAK,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,KAAJ,CAAW,OAAX,CAAd,CAAL;IArBgC,CAAA,IAAlC;;AAnFA",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ANSI-COLORS-TO-CSS-HTML'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# PATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nGUY                       = require '../../../apps/guy'\nAnsiParser                = require 'node-ansiparser'\noutput                    = []\n\n\nterminal =\n  #---------------------------------------------------------------------------------------------------------\n  inst_p: ( text ) ->\n    urge '^340-inst_p^', 'print', text\n    ### TAINT must escape text ###\n    output.push text\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_o: ( s ) ->\n    urge '^340-inst_o^', 'osc', s\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_x: ( flag ) ->\n    urge '^340-inst_x^', 'execute', flag.charCodeAt(0)\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_c: ( collected, parameters, flag ) ->\n    urge '^340-inst_c^', 'csi', collected, parameters, flag\n    switch flag\n      when 'm' ### SGR: Select Graphic Rendition ###\n        if parameters.length is 1\n          if parameters[ 0 ] is 0 ### reset ###\n            output.push '</span>'\n          else\n            null\n      else\n        null\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_e: ( collected, flag ) ->\n    urge '^340-inst_e^', 'esc', collected, flag\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_H: ( collected, parameters, flag ) ->\n    urge '^340-inst_H^', 'dcs-Hook', collected, parameters, flag\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_P: ( dcs ) ->\n    urge '^340-inst_P^', 'dcs-Put', dcs\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  inst_U: (  ) ->\n    urge '^340-inst_U^', 'dcs-Unhook'\n    return null\n\n############################################################################################################\nif module is require.main then do =>\n  # parser  = new AnsiParser terminal\n  # parser.parse CND.red    'red'\n  # parser.parse CND.blue   'blue'\n  # parser.parse CND.green  'green'\n  # parser.parse CND.steel  'steel'\n  # # parser.parse '\\x1b[31mHello World!\\n'\n  # # parser.parse '\\x1bP0!u%5\\x1b\\''\n  # info output\n  # debug '^598^', k for k in ( k for k of CND ).sort()\n  # VT100 = require 'cnd/lib/TRM-VT100-ANALYZER'\n  # help VT100.analyze CND.steel 'steel'\n  # help VT100.as_html CND.steel 'steel'\n\n  VT100 = require 'cnd/lib/TRM-VT100-ANALYZER'\n  echo CND.steel 'steel'\n  echo VT100.analyze CND.steel 'steel'\n  echo VT100.as_html CND.steel 'steel'\n  echo VT100.as_html CND.red    'red'\n  echo VT100.as_html CND.blue   'blue'\n  echo VT100.as_html CND.green  'green'\n  echo VT100.as_html CND.white  'white'\n\n\n\n\n\n"
  ]
}