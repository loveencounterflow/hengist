{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/namespaces-with-hubs.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertalk'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n# WG                        = require '../../../apps/webguy'\n# hub_s                     = Symbol.for 'hub'\n\n\n###\n\n**Note**: I first had in mind to use an ingenious / tricky / treacherous construction that would allow the\n'secondary' to reference methods on the host / primary using `this` / `@`; this would have allowed both the\nprimary and the secondary to use a unified notation like `@f`, `@$.f` to reference `f` on the primary and on\nthe secondary. However this also would be surprising because now `this` means not the secondary, but the\nprimary instance in methods of the secondary instance which is too surprising to sound right.\n\nInstead, we're using composition, albeit with a backlink.\n\n###\n\n\n\n#===========================================================================================================\nclass Secondary\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( host ) ->\n    # WG.props.hide @, '_', host\n    @_ = host\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  show: ->\n    urge '^650-4^', @\n    urge '^650-5^', @_\n    urge '^650-6^', @_.show\n    urge '^650-7^', @_.show()\n    return null\n\n#===========================================================================================================\nsubsidiaries  = new WeakSet()\nhosts         = new WeakMap()\n\n#===========================================================================================================\n# class ???\n\n#-----------------------------------------------------------------------------------------------------------\nwalk_subsidiaries = ( host ) ->\n  ### TAINT this loop should be changed so we catch all relevant objects, including from inherited classes ###\n  yield { subsidiary_key, subsidiary, } for subsidiary_key, subsidiary of host when is_subsidiary subsidiary\n\n#-----------------------------------------------------------------------------------------------------------\ncreate_subsidiary = ( subsidiary ) ->\n  if subsidiaries.has subsidiary\n    throw new Error \"object already in use as subsidiary\"\n  subsidiaries.add subsidiary\n  return subsidiary\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT safeguard against non-object values ###\nis_subsidiary = ( value ) -> subsidiaries.has value\n\n#-----------------------------------------------------------------------------------------------------------\ncreate_ties = ( cfg ) ->\n  ### TAINT use types, validate ###\n  template  = { host: null, subsidiary: null, subsidiary_key: '$', host_key: '_', }\n  cfg       = { template..., cfg..., }\n  debug '^340-1^', cfg\n  ### TAINT shouldn't be necessary if done explicitly? ###\n  unless subsidiaries.has cfg.subsidiary\n    throw new Error \"object isn't a subsidiary\"\n  if hosts.has cfg.subsidiary\n    throw new Error \"subsidiary already has a host\"\n  ### host->subsidiary is a standard containment/compository relationship and is expressed directly;\n  subsidiary-> host is a backlink that would create a circular reference which we avoid by using a\n  `WeakMap` instance, `hosts`: ###\n  Object.defineProperty cfg.host,       cfg.subsidiary_key, value:  cfg.subsidiary\n  Object.defineProperty cfg.subsidiary, cfg.host_key,       get:    -> get_host cfg.subsidiary\n  hosts.set cfg.subsidiary, cfg.host\n  return cfg.subsidiary\n\n#-----------------------------------------------------------------------------------------------------------\nget_host = ( subsidiary ) ->\n  return R if ( R = hosts.get subsidiary )?\n  throw new Error \"no host registered for object\"\n\n\n#===========================================================================================================\nclass Host\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    for { subsidiary_key, subsidiary, } from walk_subsidiaries @\n      create_ties { host: @, subsidiary, host_key: '_', subsidiary_key, }\n      debug '^233-1^', subsidiary_key, ( is_subsidiary subsidiary ), ( subsidiary._ is @ )\n      debug '^233-1^', @[ subsidiary_key ]\n    #   continue unless subsidiary_key.startsWith '$'\n    #   debug '^233-2^', subsidiary_key, subsidiary, subsidiary?.prototype\n    # @$ = new Secondary @\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  show: ->\n    help '^650-1^', @\n    help '^650-2^', @$a, @$a.show\n    help '^650-2^', @$b, @$b.show\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  $a: create_subsidiary\n    show: ->\n      warn '^650-1^', \"$a.show\"\n      @_.show()\n      return null\n\n  #---------------------------------------------------------------------------------------------------------\n  $b: create_subsidiary new class B\n    show: ->\n      warn '^650-1^', \"$b.show\"\n      @_.show()\n      return null\n\n  #---------------------------------------------------------------------------------------------------------\n  $not_a_subsidiary: {}\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  h = new Host()\n  h.show()\n  h.$a.show()\n  h.$b.show()\n\n"
  ]
}