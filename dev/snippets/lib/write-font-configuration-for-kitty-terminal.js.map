{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/home/flow/jzr/hengist/dev/snippets/src/write-font-configuration-for-kitty-terminal.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n###\n\nCSS rules in general (and CSS3 Unicode Range rules in particular) work by the 'backwards early worm'\nprinciple (i.e. who comes late takes the cake), analogous to JS `Object.assign( a, b, c )` where any\nattribute in the later argument, say `c.x`, will override (shadow) any homonymous attribute in both `a` and\n`b`.\n\n> This is the right way to do it: When doing configurations, we want to start with defaults and end with\n> specific overrides. Linux' Font-Config got this backwars which is one reason it sucks so terribly:\n> you can't make one of your own rules become effective unless you wrestle against a system that believes\n> earlier settings must override later ones. Anyhoo.\n\n\n```\n═════════════════ ══════════════════════════  ══════════════════════════════════════════════════════════════\nsuperset          ABCDEFGHIJKLMNOPQRSTUVWXYZ  │ CSS-like Configuration with Overlapping Ranges\n————————————————— ——————————————————————————  ——————————————————————————————————————————————————————————————\nfont1             BCDEFGH J L NOPQRSTUVWX    │ [B-H] [J] [L] [N-X]                      ◮ least precedence\nfont2             BCD                        │ [B-D]                                    │\nfont3                  GHI                   │ [G-I]                                    │\nfont4                        MNOPQ           │ [M-Q]                                    │\nfont5                        M OPQRST        │ [M] [O-T]                                │\nfont6                        M       U  XY   │ [M] [U] [X-Y]                            │ most precedence\n═════════════════ ══════════════════════════  ══════════════════════════════════════════════════════════════\nsuperset          ABCDEFGHIJKLMNOPQRSTUVWXYZ  │\n————————————————— ——————————————————————————  ——————————————————————————————————————————————————————————————\nfont1              ┼┼┼EF┼┼│J L│┼┼┼┼┼┼┼┼VW┼│   │                                          ◮ least precedence\nfont2              BCD  │││   │││││││││  ││   │                                          │\nfont3                   GHI   │││││││││  ││   │                                          │\nfont4                         ┼N┼┼┼││││  ││   │                                          │\nfont5                         ┼ OPQRST│  ││   │                                          │\nfont6                         M       U  XY   │                                          │ most precedence\n═════════════════ ══════════════════════════  ══════════════════════════════════════════════════════════════\nsuperset          ABCDEFGHIJKLMNOPQRSTUVWXYZ  │ Kiitty-like Configuration with Disjunct Ranges\n————————————————— ——————————————————————————  ——————————————————————————————————————————————————————————————\nfont1                 EF   J L         VW     │ [E-F] [J] [L] [V-W]                      ◮ least precedence\nfont2              BCD                        │ [B-D]                                    │\nfont3                   GHI                   │ [G-I]                                    │\nfont4                          N              │ [N]                                      │\nfont5                           OPQRST        │ [O-T]                                    │\nfont6                         M       U  XY   │ [M] [U] [X-Y]                            │ most precedence\n\nNB\n* first mentioned => 'most fallback' => least precedence\n* last  mentioned => 'least fallback' => most precedence\n```\n\n[The Kitty terminal emulator](https://sw.kovidgoyal.net/kitty/index.html) is special for a terminal emulator\nin that **Kitty allows to configue fonts by codepoints and codepoint ranges** similar to what is possible on\nweb pages using CSS3 Unicode Ranges; in fact, its syntax—example:\n\n```\nsymbol_map U+4E00-U+9FFF  HanaMinA Regular\nsymbol_map U+4D00-U+9FFF  EPSON 行書体Ｍ\n```\n\n—is so similar to CSS that one might believe the semantics will likewise be compatible.\n\nAlas, this is not so, and it also looks like Kitty's interpretation can't possibly have been meant to work\nthe way it does. For example, when I configure\n\n```\n# Note: do *not* use inline comments as shown below, they will not be parsed correctly\nfont_family               IosevkaNerdFontCompleteM-Thin\nsymbol_map U+61-U+7a      Iosevka-Slab-Heavy  # (1) /[a-z]/\nsymbol_map U+51-U+5a      Iosevka-Slab-Heavy  # (2) /[Q-Z]/\nsymbol_map U+61           LastResort          # (3) /[a]/\nsymbol_map U+65           LastResort          # (4) /[e]/\nsymbol_map U+69           LastResort          # (5) /[i]/\nsymbol_map U+6F           LastResort          # (6) /[o]/\nsymbol_map U+75           LastResort          # (7) /[u]/\nsymbol_map U+51-U+53      LastResort          # (8) /[QRS]/\nsymbol_map U+59-U+5a      LastResort          # (9) /[YZ]/\n```\n\nI'd expect the outcome to be as follows:\n\n* **(1)** Use `IosevkaNerdFontCompleteM-Thin` as default,\n* **(2)** except for the lower case `[a-z]` range, for which use `Iosevka-Slab-Heavy`,\n* **(3)** except for the upper case `[Q-Z]` range, for which likewise use `Iosevka-Slab-Heavy`; of these,\n* **(4-7)** use LastResort for `/[aeiou]/`, overriding **(1)**,\n* **(8)** use LastResort for `/[QRS]/` overriding **(2)**,\n* **(9)** use LastResort for `/[YZ]/`, likewise overriding **(2)**.\n\nWhat happens in reality is that Kitty applies the only rules **(1)**, **(2)**, **(3)**, **(8)**, but\ndiscards **(4)**, **(5)**, **(6)**, **(7)** and **(9)**; it so happens that both the ranges / single\ncodepoints addressed in the shadowing rules that *were* honored (**(3)** and **(8)**), their first\ncodepoints (`a` = `U+61` and `Q` = `U+51`) coincided with the first codepoints of the rules they shadowed.\nObserve that while e.g. codepoint `e` = `U+65` of rule **(4)** is indeed the first (and only) codepoint of\nthat rule, that is not what matters; what matters is where that shadowing codepoint falls within the rule it\nis intended to supplant, namely rule **(1)**. Since there it is the 5th, not the 1st codepoint of the range\ngiven, it does—erroneuosly, one should think—not succeed.\n\nThis is a somewhat weird and at any rate unexpected behavior that cannot possibly have been the intent of\nthe developers. There is no way users could be expected to follow or profit from such strange rules, so I\nassume this must be a bug.\n\nThe **solution** to this problematic behavior would seem to consist in **only using disjunct `symbol_map`\nranges** by avoiding to mention any codepoint more than once.\n\nReferences:\n\n* [Extension Kitty graphics protocol to support fonts #2259](https://github.com/kovidgoyal/kitty/issues/2259)\n* [Symbol map problem #1948](https://github.com/kovidgoyal/kitty/issues/1948)\n\n\n\n\n\n\n* Do not use an all-boxes fallback font such as LastResort as standard font as one could do in CSS; the font\n  named under in `font_family` [is used to calculate cell metrics, this happens before any\n  fallback](https://github.com/kovidgoyal/kitty/issues/2396#issuecomment-590639250)\n\n\n###\n\n\n\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'WRITE-FONT-CONFIGURATION-FOR-KITTY-TERMINAL'\nrpr                       = CND.rpr\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nhex                       = ( n ) -> ( n.toString 16 ).toUpperCase().padStart 4, '0'\n{ Orange, }               = require './discontinuous-range-arithmetics'\n\n\n#===========================================================================================================\n# PERTAINING TO SPECIFIC SETTINGS / FONT CHOICES\n#-----------------------------------------------------------------------------------------------------------\nS =\n  # source_path:  '../../../../benchmarks/test-data/cid-ranges.json'\n  source_path:  '../../../assets/write-font-configuration-for-kitty-terminal.sample-data.json'\n  psname_by_fontnicks:\n    babelstonehan:              'BabelStoneHan'\n    cwtexqheibold:              'cwTeXQHei-Bold'\n    dejavuserif:                'DejaVuSerif'\n    hanaminaotf:                'HanaMinA'\n    hanaminbotf:                'HanaMinB'\n    ipamp:                      'IPAPMincho'\n    jizurathreeb:               'jizura3b'\n    nanummyeongjo:              'NanumMyeongjo'\n    sunexta:                    'Sun-ExtA'\n    thtshynpone:                'TH-Tshyn-P1'\n    thtshynptwo:                'TH-Tshyn-P2'\n    thtshynpzero:               'TH-Tshyn-P0'\n    umingttcone:                'UMingCN'\n    # @default\n    # asanamath\n    # ebgaramondtwelveregular:    ''\n    # hanaminexatwootf:           ''\n    lmromantenregular:          'Iosevka-Slab'\n    iosevkaslab:                'Iosevka-Slab'\n    # sourcehanserifheavytaiwan:  ''\n    # unifonttwelve:              ''\n\n#-----------------------------------------------------------------------------------------------------------\n@_read_overlapping_cid_ranges = ( settings ) ->\n  return R if ( R = settings.overlapping_cid_ranges )?\n  cid_ranges  = @_read_configured_cid_ranges settings\n  R           = settings.overlapping_cid_ranges = []\n  for cid_range in cid_ranges\n    { first_cid\n      last_cid\n      fontnick\n      styletag\n      glyphstyle } = cid_range\n    continue unless fontnick?\n    continue unless first_cid?\n    continue unless last_cid?\n    continue unless styletag is '+style:ming'\n    continue if     glyphstyle? and /\\bglyph\\b/.test glyphstyle\n    continue unless ( psname = settings.psname_by_fontnicks[ fontnick ] )?\n    R.push cid_range\n  return R\n\n\n#===========================================================================================================\n# GENERIC STUFF\n#-----------------------------------------------------------------------------------------------------------\n@_read_configured_cid_ranges = ( settings ) ->\n  return R if ( R = settings.configured_cid_ranges )?\n  source_path = PATH.resolve PATH.join __dirname, settings.source_path\n  R           = settings.configured_cid_ranges = require source_path\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@_read_disjunct_cid_ranges = ( settings ) ->\n  ocrs              = @_read_overlapping_cid_ranges settings\n  R                 = settings.disjunct_cid_ranges = []\n  org_by_fontnicks  = {}\n  runner            = new Orange() # R: DisJunct Cid RangeS\n  for top_idx in [ ocrs.length - 1 .. 0 ] by -1\n    ocr     = ocrs[ top_idx ]\n    dcr     = ( new Orange [ ocr.first_cid, ocr.last_cid, ] ).subtract runner\n    runner  = runner.add [ ocr.first_cid, ocr.last_cid, ]\n    echo ( CND.grey '^776^' ), CND.green ocr.fontnick, dcr.as_lists()\n    echo ( CND.grey '^776^' ), CND.red runner.as_lists()\n  debug R #.length\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@write_font_configuration_for_kitty_terminal = ( settings ) -> new Promise ( resolve ) =>\n  first_cid_hex = \"U+#{hex first_cid}\"\n  last_cid_hex  = \"U+#{hex last_cid}\"\n  echo \"symbol_map #{first_cid_hex}-#{last_cid_hex} #{psname}\"\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await @write_font_configuration_for_kitty_terminal S\n  # await @_read_disjunct_cid_ranges S\n  # settings =\n\n\n\n  pseudo_css_configuration =\n    font1:  '[B-H] [J] [L] [N-X]          '\n    font2:  '[B-D]                        '\n    font3:  '[G-I]                        '\n    font4:  '[M-Q]                        '\n    font5:  '[M] [O-T]                    '\n    font6:  '[M] [U] [X-Y]                '\n\n  #-----------------------------------------------------------------------------------------------------------\n  f = ( pseudo_css ) ->\n    ###\n    {\"first_cid\":8597,\"last_cid\":8597,\"styletag\":\"+style:ming\",\"fontnick\":\"jizurathreeb\",\"glyphstyle\":\"glyph: ''\"}\n    ###\n    R         = []\n    styletag  = 'style:ming'\n    for fontnick, ranges_txt of pseudo_css\n      matches         = ranges_txt.matchAll /// \\[ (?<range_literal> [^ \\] ]+ ) \\]///g\n      range_literals  = ( match.groups.range_literal for match from matches )\n      range_endpoints = ( range_literal.trim().split /\\s*-\\s*/ for range_literal in range_literals )\n      for range_endpoint in range_endpoints\n        first_chr = range_endpoint[ 0 ]\n        last_chr  = range_endpoint[ 1 ] ? first_chr\n        first_cid = first_chr.codePointAt 0\n        last_cid  = last_chr.codePointAt  0\n        debug { first_cid, last_cid, styletag, fontnick, }\n    return R\n  f pseudo_css_configuration\n\n\n\n\n\n"
  ]
}