{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-guy-hedgerows.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GUY/TESTS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\nGUY                       = require '../../../apps/guy'\n{ Intertype }             = require '../../../apps/intertype'\ntypes                     = new Intertype()\n{ declare\n  create\n  isa\n  validate  }             = types\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare.hdg_new_hedge_cfg\n  $target:      'function'\n  default:\n    target:     null\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare.hdg_get_proxy_cfg\n  $target:      'function'\n  default:\n    target:     null\n\n#-----------------------------------------------------------------------------------------------------------\nclass Hedge\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @cfg    = create.hdg_new_hedge_cfg cfg\n    @state  =\n      hedges: null\n    R       = @_get_top_proxy @cfg\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_top_proxy: ( cfg ) ->\n    dsc =\n      get: ( target, key ) =>\n        @state.hedges = [ key, ]\n        return R if ( R = target[ key ] ) isnt undefined\n        hedges        = [ @state.hedges..., ]\n        # debug '^450-1^', @state\n        sub_target    = ( P... ) => urge '^450-2^', { hedges, P, }; @cfg.target hedges, P...\n        return target[ key ] ?= @_get_sub_proxy { target: sub_target, }\n    R = new Proxy cfg.target, dsc\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_sub_proxy: ( cfg ) ->\n    dsc =\n      get: ( target, key ) =>\n        @state.hedges.push key\n        return R if ( R = target[ key ] ) isnt undefined\n        hedges        = [ @state.hedges..., ]\n        # debug '^450-3^', @state\n        sub_target    = ( P... ) => urge '^450-4^', { hedges, P, }; @cfg.target hedges, P...\n        return target[ key ] ?= @_get_sub_proxy { target: sub_target, }\n    R = new Proxy cfg.target, dsc\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  target  = ( hedges, P ) -> help '^450-5^', { hedges, P, }\n  info '^450-6^', h = new Hedge { target, }\n  # info '^450-7^', h.foo.bar\n  # info '^450-8^', h.one.two.three.four.five\n  # info '^450-9^', h.one.two\n  # info '^450-10^', h\n  # info '^450-11^', h.foo.bar                 42\n  info '^450-12^', h.one 1\n  info '^450-13^', h.one.two 2\n  info '^450-14^', h.one.two.three 3\n  info '^450-14^', h.one.two.three 3\n  info '^450-15^', h.one.two.three.four 4\n  info '^450-16^', h.one.two.three.four.five 5\n  # info '^450-17^', h.one.two                 42\n  # info '^450-18^', h                         42\n\n  # test_non_identity = ->\n  #   a = create.hdg_get_proxy_cfg()\n  #   b = create.hdg_get_proxy_cfg()\n  #   debug a\n  #   debug b\n  #   debug a is b\n  #   debug a.target is b.target\n"
  ]
}