{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-guy-hedgerows.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n############################################################################################################\nGUY                       = require '../../../apps/guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'GUY/demo-guy-hedgerows'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\nrvr                       = GUY.trm.reverse\ntruth                     = GUY.trm.truth.bind GUY.trm\n{ Intertype }             = require '../../../apps/intertype'\ntypes                     = new Intertype()\n{ declare\n  create\n  isa\n  validate  }             = types\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare.hdg_new_hedge_cfg\n  $target:      'function'\n  default:\n    target:     null\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare.hdg_get_proxy_cfg\n  $target:      'function'\n  default:\n    target:     null\n\n#-----------------------------------------------------------------------------------------------------------\nclass Hedge\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @cfg    = create.hdg_new_hedge_cfg cfg\n    @state  =\n      hedges: null\n    R       = @_get_hedge_proxy true, cfg.target\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _get_hedge_proxy: ( is_top, owner ) ->\n    dsc =\n      #-----------------------------------------------------------------------------------------------------\n      get: ( target, key ) =>\n        if is_top then  @state.hedges = [ key, ]\n        else            @state.hedges.push key\n        #...................................................................................................\n        return R if ( R = target[ key ] ) isnt undefined\n        hedges        = [ @state.hedges..., ]\n        #...................................................................................................\n        sub_owner     = ( P... ) => @cfg.target hedges, P...\n        return target[ key ] ?= @_get_hedge_proxy false, sub_owner\n    #.......................................................................................................\n    R = new Proxy owner, dsc\n\n\n############################################################################################################\nif module is require.main then do =>\n\n  #---------------------------------------------------------------------------------------------------------\n  _isa  = ( hedges, x ) ->\n    unless ( arity = arguments.length ) is 2\n      throw new Error \"^387^ expected 2 arguments, got #{arity}\"\n    help '^450-5^', { hedges, x, }\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  info '^450-6^', isa = new Hedge { target: _isa, }\n  #.........................................................................................................\n  info '^450-12^', try isa 1        catch error then warn rvr error.message\n  info '^450-12^', try isa 1, 2, 3  catch error then warn rvr error.message\n  #.........................................................................................................\n  info '^450-12^', isa [ 'one', ], 1\n  info '^450-12^', isa.one 1\n  info '^450-13^', isa.one.two 2\n  info '^450-14^', isa.one.two.three 3\n  info '^450-15^', isa.one.two.three.four 4\n  info '^450-16^', isa [ 'one', 'two', 'three', 'four', 'five', ], 5\n  info '^450-16^', isa.one.two.three.four.five 5\n\n  #---------------------------------------------------------------------------------------------------------\n  return null\n"
  ]
}