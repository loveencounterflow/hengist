{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/merge-object-keys.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,KAAA,GAA4B,CAAE,OAAA,CAAQ,eAAR,CAAF,CAA2B,CAAC,MAdxD;;;;;;;;;;;;;;;;;;;;;EAoCA,IAAA,GAAO,QAAA,CAAA,CAAA;AACP,QAAA,GAAA,EAAA;IAAE,GAAA,GAAM;MAAE,EAAA,EAAI,EAAN;MAAU,EAAA,EAAI,EAAd;MAAkB,EAAA,EAAI;IAAtB;IACN,GAAA,GAAM;MAAE,EAAA,EAAI,EAAN;MAAU,EAAA,EAAI,EAAd;MAAkB,EAAA,EAAI;IAAtB,EADR;;;;;IAME,IAAA,CAAK,SAAL,EAAgB,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAhB,EANF;IAOE,IAAA,CAAK,SAAL,EAAgB,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAhB,EAPF;IAQE,IAAA,CAAK,SAAL,EAAgB,MAAM,CAAC,IAAP,CAAY,CAAE,GAAA,GAAF,EAAU,GAAA,GAAV,CAAZ,CAAhB,EARF;IASE,IAAA,CAAK,SAAL,EAAgB,MAAM,CAAC,IAAP,CAAY,CAAE,GAAA,GAAF,EAAU,GAAA,GAAV,CAAZ,CAAhB,EATF;AAUE,WAAO;EAXF,EApCP;;;EAyDA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAA;IADgC,CAAA,IAAlC;;AAzDA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MERGE-OBJECT-KEYS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nspawn                     = ( require 'child_process' ).spawn\n\n###\n\n* two objects:\n  * a `row` from a DB query\n  * a `cfg` object whose keys are existing or new field names\n* task:\n  * show table (omitted here)\n  * with columns...\n    * only those in `row`\n    * only those in `cfg`\n    * both, from `row` first\n    * both, from `cfg` first\n* solution: provide the four ways numbered `500-1..500-4` below\n* next problem: how to configure these choices?\n  * IRL what is called `cfg` here is really the `fields` property of the configuration object, call it `x`\n  * can set `x.use_fields` to one of `row`, `cfg`, `row,cfg`, `cfg,row`\n\n###\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  row = { r1: 11, r2: 12, r3: 13, }\n  cfg = { c1: 21, c4: 24, r1: 21, }\n  # help '^442-1^', ( Object.keys row ), ( Object.keys cfg )  # [ 'r1', 'r2', 'r3' ] [ 'c1', 'c4', 'r1' ]\n  # help '^442-2^', { row..., cfg..., }                       # { r1: 21, r2: 12, r3: 13, c1: 21, c4: 24 }\n  # help '^442-4^', ( Object.keys cfg ), ( Object.keys row )  # [ 'c1', 'c4', 'r1' ] [ 'r1', 'r2', 'r3' ]\n  # help '^442-5^', { cfg..., row..., }                       # { c1: 21, c4: 24, r1: 11, r2: 12, r3: 13 }\n  help '^500-1^', Object.keys row                           # [ 'r1', 'r2', 'r3' ]\n  help '^500-2^', Object.keys cfg                           # [ 'c1', 'c4', 'r1' ]\n  help '^500-3^', Object.keys { row..., cfg..., }           # [ 'r1', 'r2', 'r3', 'c1', 'c4' ]\n  help '^500-4^', Object.keys { cfg..., row..., }           # [ 'c1', 'c4', 'r1', 'r2', 'r3' ]\n  return null\n\n\n\n\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  demo()\n\n\n"
  ]
}