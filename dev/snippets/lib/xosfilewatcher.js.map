{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/xosfilewatcher.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;EAgBA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,UAAR;;EAGzB,CAAA,CAAA,CAAA,GAAA;AACH,QAAA,GAAA,EAAA,IAAA,EAAA;IAAE,GAAA,GACE;MAAA,UAAA,EAA0B;IAA1B,EADJ;;;;;;;;;;;;;;;;IAiBE,IAAA,GAAO,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,iBAArB,CAAb;IACP,KAAA,CAAM,UAAN,EAAkB,OAAA,GAAU,GAAG,CAAC,KAAJ,CAAU,IAAV,EAAgB,GAAhB,CAA5B;IACA,OAAO,CAAC,EAAR,CAAW,KAAX,EAAkB,CAAE,IAAF,CAAA,GAAA;aAAY,IAAA,CAAK,WAAL,EAAkB,KAAlB,EAAyB,IAAzB;IAAZ,CAAlB;WACA,OAAO,CAAC,EAAR,CAAW,QAAX,EAAqB,CAAE,IAAF,CAAA,GAAA;aAAY,IAAA,CAAK,WAAL,EAAkB,QAAlB,EAA4B,IAA5B;IAAZ,CAArB;EArBC,CAAA;AApBH",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'XOSFILEWATCHER'\nrpr                       = CND.rpr\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nCKD                       = require 'chokidar'\n\n\ndo =>\n  cfg = \n    persistent:               true\n    # ignored:                  '*.txt'\n    # ignoreInitial:            false\n    # followSymlinks:           true\n    # cwd:                      '.'\n    # # disableGlobbing:          false\n    # usePolling:               false\n    # # interval:                 100\n    # # binaryInterval:           300\n    # alwaysStat:               false\n    # depth:                    99\n    # awaitWriteFinish:\n    #   stabilityThreshold:       2000\n    #   pollInterval:             100\n    # ignorePermissionErrors:   false\n    # atomic:                   true # or a custom 'atomicity delay', in milliseconds (default 100)\n  glob = PATH.resolve PATH.join __dirname, '../src/*.coffee'\n  debug '^345345^', watcher = CKD.watch glob, cfg\n  watcher.on 'add', ( path ) => help '^3453345^', 'add', path\n  watcher.on 'change', ( path ) => urge '^3453345^', 'change', path\n\n\n\n"
  ]
}