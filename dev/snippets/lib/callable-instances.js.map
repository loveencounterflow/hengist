{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/callable-instances.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'CALLABLE-INSTANCES'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate }              = types.export()\nMMX                       = require '../../../apps/multimix/lib/cataloguing'\nguy                       = require '../../../apps/guy'\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  class Fn extends Function\n    constructor: ->\n      super()\n      fn = ( x ) =>\n        debug '^2-1^', ( k for k of @ )\n        debug '^2-2^', @\n        debug '^2-3^', MMX.all_keys_of @\n        debug '^2-4^', @other_method\n        debug '^2-5^', @other_method()\n        return x ** x\n      Object.setPrototypeOf fn, @\n      return fn\n    other_method: -> urge '^2-6^', @\n  debug '^2-7^', fn = new Fn\n  debug '^2-7^', fn 42\n  debug '^2-8^', fn.other_method\n  debug '^2-8^', fn.other_method 42\n\n\n#===========================================================================================================\n### thx to https://stackoverflow.com/a/40878674/256361 ###\nclass Fn extends Function\n\n  #---------------------------------------------------------------------------------------------------------\n  @class_method: ( self ) ->\n    self._me.prop_11 = 'prop_11'\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    ### Call the `Function` prototype ###\n    super '...P', 'return this._me.do(...P)'\n    ### Define `@_me` as the bound version of `this`: ###\n    @_me = @bind @\n    ### Confusingly, instance attributes like `@_me.prop_7` must be tacked onto `@_me` *here*, but the\n    `this` value within methods is `@_me`, so they refer to the *same* attribute as `@_me.prop_7`: ###\n    guy.props.def @_me, 'prop_6', enumerable: true, value: 'prop_6'\n    @_me.prop_7 =                                          'prop_7'\n    @constructor.class_method @\n    return @_me\n\n  #---------------------------------------------------------------------------------------------------------\n  do: ( a = 0, b = 0, c = 0 ) =>\n    debug '^8-1^', @\n    help '^8-2^', @prop_6\n    help '^8-3^', @prop_7\n    help '^8-4^', @prop_11\n    # help '^8-4^', @_me ### undefined ###\n    return a + b + c\n\n  #---------------------------------------------------------------------------------------------------------\n  other_method: ->\n    urge '^8-5^', @\n    urge '^8-6^', @prop_6\n    urge '^8-7^', @prop_7\n    urge '^8-8^', @prop_11\n    # help '^8-4^', @_me ### undefined ###\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ntest = ->\n  fn = new Fn()\n  # { other_method, } = fn\n  info '^8-9^', fn\n  info '^8-10^', fn.prop_6\n  info '^8-11^', fn.prop_7\n  info '^8-12^', fn.prop_11\n  info '^8-13^', fn 3, 4, 5\n  info '^8-14^', fn.do 3, 4, 5\n  info '^8-15^', fn.other_method()\n  info '^8-16^', other_method = fn.other_method.bind fn\n  info '^8-16^', other_method()\n  # info '^8-15^', fn._me ### undefined ###\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  test()\n\n\n"
  ]
}