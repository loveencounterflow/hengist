{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/railroading.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'RAILROADING'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nPATH                      = require 'path'\nFS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_railroad_diagrams = ->\n  # Choice\n  # Comment\n  # ComplexDiagram\n  # Diagram\n  # NonTerminal\n  # OneOrMore\n  # Optional\n  # Sequence\n  # Skip\n  # Terminal\n  # ZeroOrMore\n\n  # RR    = require 'tetsudou'\n  RR    = require '../../../apps/tetsudou'\n  # debug '^948^', RR.Options\n  # RR.Options.VS = 20\n  # RR.Options.AR = 8\n  #.........................................................................................................\n  d     = RR.ComplexDiagram 'foo',\n    ( RR.Sequence ( RR.Terminal 'a node' ), ( RR.Terminal 'other' ) ),\n    ( RR.Choice 0, 'bar', 'baz' ),\n    ( RR.NonTerminal 'nonterminal' ),\n    ( RR.Stack ( RR.ZeroOrMore ( RR.Terminal 'A' ), ( RR.Comment 'whatever' ), 'skip' ),\n      RR.Optional('+', 'skip'),\n      RR.Choice(0,\n        RR.NonTerminal('name-start char'),\n        RR.NonTerminal('escape')),\n      RR.ZeroOrMore(\n        RR.Choice(0,\n          RR.NonTerminal('name char'),\n          RR.NonTerminal('escape'))))\n  #.........................................................................................................\n  # d.format 10, 10, 10, 10\n  # d.walk ( P... ) ->\n  #   debug '^587^', P\n  #   return null\n  #.........................................................................................................\n  path  = PATH.resolve PATH.join __dirname, '../../../apps-typesetting/html+svg-demos/railroading-output.html'\n  html  = FS.readFileSync path, { encoding: 'utf-8', }\n  pos1  = html.indexOf '<svg class=\"railroad-diagram\" '\n  pos2  = ( html.indexOf '</svg>' ) + 6\n  throw new Error \"unable to find target\" unless pos1 >= 0 and pos2 >= 0\n  html  = html[ ... pos1 ] + d.toString() + html[ pos2 ... ]\n  FS.writeFileSync path, html\n  help \"output written to #{PATH.relative process.cwd(), path}\"\n  # # debug await import( '/Users/benutzer/3rdparty/tetsudou/railroad.mjs' )\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@require_esm = ( path ) ->\n  require_esm = ( require 'esm' ) module\n  return ( require_esm path ).default\n\n\n############################################################################################################\nif module is require.main then do =>\n  @demo_railroad_diagrams()\n  # debug require '../../../apps/tetsudou/loader.js'\n  # debug require '../../../apps/tetsudou'\n  # debug @require_esm\n\n  \n"
  ]
}