{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/home/flow/jzr/hengist/dev/snippets/src/discontinuous-range-arithmetics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'DISCONTINUOUS-RANGE-ARITHMETICS'\nrpr                       = CND.rpr\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nhex                       = ( n ) -> ( n.toString 16 ).toUpperCase().padStart 4, '0'\nDRange                    = require 'drange'\nmerge_ranges              = require 'merge-ranges'\ntypes                     = require './types'\n{ isa\n  validate\n  declare }               = types\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare 'orange_instance',  ( x ) -> x instanceof Urange\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare 'orange_birange', \\\n  ( x ) -> ( @isa.list x ) and ( x.length is 2 ) and ( isa.number x[ 0 ] ) and ( isa.number x[ 1 ] )\n\n\n#-----------------------------------------------------------------------------------------------------------\nclass Urange\n  ### TAINT add type checking to avoid silent failure of e.g. `new DRange [ 1, 3, ]` ###\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( P... ) ->\n    @d = new DRange()\n    # @d = ( require 'letsfreezethat' ).freeze new DRange()\n    for p in P\n      if isa.orange_instance p\n        @d.add p.d\n      else\n        validate.orange_birange p\n        @d.add p...\n    Object.defineProperty @, 'length', get: -> @d.length\n    return @\n\n  #---------------------------------------------------------------------------------------------------------\n  union: ( other ) ->\n    other = ( new Urange other ) unless isa.orange_instance other\n    @d.add other.d\n    return @\n\n  #---------------------------------------------------------------------------------------------------------\n  difference: ( other ) ->\n    other = ( new Urange other ) unless isa.orange_instance other\n    @d.subtract other.d\n    return @\n\n  #---------------------------------------------------------------------------------------------------------\n  as_lists: -> ( [ r.low, r.high, ] for r in @d.ranges )\n\n#-----------------------------------------------------------------------------------------------------------\n@ranges_from_drange   = ( drange ) -> ( [ r.low, r.high, ] for r in drange.ranges )\n@ranges_from_orange   = ( urange ) -> validate.orange_instance urange; return @ranges_from_drange urange.d\n@numbers_from_drange  = ( drange ) -> ( ( drange.index i ) for i in [ 0 ... drange.length ] )\n@numbers_from_orange  = ( urange ) -> validate.orange_instance urange; return @numbers_from_drange urange.d\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_subtract_ranges_DRange = ->\n  super_rng   = new DRange 1, 100\n  blue_rng    = new DRange 13\n  blue_rng    = blue_rng.add 8\n  blue_rng    = blue_rng.add 60, 80 # [8, 13, 60-80]\n  blue_rng    = blue_rng.add 81\n  blue_rng    = blue_rng.add new DRange 27, 55\n  help '^3332^', @ranges_from_drange blue_rng\n  red_rng     = super_rng.clone().subtract blue_rng\n  help '^556^', @ranges_from_drange red_rng\n  help '^556^', red_rng.length\n  info '^334^', @numbers_from_drange red_rng\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_subtract_ranges_Orange = ->\n  super_rng   = new Urange [ 1, 100, ]\n  blue_rng    = new Urange [ 13, 13, ], [ 8, 8, ], ( new Urange [ 60, 80, ] )\n  info ( CND.truth super_rng  instanceof Urange ), super_rng\n  info ( CND.truth blue_rng   instanceof Urange ), blue_rng\n  blue_rng    = blue_rng.union new Urange [ 81, 81, ]\n  blue_rng    = blue_rng.union new Urange [ 27, 55, ]\n  blue_rng    = blue_rng.union [ 27, 55, ]\n  help '^3332^', @ranges_from_orange blue_rng\n  red_rng     = ( new Urange super_rng )\n  red_rng     = red_rng.difference blue_rng\n  help '^556^', @ranges_from_orange red_rng\n  help '^556^', red_rng.length\n  info '^334^', @numbers_from_orange red_rng\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_merge_ranges = ->\n  ranges = [\n    [ 10, 20, ]\n    [ 15, 30, ]\n    [ 30, 32, ]\n    [ 42, 42, ]\n    [ 88, 99, ]\n    ]\n  a = merge_ranges ranges\n  b = @ranges_from_orange new Urange ranges...\n  info 'merging:', a\n  info 'merging:', b\n  validate.true CND.equals a, b\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = { Urange, }\n\n############################################################################################################\nif module is require.main then do =>\n  await @demo_subtract_ranges_DRange()\n  await @demo_subtract_ranges_Orange()\n  await @demo_merge_ranges()\n  # debug new DRange()\n  u = new Urange()\n  debug '^334^', Urange.xxx\n  debug '^334^', u.xxx\n\n\n\n"
  ]
}