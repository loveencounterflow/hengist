{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-prql.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR,EAL5B;;;EAOA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAlB5B;;;EAsBA,IAAA,GAAO,QAAA,CAAA,CAAA;AACP,QAAA,IAAA,EAAA;IAAE,IAAA,GAAO,OAAA,CAAQ,SAAR;IACP,IAAA,GAAO;IACP,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,IAAI,CAAC,OAAL,CAAc,IAAd,CAAJ,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,IAAI,CAAC,MAAL,CAAc,IAAd,CAAJ,CAAf;IACA,IAAA,CAAK,QAAL,EAAe,GAAA,CAAI,IAAI,CAAC,OAAL,CAAc,IAAd,CAAJ,CAAf;IACA,IAAA,GAAO,CAAA;;;;;;;;;;;;;;;;;UAAA;IAoBP,IAAA,CAAK,QAAL,EAAe,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAf;AACA,WAAO;EA3BF,EAtBP;;;EAqDA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAA;IADgC,CAAA,IAAlC;;AArDA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'SNIPPETS/PRQL'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  PRQL = require 'prql-js'\n  prql = \"from employees select first_name\"\n  info '^23-1^', rpr PRQL.compile  prql\n  info '^23-1^', rpr PRQL.to_sql   prql\n  info '^23-1^', rpr PRQL.to_json  prql\n  prql = \"\"\"\n    from employees\n    filter start_date > @2021-01-01\n    derive [\n      gross_salary = salary + (tax ?? 0),\n      gross_cost = gross_salary + benefits_cost,\n    ]\n    filter gross_cost > 0\n    group [title, country] (\n      aggregate [\n        average gross_salary,\n        sum_gross_cost = sum gross_cost,\n      ]\n    )\n    filter sum_gross_cost > 100000\n    derive id = f\"{title}_{country}\"\n    derive country_code = s\"LEFT(country, 2)\"\n    sort [sum_gross_cost, -country]\n    take 1..20\n  \"\"\"\n  urge '^23-1^', PRQL.to_sql prql\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  demo()\n"
  ]
}