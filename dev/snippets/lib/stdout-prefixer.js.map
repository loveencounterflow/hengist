{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/stdout-prefixer.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,KAAA,GAA4B,OAAA,CAAQ,OAAR,EAb5B;;;;;;;;;;EAuBA,MAAA,GAAS,QAAA,CAAA,CAAA;AACT,QAAA,MAAA,EAAA,KAAA,EAAA,MAAA;;;IAEE,CAAA,CAAE,KAAF,EACE,MADF,EAEE,MAFF,CAAA,GAEc,OAFd;IAGA,KAAK,CAAC,WAAN,CAAkB,OAAlB,EALF;;IAOE,KAAK,CAAC,EAAN,CAAS,MAAT,EAAiB,CAAE,IAAF,CAAA,GAAA;AACnB,UAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA;MAAI,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,EAApB;MACR,GAAA,GAAQ,KAAA,CAAA,CAAO,CAAC,MAAR,CAAe,UAAf;AACR;AAAA;MAAA,KAAA,qCAAA;;qBAAA,IAAA,CAAK,CAAA,CAAA,CAAG,GAAH,EAAA,CAAA,CAAU,IAAV,CAAA,CAAL;MAAA,CAAA;;IAHe,CAAjB;AAIA,WAAO;EAZA,EAvBT;;;EAuCA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,MAAA,CAAA;IADgC,CAAA,IAAlC;;AAvCA",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PREFIXER'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\ndayjs                     = require 'dayjs'\n# do =>\n#   utc               = require 'dayjs/plugin/utc';               dayjs.extend utc\n#   relativeTime      = require 'dayjs/plugin/relativeTime';      dayjs.extend relativeTime\n#   toObject          = require 'dayjs/plugin/toObject';          dayjs.extend toObject\n#   customParseFormat = require 'dayjs/plugin/customParseFormat'; dayjs.extend customParseFormat\n#   duration          = require 'dayjs/plugin/duration';          dayjs.extend duration\n\n\n#-----------------------------------------------------------------------------------------------------------\nprefix = ->\n  # debug date = Temporal.Now.plainDateISO()\n  # info date.toString()\n  { stdin\n    stdout\n    stderr }  = process\n  stdin.setEncoding 'utf-8'\n  # stdin.resume()\n  stdin.on 'data', ( data ) =>\n    data  = data.replace /\\n$/, ''\n    now   = dayjs().format \"HH:mm:ss\"\n    echo \"#{now} #{line}\" for line in data.split '\\n'\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  prefix()\n\n\n\n\n\n"
  ]
}