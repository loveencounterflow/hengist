{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/raw-sql-strings-with-backslash-escapes.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,IAAF,CAAA,GAA4B,OAAA,CAAQ,oBAAR,CAA5B;;EACA,CAAA,CAAE,GAAF,CAAA,GAA4B,IAA5B,EAdA;;;EAkBA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAA,CAAA;AACpB,QAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA;;;;;;;IAME,IAAA,CAAK,GAAA,CAAc,CAAA,uBAAA,CAAA,CAAyB,CAAA,GAAE,CAA3B,CAAA,CAAd,CAAL;IACA,IAAA,CAAK,GAAA,CAAW,GAAG,CAAA,uBAAA,CAAA,CAAyB,CAAA,GAAE,CAA3B,CAAA,CAAd,CAAL;IACA,IAAA,CAAK,GAAA,CAAI,MAAM,CAAC,GAAG,CAAA,uBAAA,CAAA,CAAyB,CAAA,GAAE,CAA3B,CAAA,CAAd,CAAL,EARF;;IAUE,EAAA,GAAK,IAAI,IAAJ,CAAA;AACL;IAAA,KAAA,UAAA;MAAA,IAAA,CAAK,GAAL;IAAA;AACA;IAAA,KAAA,WAAA;MAAA,IAAA,CAAK,GAAL;IAAA;AACA;IAAA,KAAA,WAAA;MAAA,IAAA,CAAK,GAAL;IAAA;AAEA;IAAA,KAAA,WAAA,GAAA;;MAAA,IAAA,CAAK,GAAG,CAAC,IAAT;IAAA;AACA;IAAA,KAAA,WAAA;MAAA,IAAA,CAAK,GAAG,CAAC,IAAT;IAAA;AACA;IAAA,KAAA,WAAA;MAAA,IAAA,CAAK,GAAG,CAAC,IAAT;IAAA,CAjBF;;AAmBE,WAAO;EApBW,EAlBpB;;;EA0CA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAC,CAAA,gBAAD,CAAA;IADgC,CAAA,IAAlC;;AA1CA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'SQL-TEMPLATING'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ DBay }                  = require '../../../apps/dbay'\n{ SQL  }                  = DBay\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_sql_strings = ->\n  # SQL = ( parts, expressions... ) ->\n  #   R = parts[ 0 ]\n  #   for expression, idx in expressions\n  #     R += expression.toString() + parts[ idx + 1 ]\n  #   return R\n  #.........................................................................................................\n  urge rpr           \"foo\\nbar\\u4e11 ${1+2} #{3+4}\"\n  urge rpr        SQL\"foo\\nbar\\u4e11 ${1+2} #{3+4}\"\n  urge rpr String.raw\"foo\\nbar\\u4e11 ${1+2} #{3+4}\"\n  #.........................................................................................................\n  db = new DBay\n  info row      for row from db           \"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  info row      for row from db        SQL\"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  info row      for row from db String.raw\"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  #.........................................................................................................\n  urge row.text for row from db           \"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  urge row.text for row from db        SQL\"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  urge row.text for row from db String.raw\"select 'a\\x08b foo\\nbar\\u4e11 ${1+2} #{3+4}' as text;\"\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  @demo_sql_strings()\n\n  \n"
  ]
}