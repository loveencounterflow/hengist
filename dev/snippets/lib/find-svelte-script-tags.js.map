{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/find-svelte-script-tags.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/SNIPPETS/FIND-SVELTE-SCRIPT-TAGS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n# #...........................................................................................................\n# DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n# { new_datom\n#   lets\n#   select }                = DATOM.export()\n# #...........................................................................................................\n# # test                      = require 'guy-test'\n# types                     = new ( require 'intertype' ).Intertype()\n# { isa\n#   declare\n#   validate\n#   cast\n#   type_of }               = types.export()\nFS                        = require 'fs'\nPATH                      = require 'path'\nHTML                      = require '../../../apps/paragate/lib/htmlish.grammar'\nHTML                      = new HTML.new_grammar { bare: true, }\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_find_script_block_idxs = ( me, lines ) ->\n  ### NOTE this part developed in hengist/dev/snippets/src/find-svelte-script-tags.coffee ###\n  ### NOTE will mis-identify code blocks wrapped in HTML comments ###\n  R             = []\n  start_pattern = /// ^ (\n    <script\\b.*\\blang=coffeescript.*> |\n    <script\\b.*\\blang='coffeescript'.*> |\n    <script\\b.*\\blang=\"coffeescript\".*> )\n    $ ///\n  stop_pattern  = /// ^ </script> $ ///\n  location      = 'outside'\n  for line, idx in lines\n    if location is 'outside'\n      if ( line.match start_pattern )?\n        tag = ( HTML.parse line )[ 0 ]\n        R.push { start: idx, stop: null, tag, }\n        location = 'inside'\n    else\n      if ( line.match stop_pattern )?\n        R[ R.length - 1 ].stop = idx\n        location = 'outside'\n  return R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@demo = ->\n  path      = '../../../dev/sveltekit-with-coffeescript/origin/src/components/Counter.svelte'\n  path      = PATH.resolve PATH.join __dirname, path\n  full_text = FS.readFileSync path, { encoding: 'utf-8', }\n  lines     = full_text.split /\\n/\n  blocks    = @_find_script_block_idxs null, lines\n  for idx in [ blocks.length - 1 .. 0 ] by -1\n    block             = blocks[ idx ]\n    { start, stop, }  = block\n    unless start? and stop?\n      warn \"^3332^ unclosed script: #{rpr block}\"\n      continue\n    source_txt                      = lines[ start + 1 .. stop - 1 ].join '\\n'\n    js_txt                          = '// JS here'\n    ### TAINT must honor 'module' scripts ###\n    lines[ start ]                  = '<script>'\n    lines[ start + 1 .. stop - 1 ]  = [ js_txt, ]\n    info block\n    urge '\\n' + source_txt\n  #.........................................................................................................\n  result = lines.join '\\n'\n  help '\\n' + result\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await @demo()\n\n"
  ]
}