{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/phrase-to-code.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,cAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,sCAAR,EAd5B;;;EAkBA,cAAA,GAAiB,QAAA,CAAE,MAAF,CAAA;AACjB,QAAA,IAAA,EAAA,IAAA,EAAA,IAAA;;IACE,IAAA,GAAQ,MAAM,CAAC,WAAP,CAAA;IACR,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,0BAAb,EAAyC,IAAzC;IACR,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,SAAb,EAAwB,EAAxB;IACR,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,kBAAb,EAAiC,IAAjC;WACR,IAAA,GAAQ,IAAA,GAAO;EANA,EAlBjB;;;EA2BA,mBAAA,GAAsB,QAAA,CAAA,CAAA;AACtB,QAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA;IAAE,OAAA,GAAU;IACV,OAAA,GAAU,CACR,aADQ,EAER,QAFQ,EAGR,gBAHQ,EAIR,4BAJQ,EAKR,aALQ,EAMR,MANQ,EAOR,MAPQ,EAQR,MARQ;IAUV,KAAA,yCAAA;;MACE,IAAA,GAAO,cAAA,CAAe,MAAf;MACP,OAAO,CAAC,IAAR,CAAa,CAAE,MAAF,EAAU,IAAV,CAAb;IAFF;IAGA,CAAC,CAAC,QAAF,CAAW,mBAAX,EAAgC,OAAhC;AACA,WAAO;EAhBa,EA3BtB;;;EA+CA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,mBAAA,CAAA;IADgC,CAAA,IAAlC;;AA/CA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-VOGUE/DB'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nH                         = require '../../../apps/dbay-vogue/lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\nphrase_to_code = ( phrase ) ->\n  # group letter + up to four letters of word 1 but no trailing vowel + initials of words 2 and on\n  code  = phrase.toLowerCase()\n  head  = code.replace /^(\\S{1,3}[^aeiou\\s]?).*$/, '$1'\n  tail  = code.replace /^\\S+\\s*/, ''\n  tail  = tail.replace /(?:^|\\s+)(.)\\S*/g, '$1'\n  code  = head + tail\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_phrase_to_code = ->\n  results = []\n  phrases = [\n    \"hello world\"\n    \"phrase\"\n    \"for all I know\"\n    \"a new programming language\"\n    \"fortuicious\"\n    \"clae\"\n    \"clap\"\n    \"clxp\"\n    ]\n  for phrase in phrases\n    code = phrase_to_code phrase\n    results.push { phrase, code, }\n  H.tabulate \"phrases and codes\", results\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  demo_phrase_to_code()\n\n\n"
  ]
}