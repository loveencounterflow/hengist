{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/async-events.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'subsidiary'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n# test                      = require 'guy-test'\nresolved_promise          = Promise.resolve()\n\n\n#===========================================================================================================\nisa =\n  anything:               ( x ) -> true\n  nothing:                ( x ) -> not x?\n  something:              ( x ) -> x?\n  function:               ( x ) -> ( Object::toString.call x ) is '[object Function]'\n  asyncfunction:          ( x ) -> ( Object::toString.call x ) is '[object AsyncFunction]'\n  symbol:                 ( x ) -> ( typeof x ) is 'symbol'\n  text:                   ( x ) -> ( typeof x ) is 'string'\n  event_listener:         ( x ) -> ( @function x ) or ( @asyncfunction x )\n  event_key:              ( x ) -> ( @text x ) or ( @symbol x )\n\n\n#===========================================================================================================\nvalidate = do =>\n  R = {}\n  for type, test of isa\n    R[ type ] = do ( type, test ) => ( x ) =>\n      return x if test.call isa, x\n      ### TAINT `typeof` will give some strange results ###\n      throw new Error \"expected a #{type}, got a #{typeof x}\"\n  return R\n\n#===========================================================================================================\nclass Async_events\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    @symbols    = {}\n    @listeners  = new WeakMap()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  on: ( key, receiver ) ->\n    validate.event_key key\n    validate.something receiver\n    #.......................................................................................................\n    @symbols[ key ]           = ( key_symbol  = Symbol key  ) unless ( key_symbol = @symbols[ key ]           )?\n    debug '^992-1^', { key_symbol, }\n    @listeners.set key_symbol,  ( registry    = new Set()   ) unless ( registry   = @listeners.get key_symbol )?\n    #.......................................................................................................\n    if isa.event_listener receiver\n      listener      = receiver\n    else\n      listener_name = \"on_#{key}\"\n      listener      = receiver[ listener_name ]\n      validate.event_listener listener\n      ### TAINT this anonymous function subverts the purpose of using s set ###\n      listener = do ( original_listener = listener ) ->\n        ( P... ) -> await original_listener.call receiver, P...\n    registry.add listener\n    #.......................................................................................................\n    unsubscribe = ->\n    return unsubscribe\n\n  #---------------------------------------------------------------------------------------------------------\n  emit: ( key, data... ) ->\n    listeners = ( AE.listeners.get AE.symbols[ 'blah' ] ) ? ( new Set() )\n    debug '^992-2^', listeners\n    await resolved_promise ### as per https://github.com/sindresorhus/emittery/blob/main/index.js#L363 ###\n    return await Promise.all ( ( -> await listener key, data... )() for listener from listeners )\n\n  #---------------------------------------------------------------------------------------------------------\n  matches: ( matcher, candidate ) ->\n\n\n#===========================================================================================================\nAE = new Async_events()\n\n#===========================================================================================================\ndemo = ->\n  receiver =\n    on_blah:  ( key, data... ) -> info '^992-3^', key, data; { key, data, }\n    on_foo:   ( key, data... ) -> info '^992-4^', key, data; { key, data, }\n  AE.on 'blah', receiver\n  AE.on 'foo',  receiver\n  debug '^992-5^', AE\n  debug '^992-6^', AE.symbols[ 'blah' ]\n  debug '^992-7^', AE.listeners\n  debug '^992-8^', AE.listeners.get AE.symbols[ 'blah' ]\n  debug '^992-9^', await AE.emit 'blah'\n  debug '^992-9^', await AE.emit 'foo', 3, 4, 5, 6\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  await demo()\n  urge '^992-10^', await Promise.all (\n    # new Promise ( ( resolve, reject ) -> resolve i ) for i in [ 1 .. 10 ]\n    ( ( ( count ) -> await count ) i + 1 ) for i in [ 1 .. 10 ]\n    )"
  ]
}