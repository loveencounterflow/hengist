{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-svg-with-paper-js.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DEMO-SVG-WITH-PAPER-JS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nPAPER                     = require 'paper-jsdom'\nPATH                      = require 'path'\nFS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ validate\n  type_of\n  isa                   } = types.export()\nSVGO                      = require 'svgo'\nsvg_pathify               = require 'svg_pathify'\n\n# # stops   = [ ( new PAPER.Color 1, 1, 0, 0 ), 'red', 'black', ]\n# radius  = PAPER.view.bounds.width * 0.4\n# from_pt = new PAPER.Point PAPER.view.center.x, 300\n# to_pt   = from_pt.add radius, 0\n\n# circle = new PAPER.Path.Circle\n#   center:       from_pt\n#   radius:       radius * 0.7\n#   fillColor:    'red'\n#   strokeColor:  'black'\n\n# rectangle = new PAPER.Path.Rectangle\n#   from:         PAPER.view.bounds.leftCenter\n#   to:           PAPER.view.bounds.bottomRight\n#   fillColor:    'red',\n#   strokeColor:  'black'\n\n# debug ( ( circle.exportSVG    { asString: false, } ) ).getAttribute 'd'\n# debug ( ( rectangle.exportSVG { asString: false, } ) ).getAttribute 'd'\n\n# p1_pth    = PAPER.PathItem.create 'M66,300c0,-46.39192 37.60808,-84 84,-84c46.39192,0 84,37.60808 84,84c0,46.39192 -37.60808,84 -84,84c-46.39192,0 -84,-37.60808 -84,-84z'\n# rectangle = PAPER.PathItem.create 'M0,600v-300h300v300z'\n# p2_pth.rotate(45).scale(0.7)\n# console.log(svg)\n# fs.writeFileSync( '/tmp/paper1.svg', svg )\n# svg = PAPER.project.exportSVG { asString: true, precision: 0, }\n# info svg\n# FS.writeFileSync '/tmp/paper2.svg', svg\n\n# svg_dom = PAPER.project.exportSVG { asString: false, precision: 0, }\n# # debug '^445645^', ( k for k of svg_dom )\n# help '^5345348^', ( svg_dom.getElementsByTagName 'path' )[ 0 ].getAttribute 'd'\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_import_export = ->\n  R       = {}\n  path    = PATH.resolve PATH.join __dirname, '../../../apps-typesetting/html+svg-demos/symbols-for-special-chrs.svg'\n  project = new PAPER.Project()\n  ### NOTE importing SVG appears to apply / remove transforms so we can deal with path data as-is ###\n  svg_txt = FS.readFileSync path, { encoding: 'utf-8', }\n  length_before = svg_txt.length\n  svg_txt = prepare_svg_txt path, svg_txt\n  length_after = svg_txt.length\n  debug '^432-1^', { length_before, length_after, }\n  project.importSVG svg_txt\n  svg_dom = project.exportSVG()\n  seen    = new Set()\n  for x_dom in svg_dom.querySelectorAll '*'\n    debug '^432-2^', get_dom_node_description x_dom\n  #.........................................................................................................\n  for g_dom in svg_dom.querySelectorAll 'g'\n    g_id  = g_dom.getAttribute 'id'\n    continue unless g_id?\n    continue unless g_id.startsWith 'sym-'\n    sym_name      = g_id.replace /^sym-/, ''\n    entry         = { sym_name, }\n    R[ sym_name ] = entry\n    pds           = []\n    debug '^432-3^', { g_id, }\n    info '^432-4^', \"group\", rpr g_id\n    for path_dom in g_dom.querySelectorAll 'path'\n      continue if seen.has path_dom\n      seen.add path_dom\n      path_id = path_dom.getAttribute 'id'\n      debug '^432-5^', { path_id, }\n      if path_id.endsWith '-glyfmetric'\n        pd          = path_dom.getAttribute 'd'\n        bbox        = boundingbox_from_pathdata pd\n        entry.shift = { x: bbox.x1, }\n      else\n        pds.push path_dom.getAttribute 'd'\n    urge '^432-7^', pds\n    if pds.length is 0\n      warn \"found no paths for group #{rpr path_id}\"\n      continue\n    entry.pd = unite_path_data pds\n    entry.pd = shift_pathdata entry.pd, entry.shift if ( entry.shift?.x ? 0 ) != 0\n  #.........................................................................................................\n  for path_dom in svg_dom.querySelectorAll 'path'\n    continue if seen.has path_dom\n    path_id   = path_dom.getAttribute 'id'\n    continue unless path_id?\n    continue unless path_id.startsWith 'sym-'\n    sym_name  = path_id.replace /^sym-/, ''\n    pd        = path_dom.getAttribute 'd'\n    R.push { sym_name, pd, }\n  #.........................................................................................................\n  echo()\n  echo entry.pd for sym_name, entry of R\n  echo()\n  for sym_name, { pd, } of R\n    echo \"<path fill='red' stroke='black' id='#{sym_name}' d='#{pd}'/>\"\n  echo()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nprepare_svg_txt = ( path, svg_txt ) ->\n  cfg =\n    path:       path\n    pretty:     true\n    multipass:  true\n    plugins: [\n      # 'preset-default'\n      'cleanupAttrs'                    # cleanup attributes from newlines, trailing, and repeating spaces  enabled\n      'mergeStyles'                     # merge multiple style elements into one  enabled\n      'inlineStyles'                    # move and merge styles from <style> elements to element style attributes enabled\n      'removeDoctype'                   # remove doctype declaration  enabled\n      'removeXMLProcInst'               # remove XML processing instructions  enabled\n      'removeComments'                  # remove comments enabled\n      'removeMetadata'                  # remove <metadata> enabled\n      'removeTitle'                     # remove <title>  enabled\n      'removeDesc'                      # remove <desc> enabled\n      'removeUselessDefs'               # remove elements of <defs> without id  enabled\n      # 'removeXMLNS'                     # removes the xmlns attribute (for inline SVG)  disabled\n      'removeEditorsNSData'             # remove editors namespaces, elements, and attributes enabled\n      'removeEmptyAttrs'                # remove empty attributes enabled\n      'removeHiddenElems'               # remove hidden elements  enabled\n      'removeEmptyText'                 # remove empty Text elements  enabled\n      'removeEmptyContainers'           # remove empty Container elements enabled\n      'removeViewBox'                   # remove viewBox attribute when possible  enabled\n      'cleanupEnableBackground'         # remove or cleanup enable-background attribute when possible enabled\n      'minifyStyles'                    # minify <style> elements content with CSSO enabled\n      # 'convertStyleToAttrs'             # convert styles into attributes  disabled\n      'convertColors'                   # convert colors (from rgb() to #rrggbb, from #rrggbb to #rgb)  enabled\n      'convertPathData'                 # convert Path data to relative or absolute (whichever is shorter), convert one segment to another, trim useless delimiters, smart rounding, and much more  enabled\n      'convertTransform'                # collapse multiple transforms into one, convert matrices to the short aliases, and much more enabled\n      'removeUnknownsAndDefaults'       # remove unknown elements content and attributes, remove attributes with default values enabled\n      'removeNonInheritableGroupAttrs'  # remove non-inheritable group's \"presentation\" attributes  enabled\n      'removeUselessStrokeAndFill'      # remove useless stroke and fill attributes enabled\n      'removeUnusedNS'                  # remove unused namespaces declaration  enabled\n      # 'prefixIds'                       # prefix IDs and classes with the SVG filename or an arbitrary string disabled\n      # 'cleanupIDs'                      # remove unused and minify used IDs enabled\n      'cleanupNumericValues'            # round numeric values to the fixed precision, remove default px units  enabled\n      # 'cleanupListOfValues'             # round numeric values in attributes that take a list of numbers (like viewBox or enable-background)  disabled\n      'moveElemsAttrsToGroup'           # move elements' attributes to their enclosing group  enabled\n      'moveGroupAttrsToElems'           # move some group attributes to the contained elements  enabled\n      'collapseGroups'                  # collapse useless groups enabled\n      # 'removeRasterImages'              # remove raster images  disabled\n      'mergePaths'                      # merge multiple Paths into one enabled\n      'convertShapeToPath'              # convert some basic shapes to <path> enabled\n      'convertEllipseToCircle'          # convert non-eccentric <ellipse> to <circle> enabled\n      # 'sortAttrs'                       # sort element attributes for epic readability  disabled\n      'sortDefsChildren'                # sort children of <defs> in order to improve compression enabled\n      # 'removeDimensions'                # remove width/height and add viewBox if it's missing (opposite to removeViewBox, disable it first) disabled\n      # 'removeAttrs'                     # remove attributes by pattern  disabled\n      # 'removeAttributesBySelector'      # removes attributes of elements that match a CSS selector  disabled\n      # 'removeElementsByAttr'            # remove arbitrary elements by ID or className  disabled\n      # 'addClassesToSVGElement'          # add classnames to an outer <svg> element  disabled\n      # 'addAttributesToSVGElement'       # adds attributes to an outer <svg> element disabled\n      # 'removeOffCanvasPaths'            # removes elements that are drawn outside of the viewbox  disabled\n      # 'removeStyleElement'              # remove <style> elements disabled\n      # 'removeScriptElement'             # remove <script> elements  disabled\n      # 'reusePaths'                      # Find duplicated elements and replace them with links disabled\n    ]\n  return svg_pathify ( SVGO.optimize svg_txt, cfg ).data\n\n#-----------------------------------------------------------------------------------------------------------\nget_dom_node_description = ( x_dom ) ->\n  R         = { $tag: x_dom.tagName, }\n  R[ name ] = value for { name, value, } in x_dom.attributes\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nboundingbox_from_pathdata = ( pd ) ->\n  PAPER.setup new PAPER.Size 1000, 1000\n  validate.nonempty_text pd\n  path_pth    = PAPER.PathItem.create pd\n  { x\n    y\n    width\n    height  } =   path_pth.bounds\n  debug '^432-11^', { x, y, width, height, }\n  return { x1: x, y1: y, x2: x + width, y2: y + height, width, height, }\n\n#-----------------------------------------------------------------------------------------------------------\nshift_pathdata = ( pd, shift ) ->\n  PAPER.setup new PAPER.Size 1000, 1000\n  validate.nonempty_text pd\n  path_pth    = PAPER.PathItem.create pd\n  path_pth.translate new PAPER.Point -shift.x, 0\n  return ( path_pth.exportSVG { asString: false, precision: 0, } ).getAttribute 'd'\n\n#-----------------------------------------------------------------------------------------------------------\nunite_path_data = ( pds ) ->\n  PAPER.setup new PAPER.Size 1000, 1000\n  validate.list pds\n  throw new Error \"^45648^ expected path data, got none\" if pds.length is 0\n  return pds[ 0 ] if pds.length is 1\n  p0_pth  = PAPER.PathItem.create pds[ 0 ]\n  for idx in [ 1 ... pds.length ]\n    p0_pth  = p0_pth.unite PAPER.PathItem.create pds[ idx ]\n  return ( p0_pth.exportSVG { asString: false, precision: 0, } ).getAttribute 'd'\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_union = ->\n  PAPER.setup new PAPER.Size 300, 600\n  p1_pth  = PAPER.PathItem.create 'M 40.49 201.605 L 60.313 201.605 L 60.313 403.212 L 40.49 403.212 L 40.49 201.605 Z'\n  p2_pth  = PAPER.PathItem.create 'M 0 371.912 L 100.803 371.912 L 100.803 403.212 L 0 403.212 L 0 371.912 Z'\n  union_pth = p2_pth.unite p1_pth\n  p2_pth.remove()\n  p1_pth.remove()\n  # debug '^35345^', ( k for k of p1_pth )\n  debug '^35345^', p1_pth.exportSVG { asString: true, }\n  urge '^35345^', ( union_pth.exportSVG { asString: false, precision: 0, } ).getAttribute 'd'\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  # demo_union()\n  demo_import_export()\n\n"
  ]
}