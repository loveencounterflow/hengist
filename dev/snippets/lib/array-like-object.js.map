{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/array-like-object.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PSEUDO-ARRAY'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nGUY                       = require 'guy'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of\n  validate }              = types\n# { Moonriver }             = require '../../../apps/moonriver'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass Pseudo_array extends Array\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( on_change ) ->\n    super()\n    GUY.props.hide @, 'on_change', on_change if on_change?\n    # GUY.props.hide @, 'prv_length', 0\n    @prv_length = 0\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  on_change: -> null\n\n  #---------------------------------------------------------------------------------------------------------\n  push:     ( P... ) -> R = super P...; @on_change(); return R\n  pop:      ( P... ) -> R = super P...; @on_change(); return R\n  unshift:  ( P... ) -> R = super P...; @on_change(); return R\n  shift:    ( P... ) -> R = super P...; @on_change(); return R\n  splice:   ( P... ) -> R = super P...; @on_change(); return R\n  reduce:   ( P... ) -> R = super P...; @on_change(); return R\n  map:      ( P... ) -> R = super P...; @on_change(); return R\n  filter:   ( P... ) -> R = super P...; @on_change(); return R\n  slice:    ( P... ) -> R = super P...; @on_change(); return R\n  splice:   ( P... ) -> R = super P...; @on_change(); return R\n  reverse:  ( P... ) -> R = super P...; @on_change(); return R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ndemo = ->\n  d = new Pseudo_array ->\n    info '^348^', @length, ( @length - @prv_length ), rpr @\n    @prv_length = @length\n    return null\n\n  d.push 42\n  d.push 43\n  d.splice 1, 0, 'a', 'b', 'c'\n  urge '^948^', d\n  urge '^948^', d.length\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  demo()\n\n\n\n\n\n\n\n"
  ]
}