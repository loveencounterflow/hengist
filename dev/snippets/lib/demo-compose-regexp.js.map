{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-compose-regexp.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DEMO-COMPOSE-REGEXP'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntruth                     = GUY.trm.truth.bind GUY.trm\n#...........................................................................................................\n{ equals\n  copy_regex }            = GUY.samesame\n\n\n############################################################################################################\nif module is require.main then do =>\n  debug await import( 'compose-regexp' )\n  { atomic\n    bound\n    capture\n    charSet\n    either\n    flags\n    lookAhead\n    lookBehind\n    maybe\n    namedCapture\n    noBound\n    notAhead\n    notBehind\n    ref\n    sequence\n    suffix        } = await import( 'compose-regexp' )\n\n  ###\n  charSet: {\n    difference: [Function: csDiff],\n    intersection: [Function: csInter],\n    complement: [Function: csComplement],\n    union: [Function: either] },\n  flags: { add: [Function: add] },\n  ###\n\n  info '^30-1^', either 'this', 'that'\n  info '^30-2^', ( either 'this', 'that' ), ( maybe 'abc' )\n  info '^30-3^', charSet.union ( either 'this', 'that' ), ( maybe 'abc' )\n  info '^30-4^', charSet.intersection ( either 'this', 'that' ), ( maybe 'abc' )\n  info '^30-5^', charSet.complement ( either 'this', 'that' ), ( maybe 'abc' )\n  info '^30-6^', charSet.difference ( either 'this', 'that' ), ( maybe 'abc' )\n  urge '^30-7^', re = charSet.intersection /\\p{Lowercase}/u, /\\p{Script=Greek}/u\n  urge '^30-8^', truth re.test 'a'\n  urge '^30-9^', truth re.test 'A'\n  urge '^30-10^', truth re.test 'Δ'\n  urge '^30-11^', truth re.test 'δ'\n  urge '^30-12^', truth re.test 'δε'\n  urge '^30-13^', truth re.test 'xxxδεxxx'\n  urge '^30-14^', truth re.test 'xxxxxx'\n  urge '^30-15^', b = bound /\\p{Script=Greek}/u\n  urge '^30-16^', truth b.test 'xxxδεxxx'\n  urge '^30-17^', truth b.test 'xxxxxx'\n  urge '^30-18^', b = bound /a/u\n  urge '^30-19^', truth b.test 'xxxδεxxx'\n  urge '^30-20^', truth b.test 'xxxxxx'\n  urge '^30-21^', truth b.test 'xxxaxxx'\n  urge '^30-22^', truth b.test 'a'\n  info '^30-23^', suffix '+', 'a'\n  info '^30-24^', suffix '*', 'a', 'b', 'c'\n  info '^30-25^', suffix '*', charSet.union /\\p{Lowercase}/u, 'a', /\\d/\n  lexemes = []\n  n       = namedCapture\n  info '^30-26^', lexemes.push n 'backtick',      notBehind '\\\\', '`'\n  info '^30-26^', lexemes.push n 'digits',        notBehind '\\\\', /\\d+/\n  info '^30-27^', lexemes.push n 'tag',           notBehind '\\\\', /<[^>]+>/\n  info '^30-27^', lexemes.push n 'ws',            notBehind '\\\\', /\\p{White_Space}+/u\n  info '^30-28^', lexemes.push n 'letters',       notBehind '\\\\', /\\p{L}+/u\n  info '^30-28^', lexemes.push n 'anything',      notBehind '\\\\', /./u\n  info '^30-26^', lexemes.push n 'other_digits',  notBehind '\\\\', /[0-9]+/\n  info '^30-29^', sticky        = flags.add 'y'\n  info '^30-30^', unicode       = flags.add 'u'\n  info '^30-31^', lexer         = sticky unicode either lexemes...\n  info '^30-32^', rpr source    = 'foo `bar` <i>1234</i>\\n'\n  prv_last_idx = 0\n  info '^30-33^', 0\n  while ( match = source.match lexer )?\n    for name, group of match.groups\n      continue unless group or group is ''\n      info '^30-33^', lexer.lastIndex, name, rpr group\n      if lexer.lastIndex is prv_last_idx\n        warn '^30-33^', GUY.trm.reverse \"detected loop, stopping\"\n        match = null\n        break\n      prv_last_idx = lexer.lastIndex\n    break unless match?\n  return null\n\n\n\n\n\n"
  ]
}