{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,QAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,UAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,SAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;EAgBA,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,aAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,QAAA,GAA4B,OAAA,CAAQ,wBAAR,EAnB5B;;;EAqBA,UAAA,GAA4B,QAAA,CAAA,GAAE,CAAF,CAAA;WAAY,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,GAAA,CAAV,CAAb;EAAZ;;EAC5B,CAAA,CAAE,SAAF,CAAA,GAA4B,OAAA,CAAQ,MAAR,CAA5B,EAtBA;;;;;;;;;;;;;;EAqCA,cAAA,GAAiB,QAAA,CAAE,IAAF,CAAA;AACjB,QAAA,OAAA,EAAA,GAAA,EAAA;IAAE,GAAA,GAAU,EAAE,CAAC,YAAH,CAAgB,IAAhB;IACV,OAAA,GAAU,CAAA,EADZ;IAEE,IAAA,GAAU,QAAQ,CAAC,eAAT,CAAyB,GAAzB,EAA8B,OAA9B;IACV,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,GAAjB,EAAsB,GAAtB,CAAL;AACA,WAAO;EALQ,EArCjB;;;EA6CA,eAAA,GAAkB,MAAA,QAAA,CAAE,IAAF,CAAA;AAClB,QAAA,WAAA,EAAA,WAAA,EAAA,MAAA,EAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA;;IACE,GAAA,GAAU,CAAA,MAAM,GAAG,CAAC,QAAJ,CAAa,IAAb,CAAN;IACV,OAAA,GAAU,CAAA,EAFZ;IAGE,IAAA,GAAU,CAAA,MAAM,QAAQ,CAAC,WAAT,CAAqB,GAArB,EAA0B,OAA1B,CAAN,EAHZ;;IAKE,KAAA,CAAM,UAAN,EAAkB,IAAI,CAAC,MAAvB;IACA,KAAA,CAAM,UAAN;;AAAoB;MAAA,KAAA,gBAAA;qBAAA;MAAA,CAAA;;QAApB;IACA,KAAA,CAAM,UAAN,EAAkB,IAAI,CAAC,QAAvB;IACA,KAAA,CAAM,UAAN;;AAAoB;MAAA,KAAA,kBAAA;qBAAA;MAAA,CAAA;;QAApB;IACA,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,GAAjB,EAAsB,GAAtB,CAAL;IACA,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,GAAjB,EAAsB,KAAtB,CAAL;IACA,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,KAAjB,EAAwB,KAAxB,CAAL;IACA,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,KAAjB,EAAwB,KAAxB,CAAL;IACA,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,KAAjB,EAAwB,KAAxB,EAA+B,CAA/B,CAAL;IACA,CAAA,CAAE,WAAF,EAAe,WAAf,CAAA,GAA+B,IAAI,CAAC,OAApC;IACA,MAAA,GAAS,CAAE,CAAF,EAAK,CAAL,CAAA,GAAA;AACX,UAAA,KAAA,EAAA,KAAA,EAAA;MAAI,KAAA,GAAQ,WAAA,CAAY,CAAZ;MACR,KAAA,GAAQ,WAAA,CAAY,CAAZ;MACR,KAAA,GAAQ,IAAI,CAAC,OAAO,CAAC,MAAb,CAAoB,KAApB,EAA2B,KAA3B;MACR,KAAA,CAAM,SAAN,EAAiB,KAAjB;MACA,KAAA,CAAM,SAAN,EAAiB,WAAA,CAAY,KAAZ,CAAjB,EAJJ;;MAMI,KAAA,CAAM,SAAN,EAAiB,WAAA,CAAY,KAAA,GAAQ,CAApB,CAAjB;AACA,aAAO,WAAA,CAAY,KAAZ;IARA;IAST,IAAA,CAAK,MAAA,CAAO,KAAP,EAAc,KAAd,CAAL;AACA,WAAO;EA1BS,EA7ClB;;;EA0EA,mBAAA,GAAsB,MAAA,QAAA,CAAE,IAAF,CAAA;AACtB,QAAA,OAAA,EAAA,GAAA,EAAA;IAAE,GAAA,GAAU,EAAE,CAAC,gBAAH,CAAoB,IAApB,EAAZ;;IAEE,OAAA,GAAU,CAAA,EAFZ;IAGE,IAAA,GAAU,CAAA,MAAM,QAAQ,CAAC,WAAT,CAAqB,GAArB,EAA0B,OAA1B,CAAN;IACV,IAAA,CAAK,IAAI,CAAC,OAAO,CAAC,GAAb,CAAiB,GAAjB,EAAsB,GAAtB,CAAL;AACA,WAAO;EANa,EA1EtB;;;EAqFA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,KAAA,CAAA,CAAA,GAAA;AAClC,UAAA,IAAA;;;MAEE,IAAA,GAAU,UAAA,CAAW,SAAX,EAAsB,qBAAtB;MACV,cAAA,CAAe,IAAf;aACA,CAAA,MAAM,eAAA,CAAgB,IAAhB,CAAN;IALgC,CAAA,IAAlC;;;EArFA;AAAA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'FILEWATCHER/MAIN'\nrpr                       = CND.rpr\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#-----------------------------------------------------------------------------------------------------------\nFS                        = require 'fs'\nFSP                       = require 'fs/promises'\nPATH                      = require 'path'\nASLOADER                  = require '@assemblyscript/loader'\n# { AsBind, }               = require 'as-bind'\njoin_paths                = ( P... ) -> PATH.resolve PATH.join P...\n{ promisify, }            = require 'util'\n\n# AsBind = require(\"as-bind\");\n# CAT                       = require 'multimix/lib/cataloguing'\n# debug '^324323^', AsBind\n# # debug '^324323^', ( CAT.all_keys_of AsBind )\n# debug '^324323^', ( CAT.all_keys_of AsBind )\n# debug '^324323^', ( CAT.all_keys_of new AsBind() )\n# process.exit 1\n# wasm = fs.readFileSync(\"./path-to-my-wasm.wasm\");\n# asyncTask = async () => {\n#   asBindInstance = await AsBind.instantiate(wasm);\n\n\n#-----------------------------------------------------------------------------------------------------------\nload_wasm_sync = ( path ) ->\n  src     = FS.readFileSync path\n  imports = {} # imports go here\n  wasm    = ASLOADER.instantiateSync src, imports\n  info wasm.exports.add 123, 456\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nload_wasm_async = ( path ) ->\n  # asBind  = new AsBind()\n  src     = await FSP.readFile path\n  imports = {} # imports go here\n  wasm    = await ASLOADER.instantiate src, imports\n  # wasm    = await AsBind.instantiate src, imports\n  debug '^334534^', wasm.module\n  debug '^334534^', ( k for k of wasm.module )\n  debug '^334534^', wasm.instance\n  debug '^334534^', ( k for k of wasm.instance )\n  info wasm.exports.add 123, 456\n  info wasm.exports.add 123, '456'\n  info wasm.exports.add '123', '456'\n  info wasm.exports.add '???', '456'\n  info wasm.exports.add '???', '456', 0\n  { __newString, __getString } = wasm.exports\n  concat = ( a, b ) =>\n    a_ptr = __newString a\n    b_ptr = __newString b\n    c_ptr = wasm.exports.concat a_ptr, b_ptr\n    debug '^445-1^', c_ptr\n    debug '^445-2^', __getString c_ptr\n    # debug '^445-3^', __getString c_ptr + 1\n    debug '^445-4^', __getString c_ptr + 2\n    return __getString c_ptr\n  info concat '123', '456'\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nload_wasm_streaming = ( path ) ->\n  src     = FS.createReadStream path\n  # src     = -> new Promise ( resolve ) => resolve FS.createReadStream path\n  imports = {} # imports go here\n  wasm    = await ASLOADER.instantiate src, imports\n  info wasm.exports.add 123, 456\n  return null\n\n\n\n#-----------------------------------------------------------------------------------------------------------\nif module is require.main then do =>\n  # path  = PATH.resolve PATH.join __dirname, '../build/untouched.wasm'\n  # path  = PATH.resolve PATH.join __dirname, '../build/optimized.wasm'\n  path    = join_paths __dirname, '../build/quick.wasm'\n  load_wasm_sync path\n  await load_wasm_async path\n  # await load_wasm_streaming path\n"
  ]
}