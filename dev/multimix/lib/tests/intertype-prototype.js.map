{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../../src/tests/intertype-prototype.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'MULTIMIX/tests/basics'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n{ hide\n  tree }                  = GUY.props\nrvr                       = GUY.trm.reverse\nnameit                    = ( name, f ) -> Object.defineProperty f, 'name', { value: name, }\n#...........................................................................................................\ntest                      = require 'guy-test'\ntypes                     = new ( require '../../../../apps/intertype' ).Intertype()\n{ Multimix }              = require '../../../../apps/multimix'\n\n\n#===========================================================================================================\nparagons =\n\n  #---------------------------------------------------------------------------------------------------------\n  isa: ( props, x, P... ) ->\n    whisper '^450-1^', rvr 'isa', { props, x, P, }\n    unless ( arity = arguments.length ) is 2\n      throw new Error \"^450-2^ expected single argument, got #{arity - 1}\"\n    unless props.length > 0\n      throw new Error \"^450-3^ expected at least one type, got none\"\n    ### TAINT very much simplified version of `Intertype::_inner_isa()` ###\n    return @isa[ props[ 0 ] ] null, x if props.length is 1\n    for hedge in props\n      R = @isa[ hedge ] x\n      whisper '^450-4^', { R, hedge, handler: @isa[ hedge ], x, }\n      return false if R is false\n      return R unless R is true\n    return true\n\n  #---------------------------------------------------------------------------------------------------------\n  declare: ( props, isa ) ->\n    # if arguments.length < 2\n    #   debug '^450-5^', \"`declare()` called with no argument; leaving\"\n    #   return null\n    # unless ( arity = arguments.length ) is 1\n    #   throw new Error \"^387^ expected no arguments, got #{arity - 1}\"\n    ### TAINT also check for props being a list ###\n    unless ( hedgecount = props.length ) is 1\n      throw new Error \"^450-6^ expected single hedge, got #{rpr props}\"\n    [ name, ]         = props\n    isa = nameit name, isa\n    debug '^450-7^', rvr 'declare', { props, isa, }\n    @registry[ name ] = isa\n    # handler           = ( props, x, P... ) => debug '^450-8^', { props, x, P, }; @isa.call @, props, x\n    # hide @isa, name, nameit name, new Multimix { hub: @, handler, }\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create: ( name, target ) ->\n    debug '^450-9^', 'create', { name, target, isa: @registry[ name ], }\n    return null\n\n\n#===========================================================================================================\nclass Intertype\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    # GUY_props.hide @, 'isa', new Multimix\n    proxy_cfg =\n      # create:     paragons.create.bind @\n      create:     true\n      strict:     false\n      oneshot:    true\n      delete:     false\n      hide:       true\n    hide @, 'registry', {}\n    hide @, 'isa',      nameit 'isa',     new Multimix { proxy_cfg..., hub: @, handler: paragons.isa,     }\n    hide @, 'declare',  nameit 'declare', new Multimix { proxy_cfg..., hub: @, handler: paragons.declare, }\n    hide @, 'mmx',      @isa[Multimix.symbol]\n    return undefined\n\n\n#-----------------------------------------------------------------------------------------------------------\n@test = ( T, done ) ->\n  t         = new Intertype()\n  { declare\n    isa }   = t\n  info '^450-10^', declare\n  info '^450-11^', declare.one\n  info '^450-12^', declare.one ( x ) -> debug '^one^', { x, }; ( x is 1 ) or ( x is '1' )\n  info '^450-13^', declare.two ( x ) -> debug '^two^', { x, }; ( x is 2 ) or ( x is '2' )\n  info '^450-14^', t.registry\n  info '^450-15^', isa.one 42\n  info '^450-16^', isa.one 1\n  T?.eq ( isa.one 1   ), true\n  T?.eq ( isa.one '1' ), true\n  T?.eq ( isa.one 2   ), false\n  info '^450-17^', isa.one is declare.one\n  info '^450-18^', declare.one\n  info '^450-19^', t\n  info '^450-20^', isa\n  info '^450-21^', declare\n  #---------------------------------------------------------------------------------------------------------\n  done?()\n\n\n############################################################################################################\nif module is require.main then do =>\n  @test()\n  # test @\n\n"
  ]
}