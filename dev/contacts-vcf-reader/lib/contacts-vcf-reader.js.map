{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/contacts-vcf-reader.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'CONTACTS-VCF-READER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n\n\nwarn \"^345876^ this code now part of contacts\"; process.exit 1\n\n\n\n\n#...........................................................................................................\n{ assign\n  jr }                    = CND\ntypes                     = ( require 'intertext' ).types\n{ isa\n  validate\n  cast\n  last_of\n  type_of }               = types\nSP                        = require 'steampipes'\n{ $\n  $async\n  $watch\n  $show\n  $drain }                = SP.export()\n{ jr, }                   = CND\nDATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n{ new_datom\n  wrap_datom\n  lets\n  freeze\n  select }                = DATOM.export()\nFS                        = require 'fs'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT should implement in SteamPipes ###\n@$read_from_file = -> $ ( path, send ) => send FS.readFileSync path\n\n#-----------------------------------------------------------------------------------------------------------\n@$clean = -> $ ( line, send ) => line = line.trim(); send line unless line is ''\n\n#-----------------------------------------------------------------------------------------------------------\n@$fields = -> $ ( line, send ) =>\n  unless ( match = line.match /^(?<name>[^:]+):(?<$value>.*)$/ )?\n    warn \"not a valid VCF line: #{jr line}\"\n    return\n  { name, $value, } = match.groups\n  name              = name.toLowerCase()\n  #.........................................................................................................\n  if ( name.indexOf 'encoding=quoted-printable' ) > -1\n    $value = ( ( require 'libqp' ).decode $value ).toString 'utf-8'\n  #.........................................................................................................\n  name              = name.replace /;internet;pref$/,                           ''\n  name              = name.replace /;charset=utf-8;encoding=quoted-printable$/, ''\n  return send new_datom '<vcard' if ( name is 'begin' ) and ( $value is 'VCARD' )\n  return send new_datom '>vcard' if ( name is 'end'   ) and ( $value is 'VCARD' )\n  send new_datom \"^#{name}\", $value\n\n#-----------------------------------------------------------------------------------------------------------\n@$filter = -> SP.$filter ( d ) =>\n  return false if select d, '^n'\n  return false if select d, '^version'\n  return false if ( d.$value is '' )\n  return true\n\n#-----------------------------------------------------------------------------------------------------------\n@$resolve_name = -> $ ( d, send ) =>\n  return        if      select d, '^n'\n  return send d unless  select d, '^fn'\n  send new_datom \"^name\", d.$value\n\n#-----------------------------------------------------------------------------------------------------------\n@$resolve_number = -> $ ( d, send ) =>\n  return send d unless  select d, '^tel;cell;pref'\n  send new_datom \"^fon\", d.$value\n\n#-----------------------------------------------------------------------------------------------------------\n@$prefix_number = -> $ ( d, send ) =>\n  return send d unless  select d, '^fon'\n  if d.$value.startsWith '0'\n    d = lets d, ( d ) -> d.$value = '+49' + d.$value[ 1 .. ]\n  send new_datom \"^fon\", d.$value\n\n#-----------------------------------------------------------------------------------------------------------\n@$consolidate = ->\n  within_vcard  = false\n  buffer        = {}\n  return $ ( d, send ) =>\n    if select d, '<vcard'\n      within_vcard  = true\n      buffer        = {}\n      return null\n    if select d, '>vcard'\n      send new_datom '^vcard', buffer\n      within_vcard  = false\n      buffer        = null\n      return null\n    name = d.$key[ 1 .. ]\n    return send d unless within_vcard\n    if buffer[ name ]? and not isa.list buffer[ name ]\n      buffer[ name ] = [ buffer[ name ], ]\n    if isa.list buffer[ name ]  then  buffer[ name ].push d.$value\n    else                              buffer[ name ] =    d.$value\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$add_sortkey = ( key, sortkey ) -> $ ( d, send ) =>\n  return send d unless d[ key ]?\n  d = lets d, ( d ) -> d[ sortkey ] = d[ key ].toLowerCase()\n  send d\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$dedup = -> SP.window { width: 2, }, $ ( ds, send ) =>\n  [ d1, d, ] = ds\n  return unless d1 and d?\n  return if ( d1.sortkey is d.sortkey ) and ( d1.fon is d.fon )\n  send d\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@read_vcards = ( paths... ) -> new Promise ( resolve ) =>\n  R         = []\n  paths     = paths.flat Infinity\n  pipeline  = []\n  pipeline.push paths\n  pipeline.push @$read_from_file()\n  pipeline.push SP.$split()\n  pipeline.push @$clean()\n  pipeline.push @$fields()\n  pipeline.push @$filter()\n  pipeline.push @$resolve_name()\n  pipeline.push @$resolve_number()\n  pipeline.push @$prefix_number()\n  pipeline.push @$consolidate()\n  pipeline.push @$add_sortkey 'name', 'sortkey'\n  pipeline.push SP.$sort { key: 'fon',      strict: false, }\n  pipeline.push SP.$sort { key: 'sortkey',  strict: false, }\n  pipeline.push @$dedup()\n  # pipeline.push @$delete_key 'sortkey'\n  # pipeline.push $show()\n  pipeline.push $drain ( collector ) => resolve collector\n  return SP.pull pipeline...\n\n\n############################################################################################################\nif module is require.main then do =>\n  vcards = await @read_vcards [\n    '../../../../../../contacts/**/*.vcf'\n    ]\n  # console.table vcards\n  echo jr vcard for vcard in vcards\n\n\n\n\n"
  ]
}