{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'subsidiary'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require 'guy-test'\n#-----------------------------------------------------------------------------------------------------------\ns                         = ( name ) -> Symbol.for  name\nps                        = ( name ) -> Symbol      name\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n#===========================================================================================================\nisa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\nas_object = ( x ) ->\n  return x unless isa_object x\n  R       = {}\n  R[ k ]  = as_object v for k, v of x\n  return R\n#===========================================================================================================\nthrows = ( T, matcher, f ) ->\n  await do =>\n    error = null\n    try await f() catch error\n      warn '^992-15^', reverse error.message\n      T?.eq error.message, matcher\n    T?.ok error?\n  return null\n\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  T?.eq ( isa.function      AE.on       ), true\n  T?.eq ( isa.function      AE.on_any   ), false\n  T?.eq ( isa.asyncfunction AE.emit     ), true\n  T?.eq ( AE.emit 'what' )?.constructor?.name, 'Promise'\n  T?.ok ( await AE.emit 'what' ) instanceof AE_Event_results\n  T?.eq ( isa.function      AE.on 'foo', ( ( event ) -> )      ), true\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@event_emitting_1 = ( T, done ) ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  AE.on 'sum', on_sum = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a + e.b ), 100\n  AE.on 'mul', on_mul = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a * e.b ), 100\n  #.........................................................................................................\n  ### NOTE call to `as_object()` not strictly necessary as the underlying `equals()` method does work with\n  the custom types we're using (`AE_Event_results` and `AE_Event`), but that's a flaw in the algorithm so\n  let's try to write it the correct way: ###\n  T?.eq ( as_object await AE.emit 'sum', { a: 100, b: 200, } ), { '$key': 'event-results', event: { '$key': 'sum', a: 100, b: 200 }, results: [ 300 ] }\n  T?.eq ( as_object await AE.emit 'mul', { a: 100, b: 200, } ), { '$key': 'event-results', event: { '$key': 'mul', a: 100, b: 200 }, results: [ 20000 ] }\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@type_validation = ( T, done ) ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  await throws T, 'expected 1 or 2 arguments, got 5',           ( -> await AE.emit 'double', 3, 4, 5, 6   )\n  await throws T, 'expected 1 or 2 arguments, got 3',           ( -> await AE.emit 'foo', 3, [ 4, 5, 6, ] )\n  await throws T, 'expected 2 arguments, got 0',                ( -> AE.on() )\n  await throws T, 'expected 2 arguments, got 1',                ( -> AE.on 4 )\n  await throws T, 'expected a event_key, got a number',         ( -> AE.on 4, 5 )\n  await throws T, 'expected a event_key, got a number',         ( -> AE.on 4, -> )\n  await throws T, 'expected 2 arguments, got 1',                ( -> AE.on s'abc' )\n  await throws T, 'expected 2 arguments, got 3',                ( -> AE.on s'abc', ( -> ), 9 )\n  await throws T, 'expected 2 arguments, got 3',                ( -> AE.on 'abc', {}, 9 )\n  await throws T, 'expected event_listener for object property \\'on_abc\\', got a undefined', ( -> AE.on 'abc', {} )\n  await throws T, 'expected event_listener for object property \\'on_abc\\', got a undefined', ( -> AE.on s'abc', {} )\n  await throws T, 'expected 1 or 2 arguments, got 0',           ( -> new Datom() )\n  await throws T, 'expected a event_key, got a number',         ( -> new Datom 42 )\n  await throws T, 'expected a event_key, got a object',         ( -> new Datom null )\n  await throws T, 'expected a event_key, got a undefined',      ( -> new Datom undefined )\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@event_emitting_3 = ( T, done ) ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  receiver =\n    on_square:      ( event ) -> info '^992-4^', event; event.$value ** 2\n    on_cube:        ( event ) -> info '^992-6^', event; event.$value ** 3\n    on_double:      ( event ) -> info '^992-5^', event; event.$value *  2\n    on_any:         ( event ) -> info '^992-5^', event\n    on_cube_symbol: ( event ) -> info '^992-6^', event; event.$value ** 3\n  #.........................................................................................................\n  AE.on 'square',   receiver\n  AE.on 'double',   receiver\n  AE.on 'cube',     receiver.on_cube\n  AE.on s'cube',    receiver.on_cube\n  # AE.on_any,        receiver.on_any\n  #.........................................................................................................\n  # urge '^992-7^', AE\n  # urge '^992-8^', AE.key_symbols[ 'square' ]\n  # urge '^992-9^', AE.listeners\n  # urge '^992-10^', AE.listeners.get AE.key_symbols[ 'square' ]\n  f = ->\n    urge '^992-11^', await AE.emit            'square', 11\n    urge '^992-12^', await AE.emit            'double', 12\n    urge '^992-13^', await AE.emit            'cube',   13\n    urge '^992-13^', await AE.emit new AE_Event  'cube',   14\n    urge '^992-13^', await AE.emit new AE_Event  s'cube',  14\n    ### TAINT should not be accepted, emit 1 object or 1 key plus 0-1 data: ###\n    try ( urge '^992-14^', await AE.emit 'double', 3, 4, 5, 6      ) catch e then warn '^992-15^', reverse e.message\n    try ( urge '^992-16^', await AE.emit 'foo', 3, [ 4, 5, 6, ] ) catch e then warn '^992-17^', reverse e.message\n    urge '^992-18^', await AE.emit 'foo', [ 3, 4, 5, 6, ]\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\ndemo_1 = ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  receiver =\n    on_square:      ( event ) -> info '^992-4^', event; event.$value ** 2\n    on_cube:        ( event ) -> info '^992-6^', event; event.$value ** 3\n    on_double:      ( event ) -> info '^992-5^', event; event.$value *  2\n    on_any:         ( event ) -> info '^992-5^', event\n    on_cube_symbol: ( event ) -> info '^992-6^', event; event.$value ** 3\n  AE.on 'square',   receiver\n  AE.on 'double',   receiver\n  AE.on 'cube',     receiver.on_cube\n  AE.on s'cube',    receiver.on_cube\n  AE.on '*',        receiver.on_any\n  # urge '^992-7^', AE\n  # urge '^992-8^', AE.key_symbols[ 'square' ]\n  # urge '^992-9^', AE.listeners\n  # urge '^992-10^', AE.listeners.get AE.key_symbols[ 'square' ]\n  urge '^992-11^', await AE.emit            'square', 11\n  urge '^992-12^', await AE.emit            'double', 12\n  urge '^992-13^', await AE.emit            'cube',   13\n  urge '^992-13^', await AE.emit new AE_Event  'cube',   14\n  urge '^992-13^', await AE.emit new AE_Event  s'cube',  14\n  ### TAINT should not be accepted, emit 1 object or 1 key plus 0-1 data: ###\n  try ( urge '^992-14^', await AE.emit 'double', 3, 4, 5, 6      ) catch e then warn '^992-15^', reverse e.message\n  try ( urge '^992-16^', await AE.emit 'foo', 3, [ 4, 5, 6, ] ) catch e then warn '^992-17^', reverse e.message\n  urge '^992-18^', await AE.emit 'foo', [ 3, 4, 5, 6, ]\n  return null\n\n#===========================================================================================================\ndemo_2 = ->\n  INTERTALK = require '../../../apps/intertalk'\n  #.........................................................................................................\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  class A\n  class B extends Object\n  urge '^992-19^', A\n  urge '^992-20^', A.freeze\n  urge '^992-21^', new A()\n  urge '^992-22^', B\n  urge '^992-23^', new B()\n  urge '^992-24^', isa.object A\n  urge '^992-25^', isa.object B\n  urge '^992-26^', isa.object new A()\n  urge '^992-27^', isa.object new B()\n  try new Datom()     catch e then warn '^992-28^', reverse e.message\n  try new Datom 5     catch e then warn '^992-29^', reverse e.message\n  try new Datom null  catch e then warn '^992-30^', reverse e.message\n  try new Datom {}    catch e then warn '^992-31^', reverse e.message\n  urge '^992-32^', new Datom 'foo'\n  urge '^992-33^', new Datom 'foo', null\n  urge '^992-34^', new Datom 'foo', undefined\n  urge '^992-35^', new Datom 'foo', 56\n  urge '^992-36^', new Datom 'foo', { bar: 56, }\n  urge '^992-37^', new Datom 'foo', { bar: 56, $key: 'other', }\n  urge '^992-38^', new Datom s'foo', { bar: 56, $key: 'other', }\n  urge '^992-39^', new Datom { bar: 56, $key: 'other', }\n  urge '^992-40^', new Datom { bar: 56, $key: 'other', $freeze: false, }\n  urge '^992-41^', new Datom { bar: 56, $key: 'other', $freeze: true, }\n  urge '^992-42^', new Datom { bar: 56, $key: 'other', $freeze: null, }\n  urge '^992-43^', new Datom 'something', { $freeze: false, }\n  urge '^992-44^', new Datom 'something', { $freeze: true,  }\n  urge '^992-45^', new Datom 'something', { $freeze: null,  }\n  #.........................................................................................................\n  ### must set `{ $freeze: false, }` explicitly else datom will be (superficially) frozen: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    d.p = 7\n    urge '^992-46^', d\n    return null\n  #.........................................................................................................\n  ### passing in an existing datom (or event) `d` into `new Datom d` (or `new AE_Event d`) results in a copy\n  of `d`: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    e = new Datom d\n    urge '^992-47^', d, e, d is e\n    return null\n  #.........................................................................................................\n  ### events are just `Datom`s: ###\n  urge '^992-48^', new AE_Event s'foo', { bar: 56, }\n  #.........................................................................................................\n  ### calls to `emit` are just calls to `new AE_Event()`: ###\n  await do =>\n    AE.on 'myevent', ( event ) -> info '^992-49^', event; event.n ** 2\n    help '^992-50^', await AE.emit 'myevent', { n: 16, }\n    return null\n  #.........................................................................................................\n  return null\n\n#===========================================================================================================\ndemo_3 = ->\n  INTERTALK = require '../../../apps/intertalk'\n  { AE, Async_events, AE_Event, AE_Event_results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK\n  #.........................................................................................................\n  AE.on 'abc', {}\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_1()\n  # await demo_2()\n  # await demo_3()\n  await test @\n\n\n\n\n\n\n"
  ]
}