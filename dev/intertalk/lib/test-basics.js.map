{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertalk'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require 'guy-test'\n#-----------------------------------------------------------------------------------------------------------\ns                         = ( name ) -> Symbol.for  name\nps                        = ( name ) -> Symbol      name\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n#===========================================================================================================\nisa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\nas_object = ( x ) ->\n  return x unless isa_object x\n  R       = {}\n  R[ k ]  = as_object v for k, v of x\n  return R\n\n#===========================================================================================================\nthrows = ( T, matcher, f ) ->\n  await do =>\n    error = null\n    try await f() catch error\n      warn '^992-1^', reverse error.message\n      T?.eq error.message, matcher\n    T?.ok error?\n  return null\n\n#===========================================================================================================\ntry_and_show = ( T, f ) ->\n  e = null\n  try ( urge '^992-2^', f() ) catch e then help '^992-3^', reverse \"try_and_show: #{rpr e.message}\"\n  unless e?\n    warn '^992-3^', reverse \"expected an error but none was thrown\"\n    T.fail \"^992-3^ expected an error but none was thrown\"\n  return null\n\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  T?.eq ( isa.function      IT.on       ), true\n  T?.eq ( isa.function      IT.on_any   ), false\n  T?.eq ( isa.asyncfunction IT.emit     ), true\n  T?.eq ( IT.emit 'what' )?.constructor?.name, 'Promise'\n  T?.ok ( await IT.emit 'what' ) instanceof Results\n  T?.eq ( isa.function      IT.on 'foo', ( ( note ) -> )      ), true\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@WeakMap_replacement = ( T, done ) ->\n  WeakMapShim = require 'weak-map'\n  # urge '^343^', ( k for k in Object.keys require.cache when /intertalk/.test k ) #[ 'intertalk' ]\n  purge_require_cache_entry_for_intertalk = ->\n    for k in Object.keys require.cache when /\\/intertalk\\/lib\\/main.js/.test k\n      delete require.cache[ k ]\n    return null\n  #.........................................................................................................\n  try\n    original_WeakMap = globalThis.WeakMap\n    warn '^423-1^', '(OK)', reverse \"temporarily removing WeakMap\"\n    delete globalThis.WeakMap\n    try WeakMap catch error then help '^423-2^', '(OK)', reverse error.message\n    #.......................................................................................................\n    do =>\n      ### make sure our WeakMap shim works as expected ###\n      debug '^423-3^', wm = new WeakMapShim()\n      key = s'key'\n      try_and_show T, -> wm.set 'abc', 'data-abc'\n      try_and_show T, -> wm.set key, 'data-abc'\n      T?.throws 'Invalid value used as weak map key', -> wm.set 'abc', 'data-abc'\n      T?.throws 'Invalid value used as weak map key', -> wm.set key, 'data-abc'\n      return null\n    #.......................................................................................................\n    do =>\n      ### make sure INTERTALK_LIB works in absence of WeakMap ###\n      purge_require_cache_entry_for_intertalk()\n      INTERTALK_LIB = require '../../../apps/intertalk'\n      { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n      debug '^423-4^', IT.listeners\n      T?.ok IT.listeners instanceof Map\n      return null\n    #.......................................................................................................\n  finally\n    ### ensure reset works so other tests will not be affected ###\n    help '^423-5^', '(OK)', reverse \"resetting WeakMap\"\n    globalThis.WeakMap = original_WeakMap\n    help '^423-6^', '(OK)', reverse WeakMap\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@event_emitting_1 = ( T, done ) ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  IT.on 'sum', on_sum = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a + e.b ), 100\n  IT.on 'mul', on_mul = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a * e.b ), 100\n  #.........................................................................................................\n  ### NOTE call to `as_object()` not strictly necessary as the underlying `equals()` method does work with\n  the custom types we're using (`Results` and `Note`), but that's a flaw in the algorithm so\n  let's try to write it the correct way: ###\n  T?.eq ( as_object await IT.emit 'sum', { a: 100, b: 200, } ), { '$key': '$results', note: { '$key': 'sum', a: 100, b: 200 }, results: [ 300 ] }\n  T?.eq ( as_object await IT.emit 'mul', { a: 100, b: 200, } ), { '$key': '$results', note: { '$key': 'mul', a: 100, b: 200 }, results: [ 20000 ] }\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@type_validation = ( T, done ) ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  await throws T, 'expected 1 or 2 arguments, got 5',           ( -> await IT.emit 'double', 3, 4, 5, 6   )\n  await throws T, 'expected 1 or 2 arguments, got 3',           ( -> await IT.emit 'foo', 3, [ 4, 5, 6, ] )\n  await throws T, 'expected 2 arguments, got 0',                ( -> IT.on() )\n  await throws T, 'expected 2 arguments, got 1',                ( -> IT.on 4 )\n  await throws T, 'expected a event_key, got a number',         ( -> IT.on 4, 5 )\n  await throws T, 'expected a event_key, got a number',         ( -> IT.on 4, -> )\n  await throws T, 'expected 2 arguments, got 1',                ( -> IT.on s'abc' )\n  await throws T, 'expected 2 arguments, got 3',                ( -> IT.on s'abc', ( -> ), 9 )\n  await throws T, 'expected 2 arguments, got 3',                ( -> IT.on 'abc', {}, 9 )\n  await throws T, 'expected event_listener for object property \\'on_abc\\', got a undefined', ( -> IT.on 'abc', {} )\n  await throws T, 'expected event_listener for object property \\'on_abc\\', got a undefined', ( -> IT.on s'abc', {} )\n  await throws T, 'expected 1 or 2 arguments, got 0',           ( -> new Datom() )\n  await throws T, 'expected a event_key, got a number',         ( -> new Datom 42 )\n  await throws T, 'expected a event_key, got a object',         ( -> new Datom null )\n  await throws T, 'expected a event_key, got a undefined',      ( -> new Datom undefined )\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@event_emitting_3 = ( T, done ) ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  receiver =\n    on_square:      ( note ) -> info '^992-4^', note; note.$value ** 2\n    on_cube:        ( note ) -> info '^992-5^', note; note.$value ** 3\n    on_double:      ( note ) -> info '^992-6^', note; note.$value *  2\n    on_any:         ( note ) -> info '^992-7^', note\n    on_cube_symbol: ( note ) -> info '^992-8^', note; note.$value ** 3\n  #.........................................................................................................\n  IT.on 'square',   receiver\n  IT.on 'double',   receiver\n  IT.on 'cube',     receiver.on_cube\n  IT.on s'cube',    receiver.on_cube\n  # IT.on_any,        receiver.on_any\n  #.........................................................................................................\n  # urge '^992-9^', IT\n  # urge '^992-10^', IT.key_symbols[ 'square' ]\n  # urge '^992-11^', IT.listeners\n  # urge '^992-12^', IT.listeners.get IT.key_symbols[ 'square' ]\n  f = ->\n    urge '^992-13^', await IT.emit            'square', 11\n    urge '^992-14^', await IT.emit            'double', 12\n    urge '^992-15^', await IT.emit            'cube',   13\n    urge '^992-16^', await IT.emit new Note  'cube',   14\n    urge '^992-17^', await IT.emit new Note  s'cube',  14\n    ### TAINT should not be accepted, emit 1 object or 1 key plus 0-1 data: ###\n    try ( urge '^992-18^', await IT.emit 'double', 3, 4, 5, 6      ) catch e then warn '^992-19^', reverse e.message\n    try ( urge '^992-20^', await IT.emit 'foo', 3, [ 4, 5, 6, ] ) catch e then warn '^992-21^', reverse e.message\n    urge '^992-22^', await IT.emit 'foo', [ 3, 4, 5, 6, ]\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\ndemo_1 = ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  receiver =\n    on_square:      ( note ) -> info '^992-23^', note; note.$value ** 2\n    on_cube:        ( note ) -> info '^992-24^', note; note.$value ** 3\n    on_double:      ( note ) -> info '^992-25^', note; note.$value *  2\n    on_any:         ( note ) -> info '^992-26^', note\n    on_cube_symbol: ( note ) -> info '^992-27^', note; note.$value ** 3\n  IT.on 'square',   receiver\n  IT.on 'double',   receiver\n  IT.on 'cube',     receiver.on_cube\n  IT.on s'cube',    receiver.on_cube\n  IT.on '*',        receiver.on_any\n  # urge '^992-28^', IT\n  # urge '^992-29^', IT.key_symbols[ 'square' ]\n  # urge '^992-30^', IT.listeners\n  # urge '^992-31^', IT.listeners.get IT.key_symbols[ 'square' ]\n  urge '^992-32^', await IT.emit            'square', 11\n  urge '^992-33^', await IT.emit            'double', 12\n  urge '^992-34^', await IT.emit            'cube',   13\n  urge '^992-35^', await IT.emit new Note  'cube',   14\n  urge '^992-36^', await IT.emit new Note  s'cube',  14\n  ### TAINT should not be accepted, emit 1 object or 1 key plus 0-1 data: ###\n  try ( urge '^992-37^', await IT.emit 'double', 3, 4, 5, 6      ) catch e then warn '^992-38^', reverse e.message\n  try ( urge '^992-39^', await IT.emit 'foo', 3, [ 4, 5, 6, ] ) catch e then warn '^992-40^', reverse e.message\n  urge '^992-41^', await IT.emit 'foo', [ 3, 4, 5, 6, ]\n  return null\n\n#===========================================================================================================\ndemo_2 = ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  #.........................................................................................................\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  class A\n  class B extends Object\n  urge '^992-42^', A\n  urge '^992-43^', A.freeze\n  urge '^992-44^', new A()\n  urge '^992-45^', B\n  urge '^992-46^', new B()\n  urge '^992-47^', isa.object A\n  urge '^992-48^', isa.object B\n  urge '^992-49^', isa.object new A()\n  urge '^992-50^', isa.object new B()\n  try new Datom()     catch e then warn '^992-51^', reverse e.message\n  try new Datom 5     catch e then warn '^992-52^', reverse e.message\n  try new Datom null  catch e then warn '^992-53^', reverse e.message\n  try new Datom {}    catch e then warn '^992-54^', reverse e.message\n  urge '^992-55^', new Datom 'foo'\n  urge '^992-56^', new Datom 'foo', null\n  urge '^992-57^', new Datom 'foo', undefined\n  urge '^992-58^', new Datom 'foo', 56\n  urge '^992-59^', new Datom 'foo', { bar: 56, }\n  urge '^992-60^', new Datom 'foo', { bar: 56, $key: 'other', }\n  urge '^992-61^', new Datom s'foo', { bar: 56, $key: 'other', }\n  urge '^992-62^', new Datom { bar: 56, $key: 'other', }\n  urge '^992-63^', new Datom { bar: 56, $key: 'other', $freeze: false, }\n  urge '^992-64^', new Datom { bar: 56, $key: 'other', $freeze: true, }\n  urge '^992-65^', new Datom { bar: 56, $key: 'other', $freeze: null, }\n  urge '^992-66^', new Datom 'something', { $freeze: false, }\n  urge '^992-67^', new Datom 'something', { $freeze: true,  }\n  urge '^992-68^', new Datom 'something', { $freeze: null,  }\n  #.........................................................................................................\n  ### must set `{ $freeze: false, }` explicitly else datom will be (superficially) frozen: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    d.p = 7\n    urge '^992-69^', d\n    return null\n  #.........................................................................................................\n  ### passing in an existing datom (or note) `d` into `new Datom d` (or `new Note d`) results in a copy\n  of `d`: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    e = new Datom d\n    urge '^992-70^', d, e, d is e\n    return null\n  #.........................................................................................................\n  ### events are just `Datom`s: ###\n  urge '^992-71^', new Note s'foo', { bar: 56, }\n  #.........................................................................................................\n  ### calls to `emit` are just calls to `new Note()`: ###\n  await do =>\n    IT.on 'myevent', ( note ) -> info '^992-72^', note; note.n ** 2\n    help '^992-73^', await IT.emit 'myevent', { n: 16, }\n    return null\n  #.........................................................................................................\n  return null\n\n#===========================================================================================================\ndemo_3 = ->\n  INTERTALK_LIB = require '../../../apps/intertalk'\n  { IT, Intertalk, Note, Results, Datom, isa, validate, isa_optional, validate_optional } = INTERTALK_LIB\n  #.........................................................................................................\n  IT.on 'abc', {}\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_1()\n  # await demo_2()\n  # await demo_3()\n  # await test @WeakMap_replacement\n  await test @\n\n\n\n\n\n\n"
  ]
}