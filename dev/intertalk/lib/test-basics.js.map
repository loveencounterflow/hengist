{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'intertalk'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\ntest                      = require 'guy-test'\n#-----------------------------------------------------------------------------------------------------------\ns                         = ( name ) -> Symbol.for  name\nps                        = ( name ) -> Symbol      name\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n\n############################################################################################################\n#\n#===========================================================================================================\nisa_object = ( x ) -> x? and ( typeof x is 'object' ) and ( ( Object::toString.call x ) is '[object Object]' )\nas_object = ( x ) ->\n  return x unless isa_object x\n  R       = {}\n  R[ k ]  = as_object v for k, v of x\n  return R\n\n#===========================================================================================================\nthrows = ( T, matcher, f ) ->\n  await do =>\n    error = null\n    try await f() catch error\n      warn '^992-1^', reverse error.message\n      T?.eq error.message, matcher\n    T?.ok error?\n  return null\n\n#===========================================================================================================\ntry_and_show = ( T, f ) ->\n  e = null\n  try ( urge '^992-2^', f() ) catch e then help '^992-3^', reverse \"try_and_show: #{rpr e.message}\"\n  unless e?\n    warn '^992-3^', reverse \"expected an error but none was thrown\"\n    T.fail \"^992-3^ expected an error but none was thrown\"\n  return null\n\n\n############################################################################################################\n#\n#===========================================================================================================\ndemo_1 = ->\n  { Intertalk } = require '../../../apps/intertalk'\n  itk           = new Intertalk()\n  #.........................................................................................................\n  receiver =\n    on_square:      ( note ) -> info '^992-23^', note; note.$value ** 2\n    on_cube:        ( note ) -> info '^992-24^', note; note.$value ** 3\n    on_double:      ( note ) -> info '^992-25^', note; note.$value *  2\n    on_any:         ( note ) -> info '^992-26^', note\n    on_cube_symbol: ( note ) -> info '^992-27^', note; note.$value ** 3\n  itk.on 'square',   receiver\n  itk.on 'double',   receiver\n  itk.on 'cube',     receiver.on_cube\n  itk.on s'cube',    receiver.on_cube\n  itk.on '*',        receiver.on_any\n  # urge '^992-28^', itk\n  # urge '^992-29^', itk.key_symbols[ 'square' ]\n  # urge '^992-30^', itk.listeners\n  # urge '^992-31^', itk.listeners.get itk.key_symbols[ 'square' ]\n  urge '^992-32^', await itk.emit            'square', 11\n  urge '^992-33^', await itk.emit            'double', 12\n  urge '^992-34^', await itk.emit            'cube',   13\n  urge '^992-35^', await itk.emit new Note  'cube',   14\n  urge '^992-36^', await itk.emit new Note  s'cube',  14\n  ### TAINT should not be accepted, emit 1 object or 1 key plus 0-1 data: ###\n  try ( urge '^992-37^', await itk.emit 'double', 3, 4, 5, 6      ) catch e then warn '^992-38^', reverse e.message\n  try ( urge '^992-39^', await itk.emit 'foo', 3, [ 4, 5, 6, ] ) catch e then warn '^992-40^', reverse e.message\n  urge '^992-41^', await itk.emit 'foo', [ 3, 4, 5, 6, ]\n  return null\n\n#===========================================================================================================\ndemo_2 = ->\n  { Intertalk } = require '../../../apps/intertalk'\n  itk           = new Intertalk()\n  #.........................................................................................................\n  class A\n  class B extends Object\n  urge '^992-42^', A\n  urge '^992-43^', A.freeze\n  urge '^992-44^', new A()\n  urge '^992-45^', B\n  urge '^992-46^', new B()\n  urge '^992-47^', isa.object A\n  urge '^992-48^', isa.object B\n  urge '^992-49^', isa.object new A()\n  urge '^992-50^', isa.object new B()\n  try new Datom()     catch e then warn '^992-51^', reverse e.message\n  try new Datom 5     catch e then warn '^992-52^', reverse e.message\n  try new Datom null  catch e then warn '^992-53^', reverse e.message\n  try new Datom {}    catch e then warn '^992-54^', reverse e.message\n  urge '^992-55^', new Datom 'foo'\n  urge '^992-56^', new Datom 'foo', null\n  urge '^992-57^', new Datom 'foo', undefined\n  urge '^992-58^', new Datom 'foo', 56\n  urge '^992-59^', new Datom 'foo', { bar: 56, }\n  urge '^992-60^', new Datom 'foo', { bar: 56, $key: 'other', }\n  urge '^992-61^', new Datom s'foo', { bar: 56, $key: 'other', }\n  urge '^992-62^', new Datom { bar: 56, $key: 'other', }\n  urge '^992-63^', new Datom { bar: 56, $key: 'other', $freeze: false, }\n  urge '^992-64^', new Datom { bar: 56, $key: 'other', $freeze: true, }\n  urge '^992-65^', new Datom { bar: 56, $key: 'other', $freeze: null, }\n  urge '^992-66^', new Datom 'something', { $freeze: false, }\n  urge '^992-67^', new Datom 'something', { $freeze: true,  }\n  urge '^992-68^', new Datom 'something', { $freeze: null,  }\n  #.........................................................................................................\n  ### must set `{ $freeze: false, }` explicitly else datom will be (superficially) frozen: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    d.p = 7\n    urge '^992-69^', d\n    return null\n  #.........................................................................................................\n  ### passing in an existing datom (or note) `d` into `new Datom d` (or `new Note d`) results in a copy\n  of `d`: ###\n  do =>\n    d = new Datom 'o', { $freeze: false, }\n    e = new Datom d\n    urge '^992-70^', d, e, d is e\n    return null\n  #.........................................................................................................\n  ### events are just `Datom`s: ###\n  urge '^992-71^', new Note s'foo', { bar: 56, }\n  #.........................................................................................................\n  ### calls to `emit` are just calls to `new Note()`: ###\n  await do =>\n    itk.on 'myevent', ( note ) -> info '^992-72^', note; note.n ** 2\n    help '^992-73^', await itk.emit 'myevent', { n: 16, }\n    return null\n  #.........................................................................................................\n  return null\n\n#===========================================================================================================\ndemo_3 = ->\n  { Intertalk } = require '../../../apps/intertalk'\n  itk           = new Intertalk()\n  #.........................................................................................................\n  itk.on 'abc', {}\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\n#\n#===========================================================================================================\n@interface = ( T, done ) ->\n  INTERTALK     = require '../../../apps/intertalk'\n  { Intertalk } = INTERTALK\n  itk           = new Intertalk()\n  #.........................................................................................................\n  T?.eq ( INTERTALK._extras.isa.function      itk.on       ), true\n  T?.eq ( INTERTALK._extras.isa.function      itk.on_any   ), true\n  T?.eq ( INTERTALK._extras.isa.asyncfunction itk.emit     ), true\n  T?.eq ( itk.emit 'what' )?.constructor?.name, 'Promise'\n  T?.ok ( await itk.emit 'what' ) instanceof INTERTALK.Results\n  T?.eq ( INTERTALK._extras.isa.null itk.on 'foo', ( ( note ) -> )      ), true\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@WeakMap_replacement = ( T, done ) ->\n  WeakMapShim = require 'weak-map'\n  # urge '^343^', ( k for k in Object.keys require.cache when /intertalk/.test k ) #[ 'intertalk' ]\n  purge_require_cache_entry_for_intertalk = ->\n    for k in Object.keys require.cache when /\\/intertalk\\/lib\\/main.js/.test k\n      delete require.cache[ k ]\n    return null\n  #.........................................................................................................\n  try\n    original_WeakMap = globalThis.WeakMap\n    warn '^423-1^', '(OK)', reverse \"temporarily removing WeakMap\"\n    delete globalThis.WeakMap\n    try WeakMap catch error then help '^423-2^', '(OK)', reverse error.message\n    #.......................................................................................................\n    do =>\n      ### make sure our WeakMap shim works as expected ###\n      debug '^423-3^', wm = new WeakMapShim()\n      key = s'key'\n      try_and_show T, -> wm.set 'abc', 'data-abc'\n      try_and_show T, -> wm.set key, 'data-abc'\n      T?.throws 'Invalid value used as weak map key', -> wm.set 'abc', 'data-abc'\n      T?.throws 'Invalid value used as weak map key', -> wm.set key, 'data-abc'\n      return null\n    #.......................................................................................................\n    do =>\n      ### make sure INTERTALK_LIB works in absence of WeakMap ###\n      purge_require_cache_entry_for_intertalk()\n      { Intertalk } = require '../../../apps/intertalk'\n      itk           = new Intertalk()\n      debug '^423-4^', itk.listeners\n      T?.ok itk.listeners instanceof Map\n      return null\n    #.......................................................................................................\n  finally\n    ### ensure reset works so other tests will not be affected ###\n    help '^423-5^', '(OK)', reverse \"resetting WeakMap\"\n    globalThis.WeakMap = original_WeakMap\n    help '^423-6^', '(OK)', reverse WeakMap\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@event_emitting_1 = ( T, done ) ->\n  { Intertalk } = require '../../../apps/intertalk'\n  itk           = new Intertalk()\n  #.........................................................................................................\n  itk.on 'sum', on_sum = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a + e.b ), 100\n  itk.on 'mul', on_mul = ( e ) -> new Promise ( resolve ) -> setTimeout ( -> resolve e.a * e.b ), 100\n  #.........................................................................................................\n  ### NOTE call to `as_object()` not strictly necessary as the underlying `equals()` method does work with\n  the custom types we're using (`Results` and `Note`), but that's a flaw in the algorithm so\n  let's try to write it the correct way: ###\n  T?.eq ( as_object await itk.emit 'sum', { a: 100, b: 200, } ), { '$key': '$results', note: { '$key': 'sum', a: 100, b: 200 }, results: [ 300 ] }\n  T?.eq ( as_object await itk.emit 'mul', { a: 100, b: 200, } ), { '$key': '$results', note: { '$key': 'mul', a: 100, b: 200 }, results: [ 20000 ] }\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@type_validation = ( T, done ) ->\n  INTERTALK     = require '../../../apps/intertalk'\n  { Intertalk } = INTERTALK\n  itk           = new Intertalk()\n  #.........................................................................................................\n  await throws T, 'expected 1 or 2 arguments, got 5',           ( -> await itk.emit 'double', 3, 4, 5, 6   )\n  await throws T, 'expected 1 or 2 arguments, got 3',           ( -> await itk.emit 'foo', 3, [ 4, 5, 6, ] )\n  await throws T, 'expected 2 arguments, got 0',                ( -> itk.on() )\n  await throws T, 'expected 2 arguments, got 1',                ( -> itk.on 4 )\n  await throws T, 'expected a IT_note_$key, got a number',      ( -> itk.on 4, 5 )\n  await throws T, 'expected a IT_note_$key, got a number',      ( -> itk.on 4, -> )\n  await throws T, 'expected 2 arguments, got 1',                ( -> itk.on s'abc' )\n  await throws T, 'expected 2 arguments, got 3',                ( -> itk.on s'abc', ( -> ), 9 )\n  await throws T, 'expected 2 arguments, got 3',                ( -> itk.on 'abc', {}, 9 )\n  await throws T, 'expected a IT_listener, got a object',       ( -> itk.on 'abc', {} )\n  await throws T, 'expected a IT_listener, got a object',       ( -> itk.on s'abc', {} )\n  await throws T, 'expected 1 or 2 arguments, got 0',           ( -> new INTERTALK._extras.Datom() )\n  await throws T, 'expected a IT_note_$key, got a number',      ( -> new INTERTALK._extras.Datom 42 )\n  await throws T, 'expected a IT_note_$key, got a object',      ( -> new INTERTALK._extras.Datom null )\n  await throws T, 'expected a IT_note_$key, got a undefined',   ( -> new INTERTALK._extras.Datom undefined )\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@on_any = ( T, done ) ->\n  { Intertalk } = require '../../../apps/intertalk'\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    counter = 0\n    itk.on_any ( note ) -> counter++\n    await itk.emit 'foo'\n    await itk.emit 'bar'\n    await itk.emit 'baz'\n    T?.eq counter, 3\n    return null\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'any', 1 ], [ 'any', 2 ], [ 'any', 3 ] ]\n    results = []\n    itk.on_any ( note ) -> 'any'\n    itk.on 'd1', ( note ) -> 1\n    itk.on 'd2', ( note ) -> 2\n    itk.on 'd3', ( note ) -> 3\n    results.push ( await itk.emit 'd1' ).results\n    results.push ( await itk.emit 'd2' ).results\n    results.push ( await itk.emit 'd3' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'any', 1 ], [ 'any', 2 ], [ 'any', 3 ] ]\n    results = []\n    itk.on 'd1', ( note ) -> 1\n    itk.on 'd2', ( note ) -> 2\n    itk.on 'd3', ( note ) -> 3\n    itk.on_any ( note ) -> 'any'\n    results.push ( await itk.emit 'd1' ).results\n    results.push ( await itk.emit 'd2' ).results\n    results.push ( await itk.emit 'd3' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'any1', 'any2', 'any3', 1 ], [ 'any1', 'any2', 'any3', 2 ], [ 'any1', 'any2', 'any3', 3 ] ]\n    results = []\n    itk.on 'd1', ( note ) -> 1\n    itk.on 'd2', ( note ) -> 2\n    itk.on 'd3', ( note ) -> 3\n    itk.on_any ( note ) -> 'any1'\n    itk.on_any ( note ) -> 'any2'\n    itk.on_any ( note ) -> 'any3'\n    results.push ( await itk.emit 'd1' ).results\n    results.push ( await itk.emit 'd2' ).results\n    results.push ( await itk.emit 'd3' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@on_unhandled = ( T, done ) ->\n  { Intertalk } = require '../../../apps/intertalk'\n  { after }     = GUY.async\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'u1', ], [ 'u1', ], [ 'u1', ] ]\n    results = []\n    itk.on_unhandled u1 = ( note ) -> 'u1'\n    results.push ( await itk.emit 'foo' ).results\n    results.push ( await itk.emit 'bar' ).results\n    results.push ( await itk.emit 'baz' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'one:k1' ], [ 'two:u1', 'two:u2' ], [ 'three:u1', 'three:u2' ] ]\n    results = []\n    itk.on 'one',     k1 = ( note ) -> after 0.05, -> help \"#{note.$key}:k1\"; \"#{note.$key}:k1\"\n    itk.on_unhandled  u1 = ( note ) -> after 0.05, -> help \"#{note.$key}:u1\"; \"#{note.$key}:u1\"\n    itk.on_unhandled  u2 = ( note ) -> after 0.05, -> help \"#{note.$key}:u2\"; \"#{note.$key}:u2\"\n    results.push ( await itk.emit 'one' ).results\n    results.push ( await itk.emit 'two' ).results\n    results.push ( await itk.emit 'three' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  await do ->\n    itk     = new Intertalk()\n    matcher = [ [ 'one:a2', 'one:k1' ], [ 'two:a2', 'two:u1', 'two:u2' ], [ 'three:a2', 'three:u1', 'three:u2' ] ]\n    results = []\n    itk.on 'one',     k1 = ( note ) -> after 0.05, -> help \"#{note.$key}:k1\"; \"#{note.$key}:k1\"\n    itk.on_unhandled  u1 = ( note ) -> after 0.05, -> help \"#{note.$key}:u1\"; \"#{note.$key}:u1\"\n    itk.on_unhandled  u2 = ( note ) -> after 0.05, -> help \"#{note.$key}:u2\"; \"#{note.$key}:u2\"\n    itk.on_any        a2 = ( note ) -> after 0.05, -> help \"#{note.$key}:a2\"; \"#{note.$key}:a2\"\n    results.push ( await itk.emit 'one'   ).results\n    results.push ( await itk.emit 'two'   ).results\n    results.push ( await itk.emit 'three' ).results\n    T?.eq results, matcher\n    return null\n  #.........................................................................................................\n  done?()\n\n# #===========================================================================================================\n# @result_ordering = ( T, done ) ->\n#   { Intertalk } = require '../../../apps/intertalk'\n#   # { after }     = GUY.async\n#   { nameit }    = ( require '../../../apps/webguy' ).props\n#   #.........................................................................................................\n#   await do ->\n#     itk       = new Intertalk()\n#     matcher   = [ [ 'one:k1' ], [ 'two:u1', 'two:u2' ], [ 'three:u1', 'three:u2' ] ]\n#     results   = []\n#     #.......................................................................................................\n#     get_listener = ( idx ) ->\n#       dt      = parseInt Math.random() * 1000\n#       message = \"dt:#{dt},k#{idx}\"\n#       R       = ( note ) -> new Promise ( resolve ) ->\n#         setTimeout ( -> help message; resolve message ), dt\n#       nameit message, R\n#       return R\n#     #.......................................................................................................\n#     itk.on 'whatever', get_listener idx for idx in [ 1 .. 9 ]\n#     results.push await itk.emit 'whatever'\n#     help '^243-1^', results\n#     #.......................................................................................................\n#     T?.eq results, matcher\n#     return null\n#   #.........................................................................................................\n#   done?()\n\n#===========================================================================================================\n@unsubscribing = ( T, done ) ->\n  { Intertalk } = require '../../../apps/intertalk'\n  { after }     = GUY.async\n  #.........................................................................................................\n  itk = new Intertalk()\n  itk.on_any        a1 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"a1:#{note.$key}\"; resolve \"a1:#{note.$key}\"\n  itk.on_unhandled  f1 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"f1:#{note.$key}\"; resolve \"f1:#{note.$key}\"\n  itk.on 'n1',      n1 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"n1:#{note.$key}\"; resolve \"n1:#{note.$key}\"\n  itk.on 'n2',      n2 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"n2:#{note.$key}\"; resolve \"n2:#{note.$key}\"\n  itk.on 'n3',      n3 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"n3:#{note.$key}\"; resolve \"n3:#{note.$key}\"\n  itk.on 'n3',      m3 = ( note ) -> new Promise ( resolve ) -> after 0.02, -> help \"m3:#{note.$key}\"; resolve \"m3:#{note.$key}\"\n  itk.on 'n1',      m3\n  itk.on 'n2',      m3\n  #.........................................................................................................\n  await do =>\n    results = []\n    results.push ( await itk.emit 'n1' ).results\n    results.push ( await itk.emit 'n2' ).results\n    results.push ( await itk.emit 'n3' ).results\n    T?.eq results, [ [ 'a1:n1', 'n1:n1', 'm3:n1' ], [ 'a1:n2', 'n2:n2', 'm3:n2' ], [ 'a1:n3', 'n3:n3', 'm3:n3' ] ]\n  #.........................................................................................................\n  T?.eq ( itk.unsubscribe n2 ), 1\n  T?.eq ( itk.unsubscribe n2 ), 0\n  #.........................................................................................................\n  await do =>\n    results = []\n    results.push ( await itk.emit 'n1' ).results\n    results.push ( await itk.emit 'n2' ).results\n    results.push ( await itk.emit 'n3' ).results\n    T?.eq results, [ [ 'a1:n1', 'n1:n1', 'm3:n1' ], [ 'a1:n2', 'm3:n2' ], [ 'a1:n3', 'n3:n3', 'm3:n3' ] ]\n  #.........................................................................................................\n  T?.eq ( itk.unsubscribe a1 ), 1\n  T?.eq ( itk.unsubscribe a1 ), 0\n  #.........................................................................................................\n  await do =>\n    results = []\n    results.push ( await itk.emit 'n1' ).results\n    results.push ( await itk.emit 'n2' ).results\n    results.push ( await itk.emit 'n3' ).results\n    T?.eq results, [ [ 'n1:n1', 'm3:n1' ], [ 'm3:n2' ], [ 'n3:n3', 'm3:n3' ] ]\n  #.........................................................................................................\n  T?.eq ( itk.unsubscribe 'n1', m3 ), 1\n  T?.eq ( itk.unsubscribe 'n1', m3 ), 0\n  T?.eq ( itk.unsubscribe 'n2', m3 ), 1\n  T?.eq ( itk.unsubscribe 'n2', m3 ), 0\n  #.........................................................................................................\n  await do =>\n    results = []\n    results.push ( await itk.emit 'n1' ).results\n    results.push ( await itk.emit 'n2' ).results\n    results.push ( await itk.emit 'n3' ).results\n    T?.eq results, [ [ 'n1:n1', ], [ 'f1:n2', ], [ 'n3:n3', 'm3:n3', ] ]\n  #.........................................................................................................\n  done?()\n\n#===========================================================================================================\n@control_object = ( T, done ) ->\n  { Intertalk } = require '../../../apps/intertalk'\n  { after }     = GUY.async\n  #.........................................................................................................\n  itk   = new Intertalk()\n  count = 0\n  #.........................................................................................................\n  itk.on 'one', k1 = ( note, ctl ) ->\n    T?.eq arguments.length, 2\n    #.......................................................................................................\n    return new Promise ( resolve ) ->\n      message = \"#{note.$key}:k1\"\n      after 0.05, ->\n        if note.$key is 'one'\n          ctl.unsubscribe_this()\n        else\n          count++\n          ctl.unsubscribe_all() if count > 1\n        help    message\n        resolve message\n      return null\n  #.........................................................................................................\n  itk.on 'two', k1\n  itk.on_any a1 = ( note ) -> \"#{note.$key}:a1\"\n  #.........................................................................................................\n  results = []\n  results.push ( await itk.emit 'one'   ).results\n  results.push ( await itk.emit 'two'   ).results\n  results.push ( await itk.emit 'three' ).results\n  results.push ( await itk.emit 'one'   ).results\n  results.push ( await itk.emit 'two'   ).results\n  results.push ( await itk.emit 'three' ).results\n  results.push ( await itk.emit 'one'   ).results\n  results.push ( await itk.emit 'two'   ).results\n  results.push ( await itk.emit 'three' ).results\n  T?.eq results, [\n    [ 'one:a1', 'one:k1' ],\n    [ 'two:a1', 'two:k1' ],\n    [ 'three:a1' ],\n    [ 'one:a1', ],\n    [ 'two:a1', 'two:k1' ],\n    [ 'three:a1' ],\n    [ 'one:a1', ],\n    [ 'two:a1', ],\n    [ 'three:a1' ] ]\n  #.........................................................................................................\n  done?()\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  # await demo_1()\n  # await demo_2()\n  # await demo_3()\n  # await test @WeakMap_replacement\n  # await test @unsubscribing\n  # await test @on_unhandled\n  # await test @control_object\n  await test @\n\n\n\n\n\n"
  ]
}