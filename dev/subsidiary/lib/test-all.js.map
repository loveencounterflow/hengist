{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-all.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'subsidiary'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntest                      = require 'guy-test'\n\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @imports = ( T, done ) ->\n#   # T?.halt_on_error()\n#   SUB                 = require '../../../apps/subsidiary'\n#   T?.eq ( k for k of SUB ).sort(), [ 'SUBSIDIARY', 'Subsidiary', ]\n#   probes_and_matchers = []\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       result = eval probe\n#       resolve result\n#       return null\n#   done?()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@imports = ( T, done ) ->\n  # T?.halt_on_error()\n  SUB = require '../../../apps/subsidiary'\n  T?.eq ( k for k of SUB ).sort(), [ 'SUBSIDIARY', 'Subsidiary', ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@api = ( T, done ) ->\n  # T?.halt_on_error()\n  { SUBSIDIARY }  = require '../../../apps/subsidiary'\n  keys            = GUY.props.keys SUBSIDIARY, { hidden: true, }\n  keys            = keys.sort()\n  debug keys\n  T?.eq keys, [\n    'constructor'\n    'create'\n    'get_host'\n    'hosts'\n    'is_subsidiary'\n    'subsidiaries'\n    'tie_all'\n    'tie_host_and_subsidiary'\n    'walk_subsidiaries' ]\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@ad_hoc_use = ( T, done ) ->\n  # T?.halt_on_error()\n  { SUBSIDIARY } = require '../../../apps/subsidiary'\n  #.........................................................................................................\n  host        = { a: true, }\n  subsidiary  = SUBSIDIARY.create { b: true, }\n  SUBSIDIARY.tie_host_and_subsidiary { host, subsidiary, enumerable: true, }\n  #.........................................................................................................\n  urge '^722-1^', host\n  urge '^722-2^', host.$\n  urge '^722-3^', subsidiary\n  urge '^722-4^', subsidiary._\n  #.........................................................................................................\n  T?.ok host.$          is subsidiary\n  T?.ok subsidiary._    is host\n  T?.ok host.$.b        is true\n  T?.ok subsidiary._.a  is true\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@use_in_class_1 = ( T, done ) ->\n  # T?.halt_on_error()\n  { SUBSIDIARY }          = require '../../../apps/subsidiary'\n  host_$a                 = null\n  host_$b                 = null\n  host_$not_a_subsidiary  = null\n  #=========================================================================================================\n  class Host\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ->\n      for { subsidiary_key, subsidiary, } from SUBSIDIARY.walk_subsidiaries @\n        SUBSIDIARY.tie_host_and_subsidiary { host: @, subsidiary, host_key: '_', subsidiary_key, }\n      return undefined\n    #-------------------------------------------------------------------------------------------------------\n    show: ->\n      return null\n    #-------------------------------------------------------------------------------------------------------\n    ### use plain object ###\n    $a: host_$a = SUBSIDIARY.create\n      $a: true\n      show: ->\n        @_.show()\n        return null\n    #-------------------------------------------------------------------------------------------------------\n    ### use instance ###\n    $b: host_$b = SUBSIDIARY.create new class B\n      $b: true\n      show: ->\n        @_.show()\n        return null\n    #-------------------------------------------------------------------------------------------------------\n    $not_a_subsidiary: host_$not_a_subsidiary = {}\n  #=========================================================================================================\n  host        = new Host()\n  #.........................................................................................................\n  urge '^722-5^', host\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$a                ), true\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$b                ), true\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$not_a_subsidiary ), false\n  #.........................................................................................................\n  T?.ok host.$a                   is host_$a\n  T?.ok host.$b                   is host_$b\n  T?.ok host.$not_a_subsidiary    is host_$not_a_subsidiary\n  debug host.$not_a_subsidiary\n  debug host_$not_a_subsidiary\n  T?.ok host.$a._                 is host\n  T?.ok host.$b._                 is host\n  T?.ok host.$not_a_subsidiary._  is undefined\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@use_in_class_2 = ( T, done ) ->\n  # T?.halt_on_error()\n  { SUBSIDIARY }          = require '../../../apps/subsidiary'\n  host_$a                 = null\n  host_$b                 = null\n  host_$not_a_subsidiary  = null\n  #=========================================================================================================\n  class Host\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ->\n      SUBSIDIARY.tie_all { host: @, host_key: '_', enumerable: true, }\n      return undefined\n    #-------------------------------------------------------------------------------------------------------\n    show: ->\n      return null\n    #-------------------------------------------------------------------------------------------------------\n    ### use plain object ###\n    $a: host_$a = SUBSIDIARY.create\n      $a: true\n      show: ->\n        @_.show()\n        return null\n    #-------------------------------------------------------------------------------------------------------\n    ### use instance ###\n    $b: host_$b = SUBSIDIARY.create new class B\n      $b: true\n      show: ->\n        @_.show()\n        return null\n    #-------------------------------------------------------------------------------------------------------\n    $not_a_subsidiary: host_$not_a_subsidiary = {}\n  #=========================================================================================================\n  host        = new Host()\n  #.........................................................................................................\n  urge '^722-5^', host\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$a                ), true\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$b                ), true\n  T?.eq ( SUBSIDIARY.is_subsidiary host.$not_a_subsidiary ), false\n  #.........................................................................................................\n  T?.ok host.$a                   is host_$a\n  T?.ok host.$b                   is host_$b\n  T?.ok host.$not_a_subsidiary    is host_$not_a_subsidiary\n  debug host.$not_a_subsidiary\n  debug host_$not_a_subsidiary\n  T?.ok host.$a._                 is host\n  T?.ok host.$b._                 is host\n  T?.ok host.$not_a_subsidiary._  is undefined\n  #.........................................................................................................\n  done?()\n  return null\n\n\n#===========================================================================================================\nif module is require.main then await do =>\n  await test @\n"
  ]
}