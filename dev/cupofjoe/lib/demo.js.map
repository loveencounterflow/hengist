{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'CUPOFJOE/DEMO'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\n#...........................................................................................................\n# types                     = require '../types'\n{ isa\n  validate\n  equals\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n#...........................................................................................................\ndefer                     = setImmediate\nafter                     = ( dts, f ) -> setTimeout f, dts * 1000\nsleep                     = ( dts ) -> new Promise ( done ) -> after dts, done\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_0 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram 'a', 'b', 'c'\n  urge '^4454-1^', { collector: c.collector, }\n  info '^4454-1^', c.expand()\n  urge '^4454-3^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram 'a', 'b', 'c', -> c.cram 'd'\n  urge '^4454-4^', { collector: c.collector, }\n  info '^4454-5^', c.expand()\n  urge '^4454-6^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram ->\n    c.cram 'a', 'b', 'c', -> c.cram 'd'\n  urge '^4454-7^', { collector: c.collector, }\n  info '^4454-8^', c.expand()\n  urge '^4454-9^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe { expand_early: true, }\n  c = new Cupofjoe { expand_early: false, }\n  c.cram ->\n    c.cram 'a', 1\n    c.cram 'b', 2\n    c.cram 'c', 3\n    c.cram 4, ->\n      c.cram 'd'\n      c.cram 'e'\n  urge '^4454-10^', { collector: c.collector, }\n  info '^4454-11^', c.expand()\n  urge '^4454-12^', { collector: c.collector, }\n  c.cram 'XXX'\n  info '^4454-13^', c.expand()\n  c.clear()\n  c.cram 'YYY'\n  info '^4454-14^', c.expand()\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_1 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  cupofjoe      = new Cupofjoe { flatten: false, }\n  { cram\n    expand }    = cupofjoe.export()\n  #.........................................................................................................\n  cram null, ->\n    cram 'pre1'\n    cram 'pre2', 'wat'\n    cram 'one', ->\n      cram 'two', 42\n      cram 'three', ->\n        cram 'four', ->\n          cram 'five', ->\n            cram 'six'\n    cram 'post'\n  help rpr cupofjoe\n  ds = expand()\n  info rpr ds\n  info jr ds.flat Infinity\n  # urge '^4443^', ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_2 = ->\n  cupofjoe = new ( require '../../../apps/cupofjoe' ).Cupofjoe()\n  { cram\n    expand }  = cupofjoe.export()\n  #.........................................................................................................\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  #.........................................................................................................\n  h = ( tagname, content... ) ->\n    if content.length is 0\n      d = new_datom \"^#{tagname}\"\n      return cram d, content...\n    d1 = new_datom \"<#{tagname}\"\n    d2 = new_datom \">#{tagname}\"\n    return cram d1, content..., d2\n  #.........................................................................................................\n  cram null, ->\n    h 'pre1'\n    cram null\n    h 'pre2', 'wat'\n    h 'one', ->\n      h 'two', ( new_datom '^text', text: '42' )\n      h 'three', ->\n        h 'four', ->\n          h 'five', ->\n            h 'six', ->\n              cram ( new_datom '^text', text: 'bottom' )\n    h 'post'\n  # urge rpr cupofjoe.collector\n  ds = expand()\n  info jr ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_toy_formatter_1 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  format = ( list ) ->\n    last_idx  = list.length - 1\n    R         = []\n    tagname   = null\n    for d, idx in list\n      if isa.list d\n        # R = [ R..., ( format d )..., ]\n        R.splice R.length, 0, ( format d )...\n        continue\n      d = rpr d unless isa.text d\n      if idx is 0\n        tagname = d\n        R.push if idx is last_idx then \"<#{tagname}/>\" else \"<#{tagname}>\"\n      else\n        R.push d\n    R.push \"</#{tagname}>\" if tagname? and last_idx > 0\n    return R.join ''\n  #.........................................................................................................\n  c.cram ->\n    c.cram 'alpha', 'ONE'\n    c.cram 'beta', 'TWO'\n    c.cram null\n    c.cram 'gamma'\n    c.cram 'delta', ->\n      c.cram 'eta'\n      c.cram 'theta'\n  info '^4454-2^', ds = c.expand()\n  info '^4454-3^', format ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_toy_formatter_2 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  as_datoms = ( list ) ->\n    last_idx  = list.length - 1\n    R         = []\n    tagname   = null\n    for d, idx in list\n      if isa.list d\n        # R = [ R..., ( as_datoms d )..., ]\n        R.splice R.length, 0, ( as_datoms d )...\n        continue\n      d = rpr d unless isa.text d\n      if idx is 0\n        tagname = d\n        R.push if idx is last_idx then \"<#{tagname}/>\" else \"<#{tagname}>\"\n      else\n        R.push d\n    R.push \"</#{tagname}>\" if tagname? and last_idx > 0\n    return R.join ''\n  #.........................................................................................................\n  c.cram ->\n    c.cram 'alpha', 'ONE'\n    c.cram 'beta', 'TWO'\n    c.cram null\n    c.cram 'gamma'\n    c.cram 'delta', ->\n      c.cram 'eta'\n      c.cram 'theta'\n  info '^4454-4^', \"c.collector:  \", c.collector\n  info '^4454-5^', ds = c.expand()\n  info '^4454-6^', as_datoms ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_simple = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one'\n  collector = CND.deep_copy c.collector\n  info '^4454-8^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one', 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-10^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one', -> c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-12^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one'; c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-14^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> c.cram 'one'\n  collector = CND.deep_copy c.collector\n  info '^4454-16^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> c.cram 'one'\n  c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-18^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> 'one'\n  c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-20^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'h1', \"Heading One\"\n  # c.cram 'p', \"Paragraph with \", ( c.cram 'strong', \"bold text\" ), \" in it.\" ### wrong ###\n  c.cram 'p', \"Paragraph with \", ( -> c.cram 'strong', \"bold text\" ), \" in it.\"\n  ### the same, except when using customized crammer, which is why we use them: ###\n  c.cram 'p', \"Paragraph with \", [ 'strong', \"bold text\", ], \" in it.\"\n  collector = CND.deep_copy c.collector\n  info '^4454-20^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_cupofdatom_1 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  #.........................................................................................................\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  #.........................................................................................................\n  class Cupofdatom extends Cupofjoe\n    _defaults: { flatten: true, DATOM: null, }\n    constructor: ( settings ) ->\n      super settings\n      @settings         = Object.assign @settings, @_defaults\n      @settings.DATOM  ?= DATOM # module.exports\n    cram: ( name, content... ) ->\n      debug '^332^', name, content\n      return super @settings.DATOM.new_datom \"^#{name}\" unless content.length > 0\n      return super content... if name is null\n      d1 = @settings.DATOM.new_datom \"<#{name}\"\n      d2 = @settings.DATOM.new_datom \">#{name}\"\n      return super d1, content..., d2\n    expand: ->\n      debug '^332^', @\n      R = super()\n      for text, idx in R\n        continue unless isa.text text\n        R[ idx ] = @settings.DATOM.new_datom '^text', { text, }\n      return R\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', ->\n      c.cram null, 'content'\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  for d in ds\n    info d\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', 'content'\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  for d in ds\n    info d\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', -> [ 'this', 'is', 'content' ]\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  for d in ds\n    info d\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_cupofdatom_2 = ->\n  DATOM                     = new ( require '../../../apps/datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    Cupofdatom\n    select }                = DATOM.export()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c = new Cupofdatom()\n  debug '^3332^', c\n  c.cram 'helo', 'world'\n  c.cram 'foo', ->\n    c.cram 'bold', -> [ 'this', 'is', 'content' ]\n  collector = CND.deep_copy c.collector\n  ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  for d in ds\n    info d\n  #.........................................................................................................\n  return null\n\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # @demo_0()\n  # @demo_1()\n  # @demo_2()\n  @demo_toy_formatter_1()\n  @demo_toy_formatter_2()\n  @demo_simple()\n  @demo_cupofdatom_1()\n  @demo_cupofdatom_2()\n\n\n"
  ]
}