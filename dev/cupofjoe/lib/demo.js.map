{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'CUPOFJOE/DEMO'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\n#...........................................................................................................\n# types                     = require '../types'\n{ isa\n  validate\n  equals\n  type_of }               = ( new ( require 'intertype' ).Intertype() ).export()\n#...........................................................................................................\ndefer                     = setImmediate\nafter                     = ( dts, f ) -> setTimeout f, dts * 1000\nsleep                     = ( dts ) -> new Promise ( done ) -> after dts, done\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_0 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram 'a', 'b', 'c'\n  urge '^4454-1^', { collector: c.collector, }\n  info '^4454-1^', c.expand()\n  urge '^4454-3^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram 'a', 'b', 'c', -> c.cram 'd'\n  urge '^4454-4^', { collector: c.collector, }\n  info '^4454-5^', c.expand()\n  urge '^4454-6^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe()\n  c.cram ->\n    c.cram 'a', 'b', 'c', -> c.cram 'd'\n  urge '^4454-7^', { collector: c.collector, }\n  info '^4454-8^', c.expand()\n  urge '^4454-9^', { collector: c.collector, }\n  #.........................................................................................................\n  whisper '-'.repeat 108\n  c = new Cupofjoe { expand_early: true, }\n  c = new Cupofjoe { expand_early: false, }\n  c.cram ->\n    c.cram 'a', 1\n    c.cram 'b', 2\n    c.cram 'c', 3\n    c.cram 4, ->\n      c.cram 'd'\n      c.cram 'e'\n  urge '^4454-10^', { collector: c.collector, }\n  info '^4454-11^', c.expand()\n  urge '^4454-12^', { collector: c.collector, }\n  c.cram 'XXX'\n  info '^4454-13^', c.expand()\n  c.clear()\n  c.cram 'YYY'\n  info '^4454-14^', c.expand()\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_1 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  cupofjoe      = new Cupofjoe { flatten: false, }\n  { cram\n    expand }    = cupofjoe.export()\n  #.........................................................................................................\n  cram null, ->\n    cram 'pre1'\n    cram 'pre2', 'wat'\n    cram 'one', ->\n      cram 'two', 42\n      cram 'three', ->\n        cram 'four', ->\n          cram 'five', ->\n            cram 'six'\n    cram 'post'\n  help rpr cupofjoe\n  ds = expand()\n  info rpr ds\n  info jr ds.flat Infinity\n  # urge '^4443^', ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_2 = ->\n  cupofjoe = new ( require '../../../apps/cupofjoe' ).Cupofjoe()\n  { cram\n    expand }  = cupofjoe.export()\n  #.........................................................................................................\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  #.........................................................................................................\n  h = ( tagname, content... ) ->\n    if content.length is 0\n      d = new_datom \"^#{tagname}\"\n      return cram d, content...\n    d1 = new_datom \"<#{tagname}\"\n    d2 = new_datom \">#{tagname}\"\n    return cram d1, content..., d2\n  #.........................................................................................................\n  cram null, ->\n    h 'pre1'\n    cram null\n    h 'pre2', 'wat'\n    h 'one', ->\n      h 'two', ( new_datom '^text', text: '42' )\n      h 'three', ->\n        h 'four', ->\n          h 'five', ->\n            h 'six', ->\n              cram ( new_datom '^text', text: 'bottom' )\n    h 'post'\n  # urge rpr cupofjoe.collector\n  ds = expand()\n  info jr ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_toy_formatter_1 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  format = ( list ) ->\n    last_idx  = list.length - 1\n    R         = []\n    tagname   = null\n    for d, idx in list\n      if isa.list d\n        # R = [ R..., ( format d )..., ]\n        R.splice R.length, 0, ( format d )...\n        continue\n      d = rpr d unless isa.text d\n      if idx is 0\n        tagname = d\n        R.push if idx is last_idx then \"<#{tagname}/>\" else \"<#{tagname}>\"\n      else\n        R.push d\n    R.push \"</#{tagname}>\" if tagname? and last_idx > 0\n    return R.join ''\n  #.........................................................................................................\n  c.cram ->\n    c.cram 'alpha', 'ONE'\n    c.cram 'beta', 'TWO'\n    c.cram null\n    c.cram 'gamma'\n    c.cram 'delta', ->\n      c.cram 'eta'\n      c.cram 'theta'\n  info '^4454-2^', ds = c.expand()\n  info '^4454-3^', format ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_toy_formatter_2 = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  as_datoms = ( list ) ->\n    last_idx  = list.length - 1\n    R         = []\n    tagname   = null\n    for d, idx in list\n      if isa.list d\n        # R = [ R..., ( as_datoms d )..., ]\n        R.splice R.length, 0, ( as_datoms d )...\n        continue\n      d = rpr d unless isa.text d\n      if idx is 0\n        tagname = d\n        R.push if idx is last_idx then \"<#{tagname}/>\" else \"<#{tagname}>\"\n      else\n        R.push d\n    R.push \"</#{tagname}>\" if tagname? and last_idx > 0\n    return R.join ''\n  #.........................................................................................................\n  c.cram ->\n    c.cram 'alpha', 'ONE'\n    c.cram 'beta', 'TWO'\n    c.cram null\n    c.cram 'gamma'\n    c.cram 'delta', ->\n      c.cram 'eta'\n      c.cram 'theta'\n  info '^4454-4^', \"c.collector:  \", c.collector\n  info '^4454-5^', ds = c.expand()\n  info '^4454-6^', as_datoms ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_simple = ->\n  { Cupofjoe }  = require '../../../apps/cupofjoe'\n  c = new Cupofjoe()\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one'\n  collector = CND.deep_copy c.collector\n  info '^4454-8^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one', 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-10^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one', -> c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-12^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'one'; c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-14^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> c.cram 'one'\n  collector = CND.deep_copy c.collector\n  info '^4454-16^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> c.cram 'one'\n  c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-18^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram -> c.cram -> 'one'\n  c.cram 'two'\n  collector = CND.deep_copy c.collector\n  info '^4454-20^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  whisper '---------------------------------'\n  c.cram 'h1', \"Heading One\"\n  # c.cram 'p', \"Paragraph with \", ( c.cram 'strong', \"bold text\" ), \" in it.\" ### wrong ###\n  c.cram 'p', \"Paragraph with \", ( -> c.cram 'strong', \"bold text\" ), \" in it.\"\n  ### the same, except when using customized crammer, which is why we use them: ###\n  c.cram 'p', \"Paragraph with \", [ 'strong', \"bold text\", ], \" in it.\"\n  collector = CND.deep_copy c.collector\n  info '^4454-20^', ds = c.expand()\n  urge CND.reverse collector if not equals collector, ds\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUP demo 2 flat\" ] = ( T, done ) ->\n  cupofjoe = new ( require '../../../apps/cupofjoe' ).Cupofjoe { flatten: true, }\n  { cram\n    expand }  = cupofjoe.export()\n  #.........................................................................................................\n  DATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n  { new_datom\n    lets\n    select }                = DATOM.export()\n  #.........................................................................................................\n  h = ( tagname, content... ) ->\n    if content.length is 0\n      d = new_datom \"^#{tagname}\"\n      return cram d, content...\n    d1 = new_datom \"<#{tagname}\"\n    d2 = new_datom \">#{tagname}\"\n    return cram d1, content..., d2\n  #.........................................................................................................\n  cram null, ->\n    h 'pre1'\n    cram null\n    h 'pre2', 'wat'\n    h 'one', ->\n      h 'two', ( new_datom '^text', text: '42' )\n      h 'three', ->\n        h 'four', ->\n          h 'five', ->\n            h 'six', ->\n              cram ( new_datom '^text', text: 'bottom' )\n    h 'post'\n  urge rpr cupofjoe.collector\n  ds = expand()\n  info jr ds\n  T.eq ds, [\n    { '$key': '^pre1' }\n    { '$key': '<pre2' }\n    'wat',\n    { '$key': '>pre2' }\n    { '$key': '<one' }\n    { '$key': '<two' }\n    { text: '42', '$key': '^text' }\n    { '$key': '>two' }\n    { '$key': '<three' }\n    { '$key': '<four' }\n    { '$key': '<five' }\n    { '$key': '<six' }\n    { text: 'bottom', '$key': '^text' }\n    { '$key': '>six' }\n    { '$key': '>five' }\n    { '$key': '>four' }\n    { '$key': '>three' }\n    { '$key': '>one' }\n    { '$key': '^post' } ]\n  #.........................................................................................................\n  done() if done?\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"CUP demo reformat\" ] = ( T, done ) ->\n  cupofjoe = new ( require '../../../apps/cupofjoe' ).Cupofjoe { flatten: true, }\n  { cram\n    expand } = cupofjoe.export()\n  #.........................................................................................................\n  h = ( tagname, content... ) ->\n    return cram content...      if ( not tagname? ) or ( tagname is 'text' )\n    return cram \"<#{tagname}/>\" if content.length is 0\n    return cram \"<#{tagname}>\", content..., \"</#{tagname}>\"\n  #.........................................................................................................\n  h 'paper', ->\n    h 'article', ->\n      h 'title', \"Some Thoughts on Nested Data Structures\"\n      h 'par', ->\n        h 'text',   \"A interesting \"\n        h 'em',     \"fact\"\n        h 'text',   \" about CupOfJoe is that you \"\n        h 'em',     \"can\"\n        h 'text',   \" nest with both sequences and function calls.\"\n    h 'conclusion', ->\n      h 'text',   \"With CupOfJoe, you don't need brackets.\"\n  html = expand().join '|'\n  info jr html\n  # info html\n  T.eq html, \"<paper>|<article>|<title>|Some Thoughts on Nested Data Structures|</title>|<par>|A interesting |<em>|fact|</em>| about CupOfJoe is that you |<em>|can|</em>| nest with both sequences and function calls.|</par>|</article>|<conclusion>|With CupOfJoe, you don't need brackets.|</conclusion>|</paper>\"\n  #.........................................................................................................\n  done() if done?\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # @demo_0()\n  # @demo_1()\n  # @demo_2()\n  @demo_toy_formatter_1()\n  @demo_toy_formatter_2()\n  @demo_simple()\n\n\n"
  ]
}