{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/MIXA'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\n_strip_ansi               = require 'strip-ansi'\ntypes                     = new ( require 'intertype' ).Intertype()\n{ freeze\n  lets }                  = require 'letsfreezethat'\n\n#-----------------------------------------------------------------------------------------------------------\n# resolve_project_path = ( path ) -> PATH.resolve PATH.join __dirname, '../../..', path\n\n#-----------------------------------------------------------------------------------------------------------\nstrip_ansi = ( x ) ->\n  switch type = types.type_of x\n    when 'text'   then return _strip_ansi x\n    when 'object' then return lets x, ( x ) -> x[ k ] = strip_ansi v for k, v of x\n    when 'list'   then return lets x, ( x ) -> x[ k ] = strip_ansi v for k, v in x\n  return x\n\n#-----------------------------------------------------------------------------------------------------------\nresolve_recursively = ( x, path ) ->\n  R = x\n  for p in path\n    R = R[ p ]\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA types\" ] = ( T, done ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ 'mixa_flagdef', { alias: 'h', type: Boolean, description: \"show help and exit\", }, ], true, ]\n    [ [ 'mixa_flagdef', { alias: 'd', type: String,  description: \"change to directory before running command\", }, ], true, ]\n    [ [ 'mixa_flagdef', { alias: 't', type: Boolean, description: \"trace options parsing (for debugging)\", }, ], true, ]\n    [ [ 'mixa_flagdef', { name: 'XXXX', alias: 't', type: Boolean, description: \"trace options parsing (for debugging)\", }, ], false, ]\n    [ [ 'mixa_flagdef', { alias: false, type: Boolean, description: \"trace options parsing (for debugging)\", }, ], false, ]\n    [ [ 'mixa_flagdef', { alias: 'd', type: false, }, ], false, ]\n    [ [ 'mixa_flagdef', { description: 489234, }, ], false, ]\n    [ [ 'mixa_jobdef',    null, ], false, ]\n    [ [ 'mixa_flagdefs',    null, ], false, ]\n    [ [ 'mixa_cmddefs',     null, ], false, ]\n    [ [ '_mixa_multiple',   null, ], true, ]\n    [ [ 'mixa_cmddef',      null, ], false, ]\n\n    [ [ 'mixa_cmddef',      {}, ], true, ]\n    [ [ 'mixa_cmddef',      { name: 'abc', }, ], false, ]\n    [ [ 'mixa_cmddef',      { someother: 'abc', }, ], false, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: false, }, ], true, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: null, }, ], true, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', lazyMultiple: true } }, }, ], false, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', multiple: true } }, }, ], false, ]\n\n    [ [ 'mixa_flagdef',     { alias: 'b', }                        ], true, ]\n    [ [ 'mixa_flagdef',     { alias: 'b', multiple: false }        ], true, ]\n    [ [ 'mixa_flagdef',     { alias: 'b', multiple: 'greedy', }    ], true, ]\n    [ [ 'mixa_flagdef',     { alias: 'b', multiple: 'lazy', }      ], true, ]\n\n    [ [ 'mixa_flagdefs',    { blah: { alias: 'b', } },                     ], true, ]\n    [ [ 'mixa_flagdefs',    { blah: { alias: 'b', multiple: false } },     ], true, ]\n    [ [ 'mixa_flagdefs',    { blah: { alias: 'b', multiple: 'greedy', } }, ], true, ]\n    [ [ 'mixa_flagdefs',    { blah: { alias: 'b', multiple: 'lazy', } },   ], true, ]\n\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', } }, }, ], true, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', multiple: false } }, }, ], true, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', multiple: 'greedy', } }, }, ], true, ]\n    [ [ 'mixa_cmddef',      { description: 'great', allow_extra: true, flags: { blah: { alias: 'b', multiple: 'lazy', } }, }, ], true, ]\n\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ type, value, ] = probe\n      #.....................................................................................................\n      if matcher\n        try\n          MIXA.types.validate type, value\n          T.ok true\n        catch error\n          T.fail \"testcase-8936698: #{rpr error.message}\"\n      #.....................................................................................................\n      else\n        try\n          MIXA.types.validate type, value\n          T.fail 'testcase-893457'\n        catch error\n          T.ok true\n      #.....................................................................................................\n      resolve MIXA.types.isa type, value\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA parse with defaults\" ] = ( T, done ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [], { error: { code: 10, tag: 'MISSING_CMD', message: 'missing command' }, cmd: 'help' }, null ]\n    [ [ '-h' ], { cmd: 'help' }, null ]\n    [ [ '--help' ], { cmd: 'help' }, null ]\n    [ [ 'help' ], { argv: [], parameters: {}, cmd: 'help' }, null ]\n    [ [ 'help cats!' ], { error: { code: 11, tag: 'UNKNOWN_CMD', message: \"unknown command 'help cats!'\" }, cmd: 'help' }, null ]\n    [ [ 'help', 'cats!' ], { argv: [], parameters: { topic: 'cats!' }, cmd: 'help' }, null ]\n    [ [ '--cd', 'some/place', 'help', 'cats!' ], { cd: 'some/place', argv: [], parameters: { topic: 'cats!' }, cmd: 'help' }, null ]\n    [ [ '-d' ], { error: { code: 13, tag: 'NEEDS_VALUE', message: 'must give target directory when using --dd, -d' }, cmd: 'help' }, null ]\n    [ [ '--cd' ], { error: { code: 13, tag: 'NEEDS_VALUE', message: 'must give target directory when using --dd, -d' }, cmd: 'help' }, null ]\n    [ [ '-d', 'some/where' ], { cd: 'some/where', error: { code: 10, tag: 'MISSING_CMD', message: 'missing command' }, cmd: 'help' }, null ]\n    [ [ '--cd', 'some/where' ], { cd: 'some/where', error: { code: 10, tag: 'MISSING_CMD', message: 'missing command' }, cmd: 'help' }, null ]\n    [ [ '-x' ], { error: { code: 14, tag: 'UNKNOWN_FLAG', message: \"unknown flag '-x'\" }, cmd: 'help' }, null ]\n    [ [ '--xxx' ], { error: { code: 14, tag: 'UNKNOWN_FLAG', message: \"unknown flag '--xxx'\" }, cmd: 'help' }, null ]\n    [ [ '--cd', 'some/place', 'ls' ], { cd: 'some/place', error: { code: 11, tag: 'UNKNOWN_CMD', message: \"unknown command 'ls'\" }, cmd: 'help' }, null ]\n    [ [ '--cd', 'some/place', 'cats!' ], { cd: 'some/place', argv: [], parameters: {}, cmd: 'cats!' }, null ]\n    [ [ 'version' ], { argv: [], parameters: {}, cmd: 'version' }, null ]\n    [ [ 'cats!' ], { argv: [], parameters: {}, cmd: 'cats!' }, null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve ( strip_ansi MIXA.parse {}, probe ).verdict\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA parse with settings 1\" ] = ( T, done ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  jobdef =\n    commands:\n      psql:\n        allow_extra: true\n        description: \"use `psql` to run SQL\"\n      node:\n        allow_extra: true\n        description: \"use `node` to run JS\"\n      nodexh:\n        allow_extra: true\n        description: \"use `nodexh` to run JS\"\n  result = MIXA.parse jobdef, [ 'psql', '-c', 'select * from CATALOG.catalog;', ]\n  debug '^334-1^', result\n  T.eq result.verdict, { argv: [ '-c', 'select * from CATALOG.catalog;' ], parameters: {}, cmd: 'psql' }\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA settings validation 1\" ] = ( T, done ) ->\n  MIXA          = require '../../../apps/mixa'\n  { isa\n    validate  } = MIXA.types.export()\n  #.........................................................................................................\n  jobdef =\n    commands:\n      psql:\n        description: \"use `psql` to run SQL\"\n        allow_extra: false\n        flags:\n          command:  { alias: 'c', type: String, multiple: 'lazy', description: '', }\n          file:     { alias: 'f', type: String, multiple: 'lazy', description: '', }\n          user:     { alias: 'U', type: String, description: '', }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ 'mixa_flagdef',   [ 'commands', 'psql', 'flags', 'command', ] ], true, ]\n    [ [ 'mixa_flagdef',   [ 'commands', 'psql', 'flags', 'file',    ] ], true,  ]\n    [ [ 'mixa_flagdef',   [ 'commands', 'psql', 'flags', 'user',    ] ], true,  ]\n    [ [ 'mixa_flagdefs',  [ 'commands', 'psql', 'flags',            ] ], true, ]\n    [ [ 'mixa_cmddef',    [ 'commands', 'psql',                     ] ], true, ]\n    [ [ 'mixa_cmddefs',   [ 'commands',                             ] ], true, ]\n    [ [ 'mixa_jobdef',  []                                          ], true, ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ type, path, ] = probe\n      value           = resolve_recursively jobdef, path\n      # debug '^33334^', ( d for d in ( MIXA.types.types_of value ) when /mixa/.test d ), CND.grey value\n      resolve MIXA.types.isa type, value\n  #.........................................................................................................\n  try\n    validate.mixa_flagdef jobdef.commands.psql.flags.command\n    T.ok true\n  catch error\n    T.fail \"^testcase-8779345^\"\n    warn '^3908^', error.message\n  #.........................................................................................................\n  try\n    validate.mixa_jobdef jobdef\n    T.ok true\n  catch error\n    T.fail \"^testcase-777362^\"\n    warn '^3908^', error.message\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA settings validation 2\" ] = ( T, done ) ->\n  MIXA          = require '../../../apps/mixa'\n  { isa\n    validate  } = MIXA.types.export()\n  #.........................................................................................................\n  jobdef =\n    commands:\n      psql:\n        description: \"use `psql` to run SQL\"\n        allow_extra: false\n        flags:\n          command:  { alias: 'c', type: String, multiple: 'lazy', description: '', }\n          file:     { alias: 'f', type: String, multiple: 'lazy', description: '', }\n          user:     { alias: 'U', type: String, description: '', xxxxxxxxxxxxxx: true, }\n  #.........................................................................................................\n  result = MIXA._compile_jobdef jobdef\n  debug '^33736^', result\n  T.eq ( MIXA.types.is_sad result ), true\n  T.eq result, { error: { code: 17, tag: 'ILLEGAL_SETTINGS', message: \"not a valid mixa_jobdef object: violates 'x.?commands is a mixa_cmddefs'\" }, cmd: 'help', }\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA parse with settings 2\" ] = ( T, done ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  jobdef =\n    commands:\n      psql:\n        description: \"use `psql` to run SQL\"\n        allow_extra: false\n        flags:\n          command:\n            alias:          'c'\n            type:           String\n            multiple:       false\n            description:    ''\n          file:\n            alias:          'f'\n            type:           String\n            multiple:       false\n            description:    ''\n          user:\n            alias:          'U'\n            type:           String\n            description:    ''\n  #.........................................................................................................\n  # debug '^7766^', jobdef.commands.psql.flags.file\n  # debug '^7766^', MIXA.types.isa.mixa_flagdef jobdef.commands.psql.flags.file\n  # debug '^7766^', MIXA._compile_jobdef jobdef; process.exit 1\n  MIXA.types.validate.mixa_flagdef jobdef.commands.psql.flags.command\n  MIXA.types.validate.mixa_flagdef jobdef.commands.psql.flags.file\n  MIXA.types.validate.mixa_flagdef jobdef.commands.psql.flags.user\n  #.........................................................................................................\n  result = MIXA.parse jobdef, [ 'psql', '-c', 'select * from CATALOG.catalog;', ]\n  debug '^334-2^', result\n  # T.eq result, { argv: [], parameters: { command: [ 'select * from CATALOG.catalog;' ] }, cmd: 'psql' }\n  #.........................................................................................................\n  result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 42;', ]\n  debug '^334-2^', result\n  # T.eq result, { argv: [], parameters: { command: [ 'select * from CATALOG.catalog;' ] }, cmd: 'psql' }\n  #.........................................................................................................\n  result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 42;', ]\n  debug '^334-2^', result\n  # T.eq result, { argv: [], parameters: { command: [ 'select * from CATALOG.catalog;' ] }, cmd: 'psql' }\n  # #.........................................................................................................\n  # result = MIXA.parse jobdef, [ 'psql', '-f', 'path/to/this.sql', 'path/to/that.sql' ]\n  # debug '^334-3^', result\n  # T.eq result, {\n  #   argv: [ 'path/to/that.sql' ],\n  #   parameters: { file: [ 'path/to/this.sql' ] },\n  #   error: {\n  #     code: 15,\n  #     tag: 'EXTRA_FLAGS',\n  #     message: \"command 'psql' does not allow extra, got [ 'path/to/that.sql' ]\" },\n  #   cmd: 'help' }\n  # #.........................................................................................................\n  # result = MIXA.parse jobdef, [ 'psql', '-U', 'jpfx', '-f', 'path/to/this.sql', '-f', 'path/to/that.sql' ]\n  # debug '^334-4^', result\n  # T.eq result, { argv: [], parameters: { user: 'jpfx', file: [ 'path/to/this.sql', 'path/to/that.sql' ] }, cmd: 'psql' }\n  # #.........................................................................................................\n  # # debug '^334-5^', MIXA._compile_jobdef jobdef\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA parse with settings 3\" ] = ( T, done ) ->\n  jobdef =\n    commands:\n      psql:\n        allow_extra: false\n        flags:\n          command:\n            alias:          'c'\n            type:           String\n            multiple:       false\n          file:\n            alias:          'f'\n            type:           String\n            multiple:       false\n          user:\n            alias:          'U'\n            type:           String\n  MIXA = require '../../../apps/mixa'\n  jobdef.commands.psql.flags.command.multiple = false\n  urge '^5554-1^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-1^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { error: { code: 16, tag: 'OTHER', message: 'Singular option already set [command=select 42;]' }, cmd: 'help' }\n  debug '^4445-2^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { argv: [ 'select 43;', '-U', 'x' ], parameters: { command: 'select 42;' }, error: { code: 15, tag: 'EXTRA_FLAGS', message: \"command 'psql' does not allow extra, got [ 'select 43;', '-U', 'x' ]\" }, cmd: 'help' }\n  jobdef.commands.psql.flags.command.multiple = 'lazy'\n  urge '^5554-2^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-3^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { argv: [], parameters: { command: [ 'select 42;', 'select 43;' ], user: 'x' }, cmd: 'psql' }\n  debug '^4445-4^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { argv: [ 'select 43;', '-U', 'x' ], parameters: { command: [ 'select 42;' ] }, error: { code: 15, tag: 'EXTRA_FLAGS', message: \"command 'psql' does not allow extra, got [ 'select 43;', '-U', 'x' ]\" }, cmd: 'help' }\n  jobdef.commands.psql.flags.command.multiple = 'greedy'\n  urge '^5554-3^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-5^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { argv: [], parameters: { command: [ 'select 42;', 'select 43;' ], user: 'x' }, cmd: 'psql' }\n  debug '^4445-6^', result = MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  T.eq result.verdict, { argv: [], parameters: { command: [ 'select 42;', 'select 43;' ], user: 'x' }, cmd: 'psql' }\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA parse with settings 4\" ] = ( T, done ) ->\n  jobdef =\n    commands:\n      frobulate:\n        allow_extra: false\n        flags:\n          width:\n            alias:          'w'\n            type:           Number\n            fallback:       123\n          height:\n            alias:          'h'\n            type:           Number\n            # positional:     true\n            fallback:       10\n          image:\n            alias:          'i'\n            positional:     true\n            type:           String\n  MIXA = require '../../../apps/mixa'\n  T.eq ( MIXA.parse jobdef, [ 'frobulate', 'path/to/image' ] ).verdict, \\\n    { argv: [], parameters: { width: 123, height: 10, image: 'path/to/image' }, cmd: 'frobulate' }\n  jobdef.commands.frobulate.flags.image.positional = false\n  T.eq ( MIXA.parse jobdef, [ 'frobulate', 'path/to/image' ] ).verdict, \\\n    { argv: [ 'path/to/image' ], parameters: { width: 123, height: 10 }, \\\n      error: {\n        code: 15,\n        tag: 'EXTRA_FLAGS',\n        message: \"command 'frobulate' does not allow extra, got [ 'path/to/image' ]\" }, \\\n      cmd: 'help' }\n  done() if done?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA inhibitor avoids rewriting of single-dash flags\" ] = ( T, done ) ->\n  jobdef =\n    commands:\n      search:\n        allow_extra: true\n        flags:\n          verbose:\n            alias:          'v'\n            type:           Boolean\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  # demonstrate problematic behavior; this should be configurable but for now users must remember to insert\n  # `'--'` at the appropriate position:\n  result  = MIXA.parse jobdef, [ 'search', '-iname', 'whatever', ]\n  debug '^33344^', result\n  T.eq result.verdict.argv, [ '-i', '-n', '-a', '-m', '-e', 'whatever' ]\n  #.........................................................................................................\n  result  = MIXA.parse jobdef, [ 'search', '--', '-iname', 'whatever', ]\n  debug '^33344^', result\n  T.eq result.verdict.argv, [ '-iname', 'whatever' ]\n  #.........................................................................................................\n  done() if done?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"MIXA --cd changes process directory\" ] = ( T, done ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  jobdef =\n    commands:\n      foo:\n        runner: ( d ) ->\n          help '^223392^', d\n          urge process.cwd()\n          urge dpath\n          T.eq process.cwd(), dpath\n  #.........................................................................................................\n  opath   = process.cwd()\n  dpath   = __dirname\n  if dpath is opath\n    process.chdir '..'\n  # result  = MIXA.run jobdef, [ 'foo', ]\n  result  = MIXA.run jobdef, [ '--cd', dpath, 'foo', ]\n  T.eq result.verdict.cd, dpath\n  process.chdir opath\n  #.........................................................................................................\n  done() if done?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_3 = ->\n  jobdef =\n    commands:\n      multiply:\n        flags:\n          a:\n            alias:          'a'\n            type:           Number\n            fallback:       1\n          b:\n            alias:          'b'\n            type:           Number\n            fallback:       1\n  MIXA = require '../../../apps/mixa'\n  compiled_settings = ( MIXA._compile_jobdef jobdef )\n  if MIXA.types.is_sad compiled_settings  then  warn '^44445^', compiled_settings\n  else                                          help '^44445^', compiled_settings\n  result = MIXA.parse jobdef, [ 'frobulate', '--width', '123', ]\n  if MIXA.types.is_sad result             then  warn '^44445^', result\n  else                                          help '^44445^', result\n  done() if done?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  jobdef =\n    commands:\n      frobulate:\n        allow_extra: false\n        flags:\n          width:\n            alias:          'w'\n            type:           Number\n            fallback:       123\n          height:\n            alias:          'h'\n            type:           Number\n            fallback:       10\n          image:\n            alias:          'i'\n            positional:     true\n            type:           String\n  MIXA = require '../../../apps/mixa'\n  compiled_settings = ( MIXA._compile_jobdef jobdef )\n  if MIXA.types.is_sad compiled_settings  then  warn '^44445^', compiled_settings\n  else                                          help '^44445^', compiled_settings\n  result = MIXA.parse jobdef, [ 'frobulate', '--width', '123', ]\n  if MIXA.types.is_sad result             then  warn '^44445^', result\n  else                                          help '^44445^', result\n  debug '^344874-1^', ( MIXA._compile_jobdef jobdef ).commands?.frobulate?.flags\n  debug '^344874-2^', result = MIXA.parse jobdef, [ 'frobulate', '--width', '123', ]\n  debug '^344874-3^', result = MIXA.parse jobdef, [ 'frobulate', '--width', ]\n  debug '^344874-4^', result = MIXA.parse jobdef, [ 'frobulate', '-w', '123', '-h', '99', ]\n  debug '^344874-5^', result = MIXA.parse jobdef, [ 'frobulate', '-w', '-h', '99', ]\n  debug '^344874-6^', result = MIXA.parse jobdef, [ 'frobulate', ]\n  debug '^344874-6^', result = MIXA.parse jobdef, [ 'frobulate', 'path/to/image' ]\n  jobdef.commands.frobulate.flags.image.positional = false\n  debug '^344874-6^', result = MIXA.parse jobdef, [ 'frobulate', 'path/to/image' ]\n  done() if done?\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  jobdef =\n    commands:\n      psql:\n        allow_extra:  false\n        # run:          MIXA.run.execSync\n        flags:\n          command:\n            alias:          'c'\n            type:           String\n            multiple:       false\n          file:\n            alias:          'f'\n            type:           String\n            multiple:       false\n          user:\n            alias:          'U'\n            type:           String\n  MIXA = require '../../../apps/mixa'\n  jobdef.commands.psql.flags.command.multiple = false\n  urge '^5554-1^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-1^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  debug '^4445-2^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  jobdef.commands.psql.flags.command.multiple = 'lazy'\n  urge '^5554-2^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-3^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  debug '^4445-4^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  jobdef.commands.psql.flags.command.multiple = 'greedy'\n  urge '^5554-3^', ( MIXA._compile_jobdef jobdef ).commands.psql.flags\n  debug '^4445-5^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', '-c', 'select 43;', '-U', 'x', ]\n  debug '^4445-6^', MIXA.parse jobdef, [ 'psql', '-c', 'select 42;', 'select 43;', '-U', 'x', ]\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_run_1 = ->\n  MIXA = require '../../../apps/mixa'\n  jobdef =\n    exit_on_error:  false\n    meta:\n      hqx: { type: String, }\n    commands:\n      list:\n        allow_extra:  true\n        runner:       MIXA.runners.execSync\n        plus:         { executable: 'ls', }\n        flags:\n          table: { alias: 't', description: \"format as ASCII table\", type: Boolean, }\n  # debug '^4445-1^', MIXA.parse jobdef, [ 'ls', '-AlF', ]\n  # urge '^21226^', MIXA.parse jobdef, [ '-hd', 'xx/yy', 'ls', '-AlF', ]\n  # urge '^21226^', MIXA.parse jobdef, [ 'ls', 'find', '--', 'dev', '-iname', '*benchmark*', ]\n  # result = MIXA.parse jobdef, [ '--cd', '/tmp', 'list', '--', '-AlF', '.', ]\n  PATH = require 'path'\n  path = PATH.relative process.cwd(), PATH.resolve PATH.join __dirname, '../src'\n  #.........................................................................................................\n  echo '-'.repeat 108\n  result = MIXA.run jobdef, [ '--cd', path, 'list', '--', '-AlF', '.', ]\n  urge '^21226^', result\n  ( help line for line in output.split '\\n' ) if ( output = result.output?.ok )?\n  #.........................................................................................................\n  echo '-'.repeat 108\n  result = MIXA.run jobdef, [ '--cd', path, 'list', '--', '-AlF', '*', ]\n  urge '^21226^', result\n  ( help line for line in output.split '\\n' ) if ( output = result.output?.ok )?\n  #.........................................................................................................\n  echo '-'.repeat 108\n  result = MIXA.run jobdef, [ '--cd', path, ]\n  urge '^21226^', result\n  ( help line for line in output.split '\\n' ) if ( output = result.output?.ok )?\n  #.........................................................................................................\n  echo '-'.repeat 108\n  debug '^2233^', process.argv\n  help ( MIXA.parse jobdef, [ '--cd', path, 'list', ] ).verdict\n  help ( MIXA.parse jobdef, [ 'node', '--cd', path, 'list', ] ).verdict\n  help ( MIXA.parse jobdef, [ '/usr/local/bin/node', '--cd', path, 'list', ] ).verdict\n  help ( MIXA.parse jobdef, [ '/usr/local/bin/node', '/path/to/file', '--cd', path, 'list', ] ).verdict\n  help ( MIXA.parse jobdef, process.argv ).verdict\n  help ( MIXA.parse jobdef, process.argv[ .. ] ).verdict\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_generator = -> new Promise ( done ) =>\n  #---------------------------------------------------------------------------------------------------------\n  g = ->\n    ### thx to https://stackoverflow.com/a/59347615/7568091 ###\n    { spawn } = require 'child_process'\n    results   = []\n    resolve   = () => null\n    promise   = new Promise ( r ) => resolve = r\n    done      = false\n    # cp         = spawn 'ls', [ '-AlF', ]\n    # cp         = spawn 'cat', [ __filename, ]\n    cp         = spawn 'node', [ ( PATH.join __dirname, '_generator.js' ), ]\n    # cp.stdout.setEncoding 'utf-8'\n    # cp.stderr.setEncoding 'utf-8'\n    #.......................................................................................................\n    new_catcher = ( $key ) -> ( data ) =>\n      ### TAINT method to obtain lines from buffers not correct, lines could span buffers ###\n      data = data.toString() if types.isa.buffer data\n      data = data.replace /\\n$/, ''\n      for $value in data.split '\\n'\n        results.push Object.freeze { $key, $value, }\n      resolve()\n      promise = new Promise ( r ) => resolve = r\n    #.......................................................................................................\n    cp.stdout.on  'data',   new_catcher '^stdout'\n    cp.stderr.on  'data',   new_catcher '^stderr'\n    cp.on         'error',  new_catcher '^error'\n    #.......................................................................................................\n    cp.on 'close', =>\n      done = true\n    #.......................................................................................................\n    while not done\n      await promise\n      # debug '^334455^', rpr results\n      for x from results\n        yield x\n      results = []\n  #---------------------------------------------------------------------------------------------------------\n  debug '^3334^'\n  SP = require 'steampipes'\n  { $\n    $watch\n    $drain }  = SP.export()\n  source      = SP.new_push_source()\n  pipeline    = []\n  pipeline.push source\n  # pipeline.push SP.$split()\n  pipeline.push $watch ( d ) -> urge d\n  pipeline.push $drain -> done()\n  SP.pull pipeline...\n  for await x from g()\n    source.send x\n  return null\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # MIXA = require '../../../apps/mixa'\n  # debug '^4445^', MIXA.parse null, [ '--cd', 'some/place', 'ls', ]\n  # debug '^4445^', MIXA.parse null, [ 'cats!' ]\n  # test @\n  # test @[ \"MIXA --cd changes process directory\" ]\n  # test @[ \"MIXA parse with defaults\" ]\n  # test @[ \"MIXA settings validation 2\" ]\n  # test @[ \"MIXA types\" ]\n  # test @[ \"MIXA parse with settings 3\" ]\n  # test @[ \"MIXA parse with settings 1\" ]\n  # @[ \"MIXA parse with settings 4\" ]()\n  # test @[ \"MIXA parse with settings 4\" ]\n  # test @[ \"MIXA inhibitor avoids rewriting of single-dash flags\" ]\n  # demo_3()\n  # demo_run_1()\n  await demo_generator()\n"
  ]
}