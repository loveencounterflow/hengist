{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MIXA/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nGUY                       = require '../../../apps/guy'\ntypes                     = new ( require '../../../apps/intertype' ).Intertype()\n{ isa\n  validate\n  create\n  type_of }               = types\nmisfit                    = Symbol 'misfit'\n\n#-----------------------------------------------------------------------------------------------------------\nshow_cat = ( cfg ) ->\n  echo()\n  echo CND.white CND.reverse CND.bold \"\"\"       |\\\\      _,,,---,,_              \"\"\"\n  echo CND.white CND.reverse CND.bold \"\"\" ZZZzz /,`.-'`'    -.  ;-;;,_          \"\"\"\n  echo CND.white CND.reverse CND.bold \"\"\"      |,4-  ) )-,_. ,\\\\ (  `'-'         \"\"\"\n  echo CND.white CND.reverse CND.bold \"\"\"     '---''(_/--'  `-'\\\\_)  Felix Lee   \"\"\"\n  if cfg.say?\n    message = \" #{cfg.say} \"\n    message = message.padEnd ( Math.max 0, 45 - message.length ), ' '\n    echo CND.gold CND.reverse message\n  echo()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@cli = ( argv = null ) ->\n  MIXA = require '../../../apps/mixa'\n  #.........................................................................................................\n  types.declare.mx_cat_cfg\n    fields:\n      say:      'optional.nonempty.text'\n    default:\n      say:      null\n  #.........................................................................................................\n  jobdefs =\n    # meta:\n    commands:\n      #-----------------------------------------------------------------------------------------------------\n      'help':\n        runner: ( d ) =>\n          # debug '^690-1^', process.argv\n          echo GUY.trm.lime \"\"\"The feline assistant\"\"\"\n          echo GUY.trm.blue \"\"\"\n            Usage:\n              node #{__filename} <command> [flags]\n\n              Commands:\n                cat                   show the cat\n                  --say         -s    make the cat say something\n            \"\"\"\n      #-----------------------------------------------------------------------------------------------------\n      'cat':\n        description:  \"show a cat\"\n        runner: ( d ) =>\n          cfg             = types.create.mx_cat_cfg d.verdict.parameters\n          show_cat cfg\n          return null\n        flags:\n          'say':\n            alias:        's'\n            type:         String\n            description:  \"make the cat say something\"\n  #.........................................................................................................\n  MIXA.run jobdefs, process.argv\n  return null\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  @cli()\n\n\n"
  ]
}