{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/html.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-MIRAGE/BASICS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"Mirage HTML: quotes in attribute values\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { DBay  } = require '../../../apps/dbay'\n  { Mrg   } = require '../../../apps/dbay-mirage'\n  db        = new DBay()\n  mrg       = new Mrg { db, }\n  prefix    = 'mrg'\n  probes_and_matchers = []\n  dsk       = 'quotedattributes'\n  mrg.register_dsk { dsk, url: 'live:', }\n  # debug '^435^', mrg.append_text { dsk, trk: 1, text: \"\"\"<title id=c1 x=\"Q\"></title>\"\"\", }\n  # debug '^435^', mrg.append_text { dsk, trk: 1, text: \"\"\"<title id=c2 x='Q'></title>\"\"\", }\n  # debug '^435^', mrg.append_text { dsk, trk: 1, text: \"\"\"<title id=c3 x='\"Q\"'></title>\"\"\", }\n  # debug '^435^', mrg.append_text { dsk, trk: 1, text: \"\"\"<title id=c4 x=\"'Q'\"></title>\"\"\", }\n  text = \"\"\"\n    <title id=c1 x=\"Q\"></title>\n\n    <title id=c2 x='Q'></title>\n\n    <title id=c3 x='\"Q\"'></title>\n\n    <title id=c4 x=\"'Q'\"></title>\"\"\"\n  mrg.append_text { dsk, trk: 1, text, }\n  mrg.html.parse_dsk { dsk, }\n  H.tabulate \"#{prefix}_mirror\",              db SQL\"select * from #{prefix}_mirror;\"\n  H.tabulate \"#{prefix}_html_mirror\",         db SQL\"select * from #{prefix}_html_mirror;\"\n  H.tabulate \"#{prefix}_html_tags_and_html\",  db SQL\"select * from #{prefix}_html_tags_and_html;\"\n  result = db.all_first_values SQL\"\"\"\n    select\n        v\n      from #{prefix}_html_mirror as m\n      join #{prefix}_html_atrs as a using ( atrid )\n      where true\n        and ( m.typ = '<' )\n        and ( m.tag = 'title' )\n        and ( a.k   = 'x' )\n      order by m.dsk, m.oln, m.trk, m.pce;\"\"\"\n  T?.eq result, [ 'Q', 'Q', '\"Q\"', \"'Q'\" ]\n  # for [ probe, matcher, error, ] in probes_and_matchers\n  #   await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n  #     url    = mrg._url_from_path probe\n  #     path   = mrg._path_from_url url\n  #     # urge { probe, url, path, }\n  #     resolve [ url, path, ]\n  return done?()\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @[ \"altering mirrored source lines causes error\" ]\n  # @[ \"altering mirrored source lines causes error\" ]()\n  @[ \"Mirage HTML: quotes in attribute values\" ]()"
  ]
}