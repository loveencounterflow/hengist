{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo-separate-data-tables.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-MIRAGE/DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n# { HDML }                  = require '../../../apps/hdml'\nH                         = require '../../../lib/helpers'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@demo_datamill = ( cfg ) ->\n  { DBay }        = require '../../../apps/dbay'\n  { Mrg }         = require '../../../apps/dbay-mirage/lib/main2'\n  db              = new DBay()\n  mrg             = new Mrg { db, }\n  db.create_stdlib()\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/template-with-content-markers.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  #.........................................................................................................\n  mrg.register_dsk { dsk, path, }\n  mrg.refresh_datasource { dsk, }\n  db.setv 'allow_change_on_mirror', 1\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 2, pce: 1, txt: \"\"\"something\"\"\", }\n  mrg.deactivate { dsk, lnr: 2, trk: 2, }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 1, txt: \"\"\"<div>\"\"\", }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 2, txt: \"\"\"inserted content\"\"\", }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 3, txt: \"\"\"</div>\"\"\", }\n  #.........................................................................................................\n  db.setv 'dsk', dsk\n  H.tabulate 'mrg_datasources', db SQL\"select * from mrg_datasources;\"\n  H.tabulate 'mrg_mirror',      db SQL\"select * from mrg_mirror order by dsk, lnr, trk, pce;\"\n  H.tabulate 'mrg_lines',       db SQL\"select * from mrg_lines  order by dsk, lnr;\"\n  H.banner \"lines of #{dsk}\"\n  urge '^474^', lnr, rpr txt for { lnr, txt, } from mrg.walk_line_rows { dsk, }\n  return null\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@demo_htmlish = ( cfg ) ->\n  { DBay }        = require '../../../apps/dbay'\n  { Mrg }         = require '../../../apps/dbay-mirage/lib/main2'\n  { new_grammar } = require '../../../apps/paragate/lib/htmlish.grammar'\n  HTML = new_grammar { bare: true, }\n  prefix          = 'mrg'\n  db              = new DBay()\n  mrg             = new Mrg { db, prefix, }\n  db.create_stdlib()\n  dsk       = 'twcm'\n  path      = 'dbay-rustybuzz/htmlish-tags.html'\n  path      = PATH.resolve PATH.join __dirname, '../../../assets', path\n  mrg.register_dsk { dsk, path, }\n  mrg.refresh_datasource { dsk, }\n  #.........................................................................................................\n  # db.setv 'allow_change_on_mirror', 1\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 2, pce: 1, txt: \"\"\"something\"\"\", }\n  mrg.deactivate { dsk, lnr: 2, trk: 2, }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 1, txt: \"\"\"<div>\"\"\", }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 2, txt: \"\"\"inserted content\"\"\", }\n  db mrg.sql.insert_lnpart, { dsk, lnr: 2, trk: 3, pce: 3, txt: \"\"\"</div>\"\"\", }\n  #.........................................................................................................\n  H.tabulate \"#{prefix}_mirror\", db SQL\"select * from #{prefix}_mirror order by dsk, lnr, trk, pce;\"\n  H.tabulate \"#{prefix}_mirror\", db SQL\"select * from #{prefix}_paragraph_linenumbers;\"\n  H.tabulate \"#{prefix}_parmirror\", db SQL\"select * from #{prefix}_parmirror;\"\n  H.tabulate \"#{prefix}_lines\",     mrg.walk_line_rows { dsk, }\n  H.tabulate \"#{prefix}_lines\",     mrg.walk_par_rows { dsk, }\n  return null\n  #.........................................................................................................\n  for { lnr, txt, } from mrg.walk_line_rows { dsk, }\n    urge ( HTML.parse txt ).length\n    urge ( normalize_tokens HTML.parse txt ).length\n    H.tabulate \"#{lnr} #{rpr txt}\", normalize_tokens HTML.parse txt\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_rxws = ( cfg ) ->\n  { DBay }          = require '../../../apps/dbay'\n  { Mrg }           = require '../../../apps/dbay-mirage/lib/main2'\n  { grammar: RXWS } = require '../../../apps/paragate/lib/regex-whitespace.grammar'\n  debug '^343545^', RXWS.parse \"\"\"\n    first paragraph\n\n    second\n    paragraph\n\n      indented\n    \"\"\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nnormalize_tokens = ( tokens ) ->\n  keys = [\n    '$vnr'\n    '$key'\n    'type'\n    'prefix'\n    'name'\n    'class'\n    'id'\n    'start'\n    'stop'\n    'text'\n    '$'\n    ]\n  R = []\n  for token in tokens\n    d = {}\n    d[ key ] = ( token[ key ] ? null ) for key in keys\n    R.push d\n  return guy.lft.freeze R\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @demo_html_generation()\n  # @demo_datamill()\n  @demo_htmlish()\n  # @demo_rxws()\n\n\n\n\n"
  ]
}