{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/cli.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nt0 = process.hrtime.bigint()\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/INTERSHOP/INTERSHOP-CLI-NG'\ndebug                     = CND.get_logger 'debug',     badge\ndebug '^76483-1^', Date.now() / 1000\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = ( require 'intershop' ).types\n{ isa\n  validate\n  cast\n  type_of }               = types.export()\nCP                        = require 'child_process'\ndefer                     = setImmediate\ndebug '^76483-2^', Date.now() / 1000\n\n\n#-----------------------------------------------------------------------------------------------------------\n@serve = ( project_path = null ) ->\n  PATH                      = require 'path'\n  INTERSHOP                 = require 'intershop/lib/intershop'\n  RPC                       = require '../../../apps/intershop-rpc'\n  project_path             ?= PATH.resolve PATH.join __dirname, '../../../../hengist'\n  process.chdir project_path\n  shop                      = INTERSHOP.new_intershop project_path\n  ### TAINT in the future `db`, `rpc` will be delivered with `new_intershop()` ###\n  # shop.db                   = require '../../../apps/intershop/intershop_modules/db'\n  shop.db                   = require 'intershop/lib/db'\n  shop.rpc                  = await RPC.create { show_counts: true, count_interval: 100, logging: true, }\n  #.........................................................................................................\n  rpc_keys  = []\n  rpc_keys  = [ rpc_keys..., ( await @_contract_registered_rpc_methods  shop )..., ]\n  rpc_keys  = [ rpc_keys..., ( await @_contract_demo_rpc_methods        shop )..., ]\n  whisper '-'.repeat 108\n  urge \"^4576^ registered RPC keys:\"\n  info \"^4576^   #{rpc_key}\" for rpc_key in rpc_keys\n  whisper '-'.repeat 108\n  #.........................................................................................................\n  return shop\n\n#-----------------------------------------------------------------------------------------------------------\n@_contract_registered_rpc_methods = ( shop ) ->\n  R   = []\n  sql = \"select aoid, path from ADDONS.files where target = 'rpc' order by aoid, path;\"\n  for addon from await shop.db.query [ sql, ]\n    module        = require addon.path\n    method_names  = ( Object.keys module ).sort()\n    for method_name in method_names\n      do ( module, method_name ) =>\n        rpc_key = \"^#{addon.aoid}/#{method_name}\"\n        R.push rpc_key\n        ### TAINT in upcoming intershop-rpc version, all calls must pass a single list with arguments\n        to be applied to the contractor; this will then be done in `shop.rpc.contract(). For the\n        time being, we're applying arguments right here: ###\n        shop.rpc.contract rpc_key, ( d ) ->\n          unless ( type = type_of d.$value ) is 'list'\n            throw new Error \"^intershop/cli@3376^ in RPC call to #{rpc_key}, expected a list for d.$value, got a #{type}\"\n          module[ method_name ] d.$value...\n        return null\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@_contract_demo_rpc_methods = ( shop ) ->\n  IX  = require '../../../apps/intertext'\n  R   = []\n  #.........................................................................................................\n  hyphenate = ( text ) ->\n    validate.text text\n    return IX.HYPH.hyphenate text\n  #.........................................................................................................\n  slabjoints_from_text = ( text ) ->\n    validate.text text\n    return IX.SLABS.slabjoints_from_text text\n  #.........................................................................................................\n  contract = ( key, method ) =>\n    shop.rpc.contract key, method\n    R.push key\n    return null\n  #.........................................................................................................\n  contract '^hyphenate',            ( d ) -> hyphenate d.$value\n  contract '^slabjoints_from_text', ( d ) -> slabjoints_from_text d.$value\n  contract '^shyphenate',           ( d ) -> slabjoints_from_text hyphenate d.$value\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@new_intershop_runner = ( project_path ) ->\n  INTERSHOP = require 'intershop/lib/intershop'\n  return INTERSHOP.new_intershop project_path\n\n#-----------------------------------------------------------------------------------------------------------\n@_prepare_psql_commandline = ( me ) ->\n  cwd       = me.get 'intershop/host/path'\n  db_name   = me.get 'intershop/db/name'\n  db_user   = me.get 'intershop/db/user'\n  return { cwd, db_user, db_name, }\n\n#-----------------------------------------------------------------------------------------------------------\n@psql_run_file    = ( me, path    ) -> @_psql_run me, '-f', path\n@psql_run_command = ( me, command ) -> @_psql_run me, '-c', command\n\n#-----------------------------------------------------------------------------------------------------------\n@_psql_run = ( me, selector, pargument ) -> new Promise ( resolve, reject ) =>\n  validate.intershop_cli_psql_run_selector selector\n  cmd         = @_prepare_psql_commandline me\n  ### TAINT how to respect `sudo -u postgres` and similar? ###\n  parameters  = [ '-U', cmd.db_user, '-d', cmd.db_name, selector, pargument, ]\n  # parameters  = [ '-d', cmd.db_name, selector, pargument, ]\n  # debug '^37363^', parameters\n  whisper '^psql_run@@3367^', \"psql #{parameters.join ' '}\"\n  settings    =\n    cwd:    cmd.cwd\n    shell:  false\n    stdio:  [ 'inherit', 'inherit', 'inherit', ]\n  cp        = CP.spawn 'psql', parameters, settings\n  cp.on 'close', ( code   ) ->\n    return resolve 0 if code is 0\n    reject new Error \"^psql_run_file@34479^ processs exited with code #{code}\"\n  cp.on 'error', ( error  ) -> reject error\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@nodexh_run_file = ( project_path, file_path ) -> new Promise ( resolve, reject ) =>\n  parameters  = [ file_path, ]\n  whisper '^psql_run@@3367^', \"psql #{parameters.join ' '}\"\n  settings    =\n    cwd:    project_path\n    shell:  false\n    stdio:  [ 'inherit', 'inherit', 'inherit', ]\n  cp        = CP.spawn 'nodexh', parameters, settings\n  cp.on 'close', ( code   ) ->\n    return resolve 0 if code is 0\n    reject new Error \"^nodexh_run_file@34479^ processs exited with code #{code}\"\n  cp.on 'error', ( error  ) -> reject error\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@cli = ->\n  # shop = await @serve()\n  await @_cli()\n  # await shop.rpc.stop()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_cli_get_project_path = ( d ) -> d.options.p ? d.options.project ? process.cwd()\n\n#-----------------------------------------------------------------------------------------------------------\n@_cli = ->\n  debug '^76483-3^', Date.now() / 1000\n  MIXA = require '../../../apps/mixa'\n  debug '^76483-4^', Date.now() / 1000\n  #.........................................................................................................\n  # program.action ( { logger, } ) => logger.info \"Hello, world!\"\n  #.........................................................................................................\n  jobdef =\n    # .name 'intershop'\n    #.......................................................................................................\n    commands:\n      'start-rpc-server':\n        description:        \"start RPC server (to be accessed from psql scripts)\"\n        allow_extra:        true\n        runner:             ( d ) => new Promise ( done ) =>\n          project_path  = d.verdict.cd ? process.cwd()\n          shop          = await @serve project_path\n      #.....................................................................................................\n      'psql':\n        description:        \"run psql\"\n        allow_extra:        true\n        runner:             ( d ) => new Promise ( done ) =>\n          project_path  = d.verdict.cd ? process.cwd()\n          shop          = await @serve project_path\n          ### TAINT ###\n          project_path  = @_cli_get_project_path d\n          info \"^5564^ d.options: #{rpr d.options}\"\n          info \"^5564^ file_path: #{rpr file_path}\"\n          info \"^5565^ project_path: #{rpr project_path}\"\n          shop = await @serve project_path\n          # debug '^2223^', rpr command\n          # debug '^2223^', rpr project_path\n          me            = @new_intershop_runner project_path\n          # info \"^5566^ running psql with #{rpr { file: d.file, command: d.command, }}\"\n          await @psql_run_file    me, file_path if file_path?\n          await @psql_run_command me, command   if command?\n          await shop.rpc.stop()\n          done()\n          return null\n      #.....................................................................................................\n      'nodexh':\n        description:        \"run nodexh\"\n        allow_extra:        true\n        runner:             MIXA.runners.execSync\n      #.....................................................................................................\n      'node':\n        description:        \"run node\"\n        allow_extra:        true\n        runner:             MIXA.runners.execSync\n  #.........................................................................................................\n  whisper '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', CND.format_number ( process.hrtime.bigint() - t0 ) # / 1000000000n\n  debug '^33344^', MIXA.parse jobdef, process.argv\n  whisper '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', CND.format_number ( process.hrtime.bigint() - t0 ) # / 1000000000n\n  R = await MIXA.run jobdef, process.argv\n  whisper '>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', CND.format_number ( process.hrtime.bigint() - t0 ) # / 1000000000n\n  return R\n\n# #-----------------------------------------------------------------------------------------------------------\n# @demo = ->\n#   rpc = await @serve()\n#   # T.eq ( await DB.query_single  [ \"select IPC.rpc( $1, $2 );\", '^add-42', '{\"x\":1000}'  ] ), 1042\n#   await @psql_run_file '/home/flow/jzr/interplot', 'db/080-intertext.sql'\n#   await @psql_run_file '/home/flow/jzr/interplot', 'db/100-harfbuzz.sql'\n#   await @psql_run_file '/home/flow/jzr/interplot', 'db/tests/080-intertext.tests.sql'\n#   debug '^3334^', process.argv\n#   info rpc.counts\n#   await rpc.stop()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_intershop_object = ->\n  PATH          = require 'path'\n  project_path  = PATH.resolve PATH.join __dirname, '../../../../hengist'\n  project_path  = PATH.resolve PATH.join __dirname, '../../../../interplot'\n  INTERSHOP     = require 'intershop/lib/intershop'\n  shop          = INTERSHOP.new_intershop project_path\n  keys          = ( k for k of shop.settings ).sort()\n  for key in keys\n    continue if key.startsWith 'os/'\n    setting = shop.settings[ key ]\n    echo ( CND.gold key.padEnd 42 ), ( CND.lime setting.value )\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_query_addons = ->\n  PATH          = require 'path'\n  project_path  = PATH.resolve PATH.join __dirname, '../../../../hengist'\n  INTERSHOP     = require 'intershop/lib/intershop'\n  shop          = INTERSHOP.new_intershop project_path\n  ### TAINT in the future `db` will be delivered with `new_intershop()` ###\n  shop.db       = require 'intershop/lib/db'\n  RPC           = require '../../../apps/intershop-rpc'\n  rpc           = await RPC.create { show_counts: true, count_interval: 100, logging: true, }\n  debug ( k for k of shop.db ).sort()\n  # for addon from await shop.db.query [ \"select * from ADDONS.addons;\", ]\n  #   info addon.aoid\n  #   for file from await shop.db.query [ \"select * from ADDONS.files where aoid = $1;\", addon.aoid, ]\n  #     urge '  ', ( CND.blue file.target ), ( CND.yellow file.path )\n  sql = \"select * from ADDONS.files where target = 'rpc' order by aoid;\"\n  for addon from await shop.db.query [ sql, ]\n    module = require addon.path\n    for method_name of module\n      do ( module, method_name ) =>\n        rpc_name = \"^#{addon.aoid}/#{method_name}\"\n        debug '^3334^', rpc_name\n        rpc.contract rpc_name, ( d ) -> module[ method_name ] d.$value\n        return null\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await @demo()\n  await @cli()\n  # await @demo_query_addons()\n  # @demo_intershop_object()\n\n\n"
  ]
}