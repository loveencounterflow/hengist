{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/rpc.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/INTERSHOP/RPC'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   DATOM                     = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM.export()\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_serve = ->\n  Rpc                       = require '../../../apps/intershop-rpc'\n  DB                        = require '../../../apps/intershop/intershop_modules/db'\n  DATOM                     = require '../../../apps/datom'\n  rpc                       = new Rpc 23001\n  await rpc.start()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERSHOP-RPC basics\" ] = ( T, done ) ->\n  Rpc                       = require '../../../apps/intershop-rpc'\n  DB                        = require '../../../apps/intershop/intershop_modules/db'\n  DATOM                     = require '../../../apps/datom'\n  rpc                       = new Rpc 23001\n  # debug '^hengist@100^', \"rpc:\" rpc\n  await rpc.start()\n  rpc.contract '^add-42', (       d ) -> help '^hengist@101^ contract', d; return ( ( d ? {} ).x ? 0 ) + 42\n  rpc.listen_to_all       ( key,  d ) -> urge \"^hengist@102^ listen_to_all     \", d\n  rpc.listen_to_unheard   ( key,  d ) -> warn \"^hengist@103^ listen_to_unheard \", d\n  await rpc.emit '^foobar', 108\n  help '^hengist@104^', await rpc.delegate '^add-42', { x: 123, }\n  # help '^hengist@105^', await rpc.delegate { '^add-42', x: 123, }\n  # help '^hengist@106^', await rpc.delegate { '^add-42', $value: { x: 123, }, }\n  # debug '^hengist@107^', await rpc.delegate '^add-42', 123\n  T.eq ( await rpc.delegate DATOM.new_datom '^add-42', 123          ), 42\n  T.eq ( await rpc.delegate DATOM.new_datom '^add-42', { x: 123, }  ), 165\n  T.eq ( await DB.query         [ \"select IPC.server_is_online()\"                       ] ), [ { server_is_online: true } ]\n  T.eq ( await DB.query         [ \"select IPC.send( $1, $2 );\", '^add-42', '{\"x\":1000}' ] ), [ { send: '' } ]\n  T.eq ( await DB.query         [ \"select IPC.rpc( $1, $2 );\", '^add-42', '{\"x\":1000}'  ] ), [ { rpc: 1042 } ]\n  T.eq ( await DB.query_single  [ \"select IPC.server_is_online()\"                       ] ), true\n  T.eq ( await DB.query_single  [ \"select IPC.send( $1, $2 );\", '^add-42', '{\"x\":1000}' ] ), ''\n  T.eq ( await DB.query_single  [ \"select IPC.rpc( $1, $2 );\", '^add-42', '{\"x\":1000}'  ] ), 1042\n\n\n\n\n\n\n  # debug '^hengist@112^', await DB.query [ \"select * from IPC.send( $1, $2 );\", '^add-42', '{\"x\":1000}' ]\n  # debug '^hengist@113^', await DB.query [ \"select * from CATALOG.catalog;\", $key, ]\n  # for row in await DB.query [ \"select * from CATALOG.catalog order by schema, name;\", ]\n  #   whisper '^hengist@114^', \"#{row.schema}/#{row.name}\"\n  done()\n  # await rpc.stop()\n  # process.exit 0\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  test @\n  # @_serve()\n\n\n"
  ]
}