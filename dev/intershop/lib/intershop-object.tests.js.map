{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/intershop-object.tests.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,EAAA,GAA4B,IAAI,CAAC,UAhBjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8DA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC,IAAA,CAAK,IAAL;IADgC,CAAA,IAAlC;;;EA9DA;;;;AAAA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERSHOP/TESTS/INTERSHOP-OBJECT'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n# #...........................................................................................................\n# types                     = require '../types'\n# { isa\n#   validate\n#   type_of }               = types\n#...........................................................................................................\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"INTERSHOP object: initializes acc. to project\" ] = ( T, done ) ->\n#   ### TAINT how to set up mock environment? ###\n#   done()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"test VNR._first_nonzero_is_negative()\" ] = ( T, done ) ->\n#   PATH          = require 'path'\n#   project_path  = PATH.resolve PATH.join ( require.resolve 'intershop' ), '../../'\n#   debug '^443^', project_path\n#   intershop     = ( require 'intershop' ).new_intershop project_path\n#   intershop.variables.my_boolean  = { value: 'true', type: 'boolean',           }\n#   intershop.variables.my_int      = { value: '4445', type: 'int',               }\n#   intershop.variables.my_integer  = { value: '' type: 'integer',           }\n#   intershop.variables.my_json     = { value: '' type: 'json',              }\n#   intershop.variables.my_text     = { value: type: 'text',              }\n#   intershop.variables.my_U        = { value: type: 'U.natural_number',  }\n#   #.........................................................................................................\n#   # [ [ 'boolean']]\n#   # [ [ 'int']]\n#   # [ [ 'integer']]\n#   # [ [ 'json'               ]]\n#   # [ [ 'text'               ]]\n#   # [ [ 'U.natural_number']]\n\n#   probes_and_matchers = [\n#     [[ [3,4,0,0,],        4, ], false, ]\n#     ]\n#   #.........................................................................................................\n#   debug '^443^', intershop\n#   # for [ probe, matcher, error, ] in probes_and_matchers\n#   #   await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#   #     [ list, first_idx, ] = probe\n#   #     resolve VNR._first_nonzero_is_negative list, first_idx\n#   done()\n#   return null\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @[ \"VNR sort 2\" ]\n  # test @[ \"VNR sort 3\" ]\n  # @[ \"VNR sort 3\" ]()\n  # test @[ \"test VNR._first_nonzero_is_negative()\" ]\n\n\n\n\n"
  ]
}