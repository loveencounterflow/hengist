{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demos.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HENGIST/DEV/DPAN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  type_of\n  validate\n  validate_list_of }      = types.export()\n# { to_width }              = require 'to-width'\nSQL                       = String.raw\n{ lets\n  freeze }                = require 'letsfreezethat'\n{ Dba, }                  = require 'icql-dba'\ndef                       = Object.defineProperty\nglob                      = require 'glob'\nPATH                      = require 'path'\nFS                        = require 'fs'\ngot                       = require 'got'\nsemver_satisfies          = require 'semver/functions/satisfies'\nsemver_cmp                = require 'semver/functions/cmp'\n{ Dpan, }                 = require '../../../apps/dpan'\n\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_custom_require = ->\n  RPKGUP  = await import( 'read-pkg-up' )\n  dpan        = new Dpan()\n  return\n  pkg_names_and_svranges = [\n    [ '@ef-carbon/deep-freeze',    '^1.0.1', ]\n    [ '@scotttrinh/number-ranges', '^2.1.0', ]\n    [ 'argparse',                  '^2.0.1', ]\n    [ 'better-sqlite3',            '7.4.0', ]\n    [ 'chance',                    '^1.1.7', ]\n    [ 'cnd',                       '^9.2.1', ]\n    ]\n  path  = '../../../lib/main.js'\n  path  = PATH.resolve PATH.join __dirname, path\n  { createRequire, } = require 'module'\n  rq    = createRequire path\n  for [ pkg_name, svrange, ] in pkg_names_and_svranges\n    dep_fspath        = rq.resolve pkg_name\n    dep_json_info     = RPKGUP.readPackageUpSync { cwd: dep_fspath, normalize: true, }\n    dep_json          = dep_json_info.packageJson\n    dep_version       = dep_json.version\n    dep_description   = dep_json.description\n    dep_keywords      = dep_json.keywords ? []\n    dep_json_fspath   = dep_json_info.path\n    info()\n    info ( CND.yellow pkg_name )\n    info ( CND.blue dep_fspath )\n    info ( CND.gold dep_keywords )\n    # info ( CND.lime dep_pkgj_fspath )\n    info dep_version\n    info dep_description\n    # info ( CND.lime FS.realpathSync dep_fspath )\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await demo()\n  await demo_custom_require()\n  # CP = require 'child_process'\n  # debug '^33442^', CP.execSync \"npm view icql-dba@^6 dependencies\", { encoding: 'utf-8', }\n  # debug '^33442^', CP.execSync \"npm view icql-dba dependencies\", { encoding: 'utf-8', }\n"
  ]
}