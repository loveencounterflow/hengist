{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/html-generation.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY-TABULATOR/TESTS/HTML-GENERATION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\n# PATH                      = require 'path'\n# FS                        = require 'fs'\n# H                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nGUY                       = require '../../../apps/guy'\n# MMX                       = require '../../../apps/multimix/lib/cataloguing'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() 1\" ] = ( T, done ) ->\n  { Tabulator }         = require '../../../apps/dbay-tabulator'\n  tabulator             = new Tabulator()\n  rows                  = [\n    { sid_min: 1, sid_max: 1, pid: 'xx-1', dsk: 'xx', rank: 1, ts: '12345Z', raw_trend: '[{\"dsk\":\"xx\",\"pid\":\"xx-1\",\"sid\":1,\"rank\":1,\"first\":1,\"last\":1}]', duh: ( JSON.stringify { foo: 42, bar: 108, } ), }\n    ]\n  result                = tabulator.tabulate { rows, }\n  help '^348^', result\n  T?.ok ( result.indexOf \"<table>\"                          ) > -1\n  T?.ok ( result.indexOf \"<th class='sid_min'>sid_min</th>\" ) > -1\n  T?.ok ( result.indexOf \"<th class='sid_max'>sid_max</th>\" ) > -1\n  T?.ok ( result.indexOf \"<th class='dsk'>dsk</th>\"         ) > -1\n  T?.ok ( result.indexOf \"<th class='ts'>ts</th>\"           ) > -1\n  T?.ok ( result.indexOf \"<th class='pid'>pid</th>\"         ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='dsk'>xx</td>\"\"\"                                                                    ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='sid_min'>1</td>\"\"\"                                                                 ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='sid_max'>1</td>\"\"\"                                                                 ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='pid'>xx-1</td>\"\"\"                                                                  ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='rank'>1</td>\"\"\"                                                                    ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='raw_trend'>[{\"dsk\":\"xx\",\"pid\":\"xx-1\",\"sid\":1,\"rank\":1,\"first\":1,\"last\":1}]</td>\"\"\" ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='duh'>{\"foo\":42,\"bar\":108}</td>\"\"\"                                              ) > -1\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() 2\" ] = ( T, done ) ->\n  { Tabulator }         = require '../../../apps/dbay-tabulator'\n  tabulator             = new Tabulator()\n  rows                  = [\n    { sid: 1, pid: 'xx-1', dsk: 'xx', sid_min: 1, sid_max: 1, details: ( JSON.stringify { foo: 42, bar: 108, } ), }\n    ]\n  cfg                   =\n    rows:      rows\n    class:      'vogue_trends'\n    undefined:  \"N/A\"\n    fields:\n      dsk:\n        title: \"DSK\"\n      sid_min:\n        hide: true\n      sid_max:\n        title: \"SIDs\"\n        outer_html: ( d ) =>\n          value = \"#{d.row.sid_min}—#{d.row.sid_max}\"\n          urge '^4535^', d\n          urge '^4535^', rpr value\n          T?.eq value, \"1—1\"\n          T?.eq d.raw_value, 1\n          return \"<td class=sids>#{value}</td>\"\n      details:\n        inner_html: ( d ) =>\n          return \"<div>#{rpr d.raw_value}</div>\"\n      extra:\n        title: \"Extra\"\n        inner_html: ( d ) => \"#{d.row_nr}\"\n      asboolean: true\n  result                = tabulator.tabulate cfg\n  help '^348^', result\n  T?.ok ( result.indexOf \"<th class='dsk'>DSK</th>\" ) > -1\n  T?.ok ( result.indexOf \"<th class='extra'>Extra</th>\" ) > -1\n  T?.ok ( result.indexOf \"<td class='extra'>1</td>\" ) > -1\n  T?.ok ( result.indexOf \"<th class='sid_min'>\" ) == -1\n  T?.ok ( result.indexOf \"<td class='sid_min'>\" ) == -1\n  T?.ok ( result.indexOf \"<td class=sids>1—1</td>\" ) > -1\n  T?.ok ( result.indexOf \"<td class='asboolean'>N/A</td>\" ) > -1\n  T?.ok ( result.indexOf \"\"\"<td class='details'><div>'{\"foo\":42,\"bar\":108}'</div></td>\"\"\" ) > -1\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"`query`, `table` are disallowed\" ] = ( T, done ) ->\n  { TABULATOR }         = require '../../../apps/dbay-tabulator'\n  { SQL, }              = ( require '../../../apps/dbay' ).DBay\n  #.........................................................................................................\n  do =>\n    cfg =\n      class:        'tabulator trends xx'\n      query:        SQL\"\"\"select * from vogue_trends where dsk = $dsk order by pid;\"\"\"\n      parameters:   { dsk: 'xx', }\n    T?.throws /not a valid vgt_as_html_cfg/, => TABULATOR.tabulate cfg\n  #.........................................................................................................\n  do =>\n    cfg =\n      table:        'mytable'\n      parameters:   { dsk: 'xx', }\n    T?.throws /not a valid vgt_as_html_cfg/, => TABULATOR.tabulate cfg\n  #.........................................................................................................\n  do =>\n    cfg =\n      rows:         []\n      parameters:   { dsk: 'xx', }\n    T?.throws /not a valid vgt_as_html_cfg/, => TABULATOR.tabulate cfg\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() can use `rows`\" ] = ( T, done ) ->\n  { Tabulator }             = require '../../../apps/dbay-tabulator'\n  tabulator                 = new Tabulator()\n  #.........................................................................................................\n  do =>\n    cfg =\n      rows:         []\n    result = tabulator.tabulate cfg\n    help '^348^', result\n    T?.eq result, \"<table>\\n</table>\"\n    return null\n  #.........................................................................................................\n  do =>\n    cfg =\n      class:        'classy'\n      rows:         []\n      fields:\n        a: true\n        b: true\n        c: true\n    result = tabulator.tabulate cfg\n    help '^348^', result\n    T?.ok ( result.indexOf \"<table class='classy'>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='a'>a</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='b'>b</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='c'>c</th>\" ) > -1\n    return null\n  #.........................................................................................................\n  do =>\n    cfg =\n      rows:         [\n        { a: 1, b: \"something\", c: \"else\", }\n        { a: 2, b: \"something\", c: \"else\", }\n        { a: 3, b: \"something\", c: \"else\", }\n        { a: 4, b: \"something\", c: \"else\", }\n        ]\n    result = tabulator.tabulate cfg\n    help '^348^', result\n    T?.ok ( result.indexOf \"<th class='a'>a</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='b'>b</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='c'>c</th>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='a'>3</td>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='b'>something</td>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='c'>else</td>\" ) > -1\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() can use iterator for `rows`\" ] = ( T, done ) ->\n  { TABULATOR }             = require '../../../apps/dbay-tabulator'\n  #.........................................................................................................\n  do =>\n    _rows   = [\n        { a: 1, b: \"something\", c: \"else\", }\n        { a: 2, b: \"something\", c: \"else\", }\n        { a: 3, b: \"something\", c: \"else\", }\n        { a: 4, b: \"something\", c: \"else\", }\n        ]\n    rows    = ( -> yield from _rows )()\n    result  = TABULATOR.tabulate { rows, }\n    help '^348^', result\n    T?.ok ( result.indexOf \"<th class='a'>a</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='b'>b</th>\" ) > -1\n    T?.ok ( result.indexOf \"<th class='c'>c</th>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='a'>3</td>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='b'>something</td>\" ) > -1\n    T?.ok ( result.indexOf \"<td class='c'>else</td>\" ) > -1\n    return null\n  #.........................................................................................................\n  do =>\n    { DBay }  = require '../../../apps/dbay'\n    { SQL }   = GUY.str\n    db        = new DBay()\n    rows      = db SQL\"select * from sqlite_schema;\"\n    result  = TABULATOR.tabulate { rows, }\n    help '^348^', result\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() can use subtables 1\" ] = ( T, done ) ->\n  { tabulate\n    summarize }             = require '../../../apps/dbay-tabulator'\n  #.........................................................................................................\n  do =>\n    cfg =\n      rows:         [\n        { nr: 1, details: ( JSON.stringify { a: \"something\", b: \"else\" } ), }\n        # { nr: 2, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        # { nr: 3, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        # { nr: 4, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        ]\n      fields:\n        details:\n          inner_html: ( d ) -> summarize { row: d.value, }\n    result = tabulate cfg\n    help '^348^', result\n    T?.ok ( result.indexOf \"<td class='details'><table>\"                      ) > -1\n    T?.ok ( result.indexOf \"<tr><th>a</th><td class='a'>something</td></tr>\"  ) > -1\n    T?.ok ( result.indexOf \"<tr><th>b</th><td class='b'>else</td></tr>\"       ) > -1\n    T?.ok ( result.indexOf \"</table></td>\"                                    ) > -1\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tabulate() can use subtables 2\" ] = ( T, done ) ->\n  { Tabulator }             = require '../../../apps/dbay-tabulator'\n  tabulator                 = new Tabulator()\n  #.........................................................................................................\n  do =>\n    #.......................................................................................................\n    details_cfg =\n      fields:\n        a:\n          title:  \"Ants\"\n          inner_html: ( d ) -> \"*#{d.value}*\"\n    #.......................................................................................................\n    table_cfg =\n      rows:         [\n        { nr: 1, details: ( JSON.stringify { a: \"something\", b: \"else\" } ), }\n        # { nr: 2, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        # { nr: 3, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        # { nr: 4, details: ( JSON.stringify { \"something\", c: \"else\" } ), }\n        ]\n      fields:\n        details:\n          inner_html: ( d ) -> tabulator.summarize { row: d.value, details_cfg..., }\n    #.......................................................................................................\n    result = tabulator.tabulate table_cfg\n    help '^348^', result\n    T?.ok ( result.indexOf \"<td class='details'><table>\"                        ) > -1\n    T?.ok ( result.indexOf \"<tr><th>Ants</th><td class='a'>*something*</td></tr>\"  ) > -1\n    T?.ok ( result.indexOf \"<tr><th>b</th><td class='b'>else</td></tr>\"         ) > -1\n    T?.ok ( result.indexOf \"</table></td>\"                                      ) > -1\n    return null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"`inner_html()`, `outer_html()` can hide lines\" ] = ( T, done ) ->\n  { summarize }             = require '../../../apps/dbay-tabulator'\n  rows                      = [\n    { nr: 1, word: \"one\",   show_word: true,  }\n    { nr: 2, word: \"two\",   show_word: false, }\n    { nr: 3, word: \"three\", show_word: true,  }\n    { nr: 4, word: \"four\",  show_word: false, }\n    ]\n  #.........................................................................................................\n  cfg =\n    fields:\n      nr:\n        title:      \"Nr\"\n        inner_html: ( d ) -> \"##{d.value}\"\n      word:\n        title:      \"Word\"\n        inner_html: ( d ) ->\n          return Symbol.for 'hide' if d.row.nr %% 2 is 0\n          return d.value\n  #.........................................................................................................\n  for row in rows\n    { show_word } = row; delete row.show_word\n    result = summarize { row, cfg..., }\n    help '^348^', result\n    if show_word\n      T?.ok ( result.indexOf \"<th>Word</th><td class='word'>\" ) > -1\n    else\n      T?.ok ( result.indexOf \"<th>Word</th><td class='word'>\" ) == -1\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"vgt_iterable()\" ] = ( T, done ) ->\n  { TABULATOR }         = require '../../../apps/dbay-tabulator'\n  probes_and_matchers = [\n    [ null,                   false, ]\n    [ [],                     true,  ]\n    [ {},                     false, ]\n    [ ( new Set() ),          true,  ]\n    [ ( new Set().keys() ),   true,  ]\n    [ \"whatever\",             true,  ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve TABULATOR.types.isa.vgt_iterable probe\n  return done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"vgt_iterable_no_text()\" ] = ( T, done ) ->\n  { TABULATOR }         = require '../../../apps/dbay-tabulator'\n  probes_and_matchers = [\n    [ null,                   false, ]\n    [ [],                     true,  ]\n    [ {},                     false, ]\n    [ ( new Set() ),          true,  ]\n    [ ( new Set().keys() ),   true,  ]\n    [ \"whatever\",             false,  ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve TABULATOR.types.isa.vgt_iterable_no_text probe\n  return done()\n\n\n############################################################################################################\nif module is require.main then do =>\n  # test @\n  # test @[ \"tabulate() can use subtables 2\" ]\n  # test @[ \"vgt_iterable_no_text()\" ]\n  # @[ \"tabulate() 2\" ]()\n  # test @[ \"tabulate() 2\" ]\n  test @[ \"`inner_html()`, `outer_html()` can hide lines\" ]\n  # test @[ \"`query`, `table` are disallowed\" ]\n  # test @[ \"tabulate() can use iterator for `rows`\" ]\n  # test @[ \"tabulate() can use `rows`\" ]\n  # @[ \"tabulate() 1\" ]()\n  # test @[ \"tabulate() 1\" ]\n  # echo x for x from [ 1, 2, 3, ]\n  # echo x for x from { a: 4, b: 5, c: 6, }\n  # echo x for x from ( new Set [ 18,9,10,] )\n  # echo x for x from ( new Set [ 18,9,10,] ).keys()\n"
  ]
}