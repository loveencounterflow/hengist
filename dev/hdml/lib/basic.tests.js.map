{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/basic.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HDML/TESTS/BASIC'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nguy                       = require '../../../apps/guy'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basics\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { HDML\n    Hdml } = require '../../../apps/hdml'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ '<', 'foo' ], '<foo>', null ]\n    [ [ '<', 'foo', null ], '<foo>', null ]\n    [ [ '<', 'foo', {} ], '<foo>', null ]\n    [ [ '<', 'foo', { a: '42', b: \"'\", c: '\"' } ], \"\"\"<foo a='42' b='&#39;' c='\"'>\"\"\", null ]\n    [ [ '<', 'foo', { a: '42', b: undefined } ], null, 'not a valid text: undefined' ]\n    [ [ '<', 'foo', { a: 42, b: undefined } ], null, 'not a valid text: 42' ]\n    [ [ '^', 'foo', { a: '42', b: \"'\", c: '\"' } ], \"\"\"<foo a='42' b='&#39;' c='\"'/>\"\"\", null ]\n    [ [ '^', 'prfx:foo', { a: '42', b: \"'\", c: '\"' } ], \"\"\"<prfx:foo a='42' b='&#39;' c='\"'/>\"\"\", null ]\n    # [ [ '^', '$text' ], '<mrg:loc#baselines/>', null ]\n    [ [ '>', 'foo' ], '</foo>', null ]\n    [ [ '>', 42 ], null, 'not a valid text: 42' ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = HDML.create_tag probe...\n      resolve result\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"can use or not use compact tagnames\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Hdml } = require '../../../apps/hdml'\n  #.........................................................................................................\n  do =>\n    hdml = new Hdml { use_compact_tags: false, }\n    T?.eq ( hdml.create_tag '^', 'mrg:loc#baselines' ), '<mrg:loc#baselines/>'\n  #.........................................................................................................\n  do =>\n    hdml = new Hdml { use_compact_tags: true, }\n    T?.eq ( hdml.create_tag '^', 'mrg:loc#baselines' ), \"<mrg:loc id='baselines'/>\"\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HDML.parse_compact_tagname 1\" ] = ( T, done ) ->\n  { HDML, } = require '../../../apps/hdml'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'foo-bar', { tag: 'foo-bar' }, null ]\n    [ 'foo-bar#c55', { tag: 'foo-bar', id: 'c55' }, null ]\n    [ 'foo-bar.blah.beep', { tag: 'foo-bar', class: [ 'blah', 'beep', ] }, null ]\n    [ 'foo-bar#c55.blah.beep', { tag: 'foo-bar', id: 'c55', class: [ 'blah', 'beep', ] }, null ]\n    [ 'dang:blah', { prefix: 'dang', tag: 'blah' }, null ]\n    [ 'dang:blah#c3', { prefix: 'dang', tag: 'blah', id: 'c3' }, null ]\n    [ 'dang:blah#c3.some.thing', { prefix: 'dang', tag: 'blah', id: 'c3', class: [ 'some', 'thing', ] }, null ]\n    [ 'dang:bar.dub#c3.other', { prefix: 'dang', tag: 'bar', class: [ 'dub', 'other', ], id: 'c3' }, null ]\n    #.......................................................................................................\n    [ '#c55',                 null, \"illegal compact tag syntax\" ]\n    [ 'dang:#c3.some.thing',  null, \"illegal compact tag syntax\" ]\n    [ '.blah.beep',           null, \"illegal compact tag syntax\" ]\n    [ '...#',                 null, 'illegal compact tag syntax' ]\n    [ '',                     null, 'illegal compact tag syntax' ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve HDML.parse_compact_tagname probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HDML.parse_compact_tagname 2\" ] = ( T, done ) ->\n  { Hdml, } = require '../../../apps/hdml'\n  HDML      = new Hdml { strict_compact_tags: false, }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'foo-bar', { tag: 'foo-bar' }, null ]\n    [ 'foo-bar#c55', { tag: 'foo-bar', id: 'c55' }, null ]\n    [ 'foo-bar.blah.beep', { tag: 'foo-bar', class: [ 'blah', 'beep', ] }, null ]\n    [ 'foo-bar#c55.blah.beep', { tag: 'foo-bar', id: 'c55', class: [ 'blah', 'beep', ] }, null ]\n    [ 'dang:blah', { prefix: 'dang', tag: 'blah' }, null ]\n    [ 'dang:blah#c3', { prefix: 'dang', tag: 'blah', id: 'c3' }, null ]\n    [ 'dang:blah#c3.some.thing', { prefix: 'dang', tag: 'blah', id: 'c3', class: [ 'some', 'thing', ] }, null ]\n    [ 'dang:bar.dub#c3.other', { prefix: 'dang', tag: 'bar', class: [ 'dub', 'other', ], id: 'c3' }, null ]\n    #.......................................................................................................\n    [ '#c55', { id: 'c55' }, null ]\n    [ 'dang:#c3.some.thing', { prefix: 'dang', id: 'c3', class: [ 'some', 'thing' ] }, null ]\n    [ '.blah.beep', { class: [ 'blah', 'beep' ] }, null ]\n    [ '...#', {}, null ]\n    [ '', {}, null ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve HDML.parse_compact_tagname probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"HDML use compact tagnames 1\" ] = ( T, done ) ->\n  { HDML, } = require '../../../apps/hdml'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ '<', 'foo-bar' ], '<foo-bar>', null ]\n    [ [ '<', 'foo-bar#c55' ], \"<foo-bar id='c55'>\", null ]\n    [ [ '<', 'foo-bar.blah.beep' ], \"<foo-bar class='blah beep'>\", null ]\n    [ [ '<', 'foo-bar#c55.blah.beep' ], \"<foo-bar id='c55' class='blah beep'>\", null ]\n    [ [ '<', 'dang:blah' ], '<dang:blah>', null ]\n    [ [ '<', 'dang:blah#c3' ], \"<dang:blah id='c3'>\", null ]\n    [ [ '<', 'dang:blah#c3.some.thing' ], \"<dang:blah id='c3' class='some thing'>\", null ]\n    [ [ '<', 'dang:bar.dub#c3.other' ], \"<dang:bar id='c3' class='dub other'>\", null ]\n    #.......................................................................................................\n    [ [ '<', '#c55',                     ], null, \"illegal compact tag syntax\" ]\n    [ [ '<', 'dang:#c3.some.thing',      ], null, \"illegal compact tag syntax\" ]\n    [ [ '<', '.blah.beep',               ], null, \"illegal compact tag syntax\" ]\n    [ [ '<', '...#',                     ], null, 'illegal compact tag syntax' ]\n    [ [ '<', '',                         ], null, 'illegal compact tag syntax' ]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    # urge '^609^', rpr probe\n    # urge '^609^', HDML.create_tag probe...\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      resolve HDML.create_tag probe...\n  #.........................................................................................................\n  done()\n  return null\n\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @\n  # test @[ \"basics\" ]\n  # test @[ \"HDML.parse_compact_tagname 1\" ]\n  # test @[ \"HDML.parse_compact_tagname 2\" ]\n  # test @[ \"HDML use compact tagnames 1\" ]\n  # test @[ \"HDML use compact tagnames 1\" ]\n  @[ \"can use or not use compact tagnames\" ]()\n  test @[ \"can use or not use compact tagnames\" ]\n  # @[ \"HDML use compact tagnames 1\" ]()\n\n\n\n"
  ]
}