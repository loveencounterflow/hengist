{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERTEXT-LEXER/TESTS/BASICS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\nafter                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n\n\n  # #.........................................................................................................\n  # probes_and_matchers = [\n  #   ]\n  # #.........................................................................................................\n  # for [ probe, matcher, error, ] in probes_and_matchers\n  #   await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n\n\n#-----------------------------------------------------------------------------------------------------------\n@simple = ( T, done ) ->\n  # T?.halt_on_error()\n  { Interlex } = require '../../../apps/intertext-lexer'\n  lexer = new Interlex()\n  T?.eq lexer._metachr, '𝔛'\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ [ 'xxx',    /123/,          ], /123/,                 ]\n    [ [ 'xxx',    /123/ug,        ], /123/ug,               ]\n    [ [ 'xxx',    /123/guy,       ], /123/guy,              ]\n    [ [ 'xxx',    /(?<a>x.)/gu    ], /(?<xxx𝔛a>x.)/gu,      ]\n    [ [ 'escchr', /\\\\(?<chr>.)/u  ], /\\\\(?<escchr𝔛chr>.)/u, ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      #.....................................................................................................\n      resolve ( lexer._rename_groups probe... ), matcher\n  #.........................................................................................................\n  # re = /((?<=\\\\\\\\)|(?<!\\\\))\\(\\?<([^>]+)>/gu\n  # debug '^46^', ( rpr /\\\\(?<x>)/.source ), rpr /\\\\(?<x>)/.source.replace re, '#'\n  # debug '^46^', ( rpr /\\(?<x>\\)/.source ), rpr /\\(?<x>\\)/.source.replace re, '#'\n  # debug '^46^', ( rpr /(?<x>)/.source   ), rpr /(?<x>)/.source.replace re, '#'\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@lex_tags = ( T, done ) ->\n  # T?.halt_on_error()\n  { Interlex, compose: c, } = require '../../../apps/intertext-lexer'\n  lexer = new Interlex()\n  #.........................................................................................................\n  do =>\n    ### NOTE arbitrarily forbidding question marks and not using fallback token to test for error tokens ###\n    mode    = 'plain'\n    lexer.add_lexeme { mode, tid: 'escchr',           pattern: ( /\\\\(?<chr>.)/u                             ), }\n    lexer.add_lexeme { mode, tid: 'text',             pattern: ( c.suffix '+', c.charSet.complement /[<`\\\\?]/u  ), }\n    lexer.add_lexeme { mode, tid: 'tag', jump: 'tag', pattern: ( /<(?<lslash>\\/?)/u                         ), }\n    lexer.add_lexeme { mode, tid: 'E_backticks',      pattern: ( /`+/                                       ), }\n    # lexer.add_lexeme mode, 'other',        /./u\n  #.........................................................................................................\n  do =>\n    mode    = 'tag'\n    lexer.add_lexeme { mode, tid: 'escchr',         pattern: ( /\\\\(?<chr>.)/u                           ), }\n    lexer.add_lexeme { mode, tid: 'end', jump: '^', pattern: ( />/u                                     ), }\n    lexer.add_lexeme { mode, tid: 'text',           pattern: ( c.suffix '+', c.charSet.complement /[>\\\\]/u  ), }\n    lexer.add_lexeme { mode, tid: 'other',          pattern: ( /./u                                     ), }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'helo <bold>`world`</bold>', [ { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'helo ', start: 0, stop: 5, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 5, stop: 6, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'bold', start: 6, stop: 10, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 10, stop: 11, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 11, stop: 12, x: null }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'world', start: 12, stop: 17, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 17, stop: 18, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 18, stop: 20, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'bold', start: 20, stop: 24, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 24, stop: 25, x: null }, { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 25, stop: 25, x: null } ], null ]\n    [ '<x v=\\\\> z=42>', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'x v=', start: 1, stop: 5, x: null }, { mode: 'tag', tid: 'escchr', mk: 'tag:escchr', jump: null, value: '\\\\>', start: 5, stop: 7, x: { chr: '>' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: ' z=42', start: 7, stop: 12, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 12, stop: 13, x: null }, { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 13, stop: 13, x: null } ], null ]\n    [ '<x v=\\\\> z=42\\\\>', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'x v=', start: 1, stop: 5, x: null }, { mode: 'tag', tid: 'escchr', mk: 'tag:escchr', jump: null, value: '\\\\>', start: 5, stop: 7, x: { chr: '>' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: ' z=42', start: 7, stop: 12, x: null }, { mode: 'tag', tid: 'escchr', mk: 'tag:escchr', jump: null, value: '\\\\>', start: 12, stop: 14, x: { chr: '>' } }, { mode: 'tag', tid: '$eof', mk: 'tag:$eof', jump: null, value: '', start: 14, stop: 14, x: null } ], null ]\n    [ 'a <b', [ { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'a ', start: 0, stop: 2, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 2, stop: 3, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'b', start: 3, stop: 4, x: null }, { mode: 'tag', tid: '$eof', mk: 'tag:$eof', jump: null, value: '', start: 4, stop: 4, x: null } ], null ]\n    [ 'what? error?', [ { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'what', start: 0, stop: 4, x: null }, { mode: 'plain', tid: '$error', mk: 'plain:$error', jump: null, value: '', start: 4, stop: 4, x: { code: 'nomatch' } } ], null ]\n    [ 'd <', [ { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'd ', start: 0, stop: 2, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 2, stop: 3, x: { lslash: null } }, { mode: 'tag', tid: '$eof', mk: 'tag:$eof', jump: null, value: '', start: 3, stop: 3, x: null } ], null ]\n    [ '<c', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'c', start: 1, stop: 2, x: null }, { mode: 'tag', tid: '$eof', mk: 'tag:$eof', jump: null, value: '', start: 2, stop: 2, x: null } ], null ]\n    [ '<', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: '$eof', mk: 'tag:$eof', jump: null, value: '', start: 1, stop: 1, x: null } ], null ]\n    [ '', [ { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 0, stop: 0, x: null } ], null ]\n    [ 'helo \\\\<bold>`world`</bold>', [ { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'helo ', start: 0, stop: 5, x: null }, { mode: 'plain', tid: 'escchr', mk: 'plain:escchr', jump: null, value: '\\\\<', start: 5, stop: 7, x: { chr: '<' } }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'bold>', start: 7, stop: 12, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 12, stop: 13, x: null }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'world', start: 13, stop: 18, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 18, stop: 19, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 19, stop: 21, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'bold', start: 21, stop: 25, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 25, stop: 26, x: null }, { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 26, stop: 26, x: null } ], null ]\n    [ '<b>helo \\\\<bold>`world`</bold></b>', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'b', start: 1, stop: 2, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 2, stop: 3, x: null }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'helo ', start: 3, stop: 8, x: null }, { mode: 'plain', tid: 'escchr', mk: 'plain:escchr', jump: null, value: '\\\\<', start: 8, stop: 10, x: { chr: '<' } }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'bold>', start: 10, stop: 15, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 15, stop: 16, x: null }, { mode: 'plain', tid: 'text', mk: 'plain:text', jump: null, value: 'world', start: 16, stop: 21, x: null }, { mode: 'plain', tid: 'E_backticks', mk: 'plain:E_backticks', jump: null, value: '`', start: 21, stop: 22, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 22, stop: 24, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'bold', start: 24, stop: 28, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 28, stop: 29, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 29, stop: 31, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'b', start: 31, stop: 32, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 32, stop: 33, x: null }, { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 33, stop: 33, x: null } ], null ]\n    [ '<i><b></b></i>', [ { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 0, stop: 1, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'i', start: 1, stop: 2, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 2, stop: 3, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '<', start: 3, stop: 4, x: { lslash: null } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'b', start: 4, stop: 5, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 5, stop: 6, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 6, stop: 8, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'b', start: 8, stop: 9, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 9, stop: 10, x: null }, { mode: 'plain', tid: 'tag', mk: 'plain:tag', jump: 'tag', value: '</', start: 10, stop: 12, x: { lslash: '/' } }, { mode: 'tag', tid: 'text', mk: 'tag:text', jump: null, value: 'i', start: 12, stop: 13, x: null }, { mode: 'tag', tid: 'end', mk: 'tag:end', jump: '^', value: '>', start: 13, stop: 14, x: null }, { mode: 'plain', tid: '$eof', mk: 'plain:$eof', jump: null, value: '', start: 14, stop: 14, x: null } ], null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve lexer.run probe\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@lex_tags_with_rpr = ( T, done ) ->\n  # T?.halt_on_error()\n  { Interlex, compose: c, } = require '../../../apps/intertext-lexer'\n  lexer = new Interlex()\n  #.........................................................................................................\n  do =>\n    ### NOTE arbitrarily forbidding question marks and not using fallback token to test for error tokens ###\n    mode    = 'plain'\n    lexer.add_lexeme { mode, tid: 'escchr',           pattern: ( /\\\\(?<chr>.)/u                             ), }\n    lexer.add_lexeme { mode, tid: 'text',             pattern: ( c.suffix '+', c.charSet.complement /[<`\\\\?]/u  ), }\n    lexer.add_lexeme { mode, tid: 'tag', jump: 'tag', pattern: ( /<(?<lslash>\\/?)/u                         ), }\n    lexer.add_lexeme { mode, tid: 'E_backticks',      pattern: ( /`+/                                       ), }\n    # lexer.add_lexeme mode, 'other',        /./u\n  #.........................................................................................................\n  do =>\n    mode    = 'tag'\n    lexer.add_lexeme { mode, tid: 'escchr',         pattern: ( /\\\\(?<chr>.)/u                           ), }\n    lexer.add_lexeme { mode, tid: 'end', jump: '^', pattern: ( />/u                                     ), }\n    lexer.add_lexeme { mode, tid: 'text',           pattern: ( c.suffix '+', c.charSet.complement /[>\\\\]/u  ), }\n    lexer.add_lexeme { mode, tid: 'other',          pattern: ( /./u                                     ), }\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ 'helo <bold>`world`</bold>', \"[plain:text,(0:5),='helo '][plain:tag>tag,(5:6),='<',lslash:null][tag:text,(6:10),='bold'][tag:end^,(10:11),='>'][plain:E_backticks,(11:12),='`'][plain:text,(12:17),='world'][plain:E_backticks,(17:18),='`'][plain:tag>tag,(18:20),='</',lslash:'/'][tag:text,(20:24),='bold'][tag:end^,(24:25),='>'][plain:$eof,(25:25),='']\", null ]\n    [ '<x v=\\\\> z=42>', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:text,(1:5),='x v='][tag:escchr,(5:7),='\\\\\\\\>',chr:'>'][tag:text,(7:12),=' z=42'][tag:end^,(12:13),='>'][plain:$eof,(13:13),='']\", null ]\n    [ '<x v=\\\\> z=42\\\\>', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:text,(1:5),='x v='][tag:escchr,(5:7),='\\\\\\\\>',chr:'>'][tag:text,(7:12),=' z=42'][tag:escchr,(12:14),='\\\\\\\\>',chr:'>'][tag:$eof,(14:14),='']\", null ]\n    [ 'a <b', \"[plain:text,(0:2),='a '][plain:tag>tag,(2:3),='<',lslash:null][tag:text,(3:4),='b'][tag:$eof,(4:4),='']\", null ]\n    [ 'what? error?', \"[plain:text,(0:4),='what'][plain:$error,(4:4),='',code:'nomatch']\", null ]\n    [ 'd <', \"[plain:text,(0:2),='d '][plain:tag>tag,(2:3),='<',lslash:null][tag:$eof,(3:3),='']\", null ]\n    [ '<c', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:text,(1:2),='c'][tag:$eof,(2:2),='']\", null ]\n    [ '<', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:$eof,(1:1),='']\", null ]\n    [ '', \"[plain:$eof,(0:0),='']\", null ]\n    [ 'helo \\\\<bold>`world`</bold>', \"[plain:text,(0:5),='helo '][plain:escchr,(5:7),='\\\\\\\\<',chr:'<'][plain:text,(7:12),='bold>'][plain:E_backticks,(12:13),='`'][plain:text,(13:18),='world'][plain:E_backticks,(18:19),='`'][plain:tag>tag,(19:21),='</',lslash:'/'][tag:text,(21:25),='bold'][tag:end^,(25:26),='>'][plain:$eof,(26:26),='']\", null ]\n    [ '<b>helo \\\\<bold>`world`</bold></b>', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:text,(1:2),='b'][tag:end^,(2:3),='>'][plain:text,(3:8),='helo '][plain:escchr,(8:10),='\\\\\\\\<',chr:'<'][plain:text,(10:15),='bold>'][plain:E_backticks,(15:16),='`'][plain:text,(16:21),='world'][plain:E_backticks,(21:22),='`'][plain:tag>tag,(22:24),='</',lslash:'/'][tag:text,(24:28),='bold'][tag:end^,(28:29),='>'][plain:tag>tag,(29:31),='</',lslash:'/'][tag:text,(31:32),='b'][tag:end^,(32:33),='>'][plain:$eof,(33:33),='']\", null ]\n    [ '<i><b></b></i>', \"[plain:tag>tag,(0:1),='<',lslash:null][tag:text,(1:2),='i'][tag:end^,(2:3),='>'][plain:tag>tag,(3:4),='<',lslash:null][tag:text,(4:5),='b'][tag:end^,(5:6),='>'][plain:tag>tag,(6:8),='</',lslash:'/'][tag:text,(8:9),='b'][tag:end^,(9:10),='>'][plain:tag>tag,(10:12),='</',lslash:'/'][tag:text,(12:13),='i'][tag:end^,(13:14),='>'][plain:$eof,(14:14),='']\", null ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve ( lexer.rpr_token token for token from lexer.walk probe ).join ''\n  #.........................................................................................................\n  done?()\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n\n"
  ]
}