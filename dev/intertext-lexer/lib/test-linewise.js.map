{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-linewise.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,KAAA,EAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,gCAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAdA;;;EAmBA,IAAA,GAA4B,OAAA,CAAQ,wBAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR,EApB5B;;;EAsBA,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,MADF,EAEE,OAFF,EAGE,QAHF,EAIE,gBAJF,CAAA,GAI4B,KAAK,CAAC,MAAN,CAAA,CAJ5B;;EAKA,GAAA,GAA4B,MAAM,CAAC;;EACnC,GAAA,GAA4B,OAAA,CAAQ,mBAAR;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,sBAAR;;EAC5B,KAAA,GAA4B,CAAE,GAAF,EAAO,CAAP,CAAA,GAAA;WAAe,IAAI,OAAJ,CAAY,QAAA,CAAE,OAAF,CAAA;aAAe,UAAA,CAAW,CAAE,QAAA,CAAA,CAAA;eAAG,OAAA,CAAQ,CAAA,CAAA,CAAR;MAAH,CAAF,CAAX,EAA+B,GAAA,GAAM,IAArC;IAAf,CAAZ;EAAf;;EAC5B,CAAA,CAAE,KAAF,CAAA,GAA4B,OAAA,CAAQ,qBAAR,CAA5B;;EACA,CAAA,CAAE,SAAF,EACE,IADF,EAEE,KAFF,CAAA,GAE4B,KAF5B,EAjCA;;;EAuCA,IAAC,CAAA,0DAAD,GAA8D,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAC9D,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA;IAAE,EAAA,GAAU,OAAA,CAAQ,SAAR;IACV,GAAA,GAAU,OAAA,CAAQ,mBAAR;IACV,CAAA;MAAE,QAAF;MAAY,OAAA,EAAS;IAArB,CAAA,GAA4B,OAAA,CAAQ,+BAAR,CAA5B;IACA,mBAAA,GAAsB;MACpB;QAAE,CAAE,iCAAF;QAAqC,IAArC,CAAF;QAA+C;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,YAAnE;YAAiF,GAAA,EAAK,CAAtF;YAAyF,KAAA,EAAO,CAAhG;YAAmG,IAAA,EAAM,EAAzG;YAA6G,CAAA,EAAG,IAAhH;YAAsH,MAAA,EAAQ,YAA9H;YAA4I,MAAA,EAAQ;UAApJ,CAAF;UAAkK;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,QAAnE;YAA6E,GAAA,EAAK,CAAlF;YAAqF,KAAA,EAAO,CAA5F;YAA+F,IAAA,EAAM,CAArG;YAAwG,CAAA,EAAG,IAA3G;YAAiH,MAAA,EAAQ,QAAzH;YAAmI,MAAA,EAAQ;UAA3I,CAAlK;UAAyT;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,UAAnE;YAA+E,GAAA,EAAK,CAApF;YAAuF,KAAA,EAAO,CAA9F;YAAiG,IAAA,EAAM,CAAvG;YAA0G,CAAA,EAAG,IAA7G;YAAmH,MAAA,EAAQ,UAA3H;YAAuI,MAAA,EAAQ;UAA/I,CAAzT;UAAod;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,SAAnE;YAA8E,GAAA,EAAK,CAAnF;YAAsF,KAAA,EAAO,CAA7F;YAAgG,IAAA,EAAM,CAAtG;YAAyG,CAAA,EAAG,IAA5G;YAAkH,MAAA,EAAQ,SAA1H;YAAqI,MAAA,EAAQ;UAA7I,CAApd;UAA6mB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAA7mB;UAAkwB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,SAAnE;YAA8E,GAAA,EAAK,CAAnF;YAAsF,KAAA,EAAO,CAA7F;YAAgG,IAAA,EAAM,CAAtG;YAAyG,CAAA,EAAG,IAA5G;YAAkH,MAAA,EAAQ,SAA1H;YAAqI,MAAA,EAAQ;UAA7I,CAAlwB;UAA25B;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAA35B;UAA8iC;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,QAAnE;YAA6E,GAAA,EAAK,CAAlF;YAAqF,KAAA,EAAO,CAA5F;YAA+F,IAAA,EAAM,CAArG;YAAwG,CAAA,EAAG,IAA3G;YAAiH,MAAA,EAAQ,QAAzH;YAAmI,MAAA,EAAQ;UAA3I,CAA9iC;UAAqsC;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,QAAnE;YAA6E,GAAA,EAAK,CAAlF;YAAqF,KAAA,EAAO,CAA5F;YAA+F,IAAA,EAAM,CAArG;YAAwG,CAAA,EAAG,IAA3G;YAAiH,MAAA,EAAQ,QAAzH;YAAmI,MAAA,EAAQ;UAA3I,CAArsC;UAA41C;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,UAAnE;YAA+E,GAAA,EAAK,EAApF;YAAwF,KAAA,EAAO,CAA/F;YAAkG,IAAA,EAAM,CAAxG;YAA2G,CAAA,EAAG,IAA9G;YAAoH,MAAA,EAAQ,UAA5H;YAAwI,MAAA,EAAQ;UAAhJ,CAA51C;SAA/C;OADoB;MAEpB;QAAE,CAAE,yCAAF;QAA6C,IAA7C,CAAF;QAAuD;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAF;SAAvD;OAFoB;MAGpB;QAAE,CAAE,kDAAF;QAAsD,IAAtD,CAAF;QAAgE;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAF;UAA+I;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAA/I;SAAhE;OAHoB;MAIpB;QAAE,CAAE,yDAAF;QAA6D,IAA7D,CAAF;QAAuE;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAAF;UAA+I;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAA/I;UAA4R;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAA5R;SAAvE;OAJoB;MAKpB;QAAE,CAAE,2DAAF;QAA+D,IAA/D,CAAF;QAAyE;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAAF;UAA+I;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAA/I;UAA4R;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,GAAnE;YAAwE,GAAA,EAAK,CAA7E;YAAgF,KAAA,EAAO,CAAvF;YAA0F,IAAA,EAAM,CAAhG;YAAmG,CAAA,EAAG,IAAtG;YAA4G,MAAA,EAAQ,GAApH;YAAyH,MAAA,EAAQ;UAAjI,CAA5R;UAAya;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAza;SAAzE;OALoB;MAMpB;QAAE,CAAE,2CAAF;QAA+C,IAA/C,CAAF;QAAyD;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAAF;UAAqJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAArJ;UAAwS;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,SAAnE;YAA8E,GAAA,EAAK,CAAnF;YAAsF,KAAA,EAAO,CAA7F;YAAgG,IAAA,EAAM,CAAtG;YAAyG,CAAA,EAAG,IAA5G;YAAkH,MAAA,EAAQ,SAA1H;YAAqI,MAAA,EAAQ;UAA7I,CAAxS;UAAic;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,IAAnE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,IAArH;YAA2H,MAAA,EAAQ;UAAnI,CAAjc;UAAglB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,IAAnE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,YAArH;YAAmI,MAAA,EAAQ;UAA3I,CAAhlB;UAAuuB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,IAAtB;YAA4B,EAAA,EAAI,UAAhC;YAA4C,IAAA,EAAM,IAAlD;YAAwD,KAAA,EAAO,GAA/D;YAAoE,GAAA,EAAK,CAAzE;YAA4E,KAAA,EAAO,CAAnF;YAAsF,IAAA,EAAM,CAA5F;YAA+F,CAAA,EAAG,IAAlG;YAAwG,MAAA,EAAQ,YAAhH;YAA8H,MAAA,EAAQ;UAAtI,CAAvuB;UAAy3B;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,SAAnE;YAA8E,GAAA,EAAK,CAAnF;YAAsF,KAAA,EAAO,CAA7F;YAAgG,IAAA,EAAM,EAAtG;YAA0G,CAAA,EAAG,IAA7G;YAAmH,MAAA,EAAQ,YAA3H;YAAyI,MAAA,EAAQ;UAAjJ,CAAz3B;SAAzD;OANoB;MAOpB;QAAE,CAAE,0CAAF;QAA8C,IAA9C,CAAF;QAAwD;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,KAAnE;YAA0E,GAAA,EAAK,CAA/E;YAAkF,KAAA,EAAO,CAAzF;YAA4F,IAAA,EAAM,CAAlG;YAAqG,CAAA,EAAG,IAAxG;YAA8G,MAAA,EAAQ,KAAtH;YAA6H,MAAA,EAAQ;UAArI,CAAF;UAAmJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,SAAnE;YAA8E,GAAA,EAAK,CAAnF;YAAsF,KAAA,EAAO,CAA7F;YAAgG,IAAA,EAAM,CAAtG;YAAyG,CAAA,EAAG,IAA5G;YAAkH,MAAA,EAAQ,SAA1H;YAAqI,MAAA,EAAQ;UAA7I,CAAnJ;UAA4S;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAA5S;UAAyb;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,KAAnE;YAA0E,GAAA,EAAK,CAA/E;YAAkF,KAAA,EAAO,CAAzF;YAA4F,IAAA,EAAM,CAAlG;YAAqG,CAAA,EAAG,IAAxG;YAA8G,MAAA,EAAQ,YAAtH;YAAoI,MAAA,EAAQ;UAA5I,CAAzb;UAAilB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,IAAtB;YAA4B,EAAA,EAAI,UAAhC;YAA4C,IAAA,EAAM,IAAlD;YAAwD,KAAA,EAAO,GAA/D;YAAoE,GAAA,EAAK,CAAzE;YAA4E,KAAA,EAAO,CAAnF;YAAsF,IAAA,EAAM,CAA5F;YAA+F,CAAA,EAAG,IAAlG;YAAwG,MAAA,EAAQ,YAAhH;YAA8H,MAAA,EAAQ;UAAtI,CAAjlB;UAAmuB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,QAAnE;YAA6E,GAAA,EAAK,CAAlF;YAAqF,KAAA,EAAO,CAA5F;YAA+F,IAAA,EAAM,EAArG;YAAyG,CAAA,EAAG,IAA5G;YAAkH,MAAA,EAAQ,YAA1H;YAAwI,MAAA,EAAQ;UAAhJ,CAAnuB;UAA+3B;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,SAAvH;YAAkI,MAAA,EAAQ;UAA1I,CAA/3B;UAAqhC;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,IAAtB;YAA4B,EAAA,EAAI,UAAhC;YAA4C,IAAA,EAAM,IAAlD;YAAwD,KAAA,EAAO,GAA/D;YAAoE,GAAA,EAAK,CAAzE;YAA4E,KAAA,EAAO,CAAnF;YAAsF,IAAA,EAAM,CAA5F;YAA+F,CAAA,EAAG,IAAlG;YAAwG,MAAA,EAAQ,SAAhH;YAA2H,MAAA,EAAQ;UAAnI,CAArhC;UAAoqC;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,IAAnE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,SAArH;YAAgI,MAAA,EAAQ;UAAxI,CAApqC;UAAwzC;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAxzC;SAAxD;OAPoB;MAQpB;QAAE,CAAE,8CAAF;QAAkD,IAAlD,CAAF;QAA4D;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAF;UAA+I;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAA/I;UAA4R;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAA5R;UAAya;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAza;UAAsjB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAtjB;UAAmsB;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAnsB;SAA5D;OARoB;MASpB;QAAE,CAAE,uDAAF;QAA2D,IAA3D,CAAF;QAAqE;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAAF;UAAqJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAArJ;UAAwS;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,UAAnE;YAA+E,GAAA,EAAK,CAApF;YAAuF,KAAA,EAAO,CAA9F;YAAiG,IAAA,EAAM,CAAvG;YAA0G,CAAA,EAAG,IAA7G;YAAmH,MAAA,EAAQ,UAA3H;YAAuI,MAAA,EAAQ;UAA/I,CAAxS;UAAmc;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,YAAnE;YAAiF,GAAA,EAAK,CAAtF;YAAyF,KAAA,EAAO,CAAhG;YAAmG,IAAA,EAAM,EAAzG;YAA6G,CAAA,EAAG,IAAhH;YAAsH,MAAA,EAAQ,YAA9H;YAA4I,MAAA,EAAQ;UAApJ,CAAnc;SAArE;OAToB;MAUpB;QAAE;UAAE,uDAAF;UAA2D;YAAE,IAAA,EAAM;UAAR,CAA3D;SAAF;QAA+E;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAAF;UAAqJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAArJ;UAAwS;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,UAAnE;YAA+E,GAAA,EAAK,CAApF;YAAuF,KAAA,EAAO,CAA9F;YAAiG,IAAA,EAAM,CAAvG;YAA0G,CAAA,EAAG,IAA7G;YAAmH,MAAA,EAAQ,UAA3H;YAAuI,MAAA,EAAQ;UAA/I,CAAxS;UAAmc;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,YAAnE;YAAiF,GAAA,EAAK,CAAtF;YAAyF,KAAA,EAAO,CAAhG;YAAmG,IAAA,EAAM,EAAzG;YAA6G,CAAA,EAAG,IAAhH;YAAsH,MAAA,EAAQ,YAA9H;YAA4I,MAAA,EAAQ;UAApJ,CAAnc;SAA/E;OAVoB;MAWpB;QAAE;UAAE,uDAAF;UAA2D;YAAE,IAAA,EAAM;UAAR,CAA3D;SAAF;QAAgF;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAAF;UAAqJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,MAAnE;YAA2E,GAAA,EAAK,CAAhF;YAAmF,KAAA,EAAO,CAA1F;YAA6F,IAAA,EAAM,CAAnG;YAAsG,CAAA,EAAG,IAAzG;YAA+G,MAAA,EAAQ,MAAvH;YAA+H,MAAA,EAAQ;UAAvI,CAArJ;UAAwS;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,UAAnE;YAA+E,GAAA,EAAK,CAApF;YAAuF,KAAA,EAAO,CAA9F;YAAiG,IAAA,EAAM,CAAvG;YAA0G,CAAA,EAAG,IAA7G;YAAmH,MAAA,EAAQ,UAA3H;YAAuI,MAAA,EAAQ;UAA/I,CAAxS;UAAmc;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,YAAnE;YAAiF,GAAA,EAAK,CAAtF;YAAyF,KAAA,EAAO,CAAhG;YAAmG,IAAA,EAAM,EAAzG;YAA6G,CAAA,EAAG,IAAhH;YAAsH,MAAA,EAAQ,YAA9H;YAA4I,MAAA,EAAQ;UAApJ,CAAnc;SAAhF;OAXoB;MAYpB;QAAE,CAAE,4CAAF;QAAgD,IAAhD,CAAF;QAA0D;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAAF;UAAuJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAAvJ;UAA4S;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAA5S;UAAic;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAjc;SAA1D;OAZoB;MAapB;QAAE,CAAE,8CAAF;QAAkD,IAAlD,CAAF;QAA4D;UAAE;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAAF;UAAuJ;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAAvJ;UAA4S;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,MAAtB;YAA8B,EAAA,EAAI,YAAlC;YAAgD,IAAA,EAAM,IAAtD;YAA4D,KAAA,EAAO,OAAnE;YAA4E,GAAA,EAAK,CAAjF;YAAoF,KAAA,EAAO,CAA3F;YAA8F,IAAA,EAAM,CAApG;YAAuG,CAAA,EAAG,IAA1G;YAAgH,MAAA,EAAQ,OAAxH;YAAiI,MAAA,EAAQ;UAAzI,CAA5S;UAAic;YAAE,IAAA,EAAM,OAAR;YAAiB,GAAA,EAAK,OAAtB;YAA+B,EAAA,EAAI,aAAnC;YAAkD,IAAA,EAAM,IAAxD;YAA8D,KAAA,EAAO,EAArE;YAAyE,GAAA,EAAK,CAA9E;YAAiF,KAAA,EAAO,CAAxF;YAA2F,IAAA,EAAM,CAAjG;YAAoG,CAAA,EAAG,IAAvG;YAA6G,MAAA,EAAQ,EAArH;YAAyH,MAAA,EAAQ;UAAjI,CAAjc;SAA5D;OAboB;MAHxB;;IAmBE,SAAA,GAAY,QAAA,CAAA,CAAA;AACd,UAAA,KAAA,EAAA;MAAI,KAAA,GAAU,IAAI,QAAJ,CAAa;QAAE,QAAA,EAAU;MAAZ,CAAb,EAAd;;;MAGI,IAAA,GAAU,QAHd;;MAKI,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,IAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;MACA,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,MAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;MACA,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,OAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;AACA,aAAO;IATG,EAnBd;;IA8BE,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT;MACF,KAAA,GAAkB,SAAA,CAAA;MAClB,MAAA,GAAkB;MAClB,MAAA,GAAkB;MAClB,CAAE,IAAF,EACE,GADF,CAAA,GACkB;MAClB,IAAA,GAAkB,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,IAArB,CAAb;AAGlB;;;MAAA,KAAA,QAAA;SAAI,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb;AACF;QAAA,KAAA,aAAA;UACE,MAAM,CAAC,IAAP,CAAY,KAAZ;UACA,MAAM,CAAC,IAAP,CAAY,KAAZ;;YACA,CAAC,CAAE,EAAH,CAAM,KAAK,CAAC,KAAZ,EAAmB,KAAK,CAAC,MAAM,+BAA/B;;QAHF;MADF,CARJ;;;;;;QAiBI,CAAC,CAAE,EAAH,CAAM,MAAN,EAAc,OAAd;;MACA,CAAC,CAAC,QAAF,CAAa,GAAA,CAAI,IAAJ,CAAb,EAAyB,MAAzB;IAnBF;;MAqBA;;AACA,WAAO;EArDqD,EAvC9D;;;EA+FA,IAAC,CAAA,6BAAD,GAAiC,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACjC,QAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA;IAAE,EAAA,GAAU,OAAA,CAAQ,SAAR;IACV,GAAA,GAAU,OAAA,CAAQ,mBAAR;IACV,CAAA;MAAE,QAAF;MAAY,OAAA,EAAS;IAArB,CAAA,GAA4B,OAAA,CAAQ,+BAAR,CAA5B;IACA,mBAAA,GAAsB;MACpB,CAAE,CAAE,iCAAF;MAAqC,IAArC,CAAF;MAAgF,CAAA,sHAAA,CAAhF,CADoB;MAEpB,CAAE,CAAE,yCAAF;MAA6C,IAA7C,CAAF;MAAgF,MAAhF,CAFoB;MAGpB,CAAE,CAAE,kDAAF;MAAsD,IAAtD,CAAF;MAAgF,WAAhF,CAHoB;MAIpB,CAAE,CAAE,yDAAF;MAA6D,IAA7D,CAAF;MAAgF,mBAAhF,CAJoB;MAKpB,CAAE,CAAE,2DAAF;MAA+D,IAA/D,CAAF;MAAgF,wBAAhF,CALoB;MAMpB,CAAE,CAAE,2CAAF;MAA+C,IAA/C,CAAF;MAAgF,+DAAhF,CANoB;MAOpB,CAAE,CAAE,0CAAF;MAA8C,IAA9C,CAAF;MAAgF,8EAAhF,CAPoB;MAQpB,CAAE,CAAE,8CAAF;MAAkD,IAAlD,CAAF;MAAgF,+BAAhF,CARoB;MASpB,CAAE,CAAE,uDAAF;MAA2D,IAA3D,CAAF;MAAgF,+CAAhF,CAToB;MAUpB;QAAE;UAAE,uDAAF;UAA2D;YAAE,IAAA,EAAM;UAAR,CAA3D;SAAF;QAAgF,+CAAhF;OAVoB;MAWpB;QAAE;UAAE,uDAAF;UAA2D;YAAE,IAAA,EAAM;UAAR,CAA3D;SAAF;QAAgF,iFAAhF;OAXoB;MAYpB,CAAE,CAAE,4CAAF;MAAgD,IAAhD,CAAF;MAAgF,oCAAhF,CAZoB;MAapB,CAAE,CAAE,8CAAF;MAAkD,IAAlD,CAAF;MAAgF,oCAAhF,CAboB;MAHxB;;IAmBE,SAAA,GAAY,QAAA,CAAE,GAAF,CAAA;AACd,UAAA,KAAA,EAAA;MAAI,KAAA,GAAU,IAAI,QAAJ,CAAa;QAAE,QAAA,EAAU,IAAZ;QAAkB,GAAA;MAAlB,CAAb,EAAd;;;MAGI,IAAA,GAAU,QAHd;;MAKI,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,IAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;MACA,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,MAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;MACA,KAAK,CAAC,UAAN,CAAiB;QAAE,IAAF;QAAQ,GAAA,EAAK,OAAb;QAAyB,OAAA,EAAW;MAApC,CAAjB;AACA,aAAO;IATG,EAnBd;;IA8BE,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT;MACF,MAAA,GAAkB;MAClB,MAAA,GAAkB;MAClB,CAAE,IAAF,EACE,GADF,CAAA,GACkB;MAClB,KAAA,GAAkB,SAAA,CAAU,GAAV;MAClB,IAAA,GAAkB,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,IAArB,CAAb;MAClB,MAAA,GAAkB,EAAE,CAAC,YAAH,CAAgB,IAAhB,EAAsB;QAAE,QAAA,EAAU;MAAZ,CAAtB;AAClB;MAAA,KAAA,YAAA,GAAA;;QAEE,IAAA,CAAK,QAAL,EAAe,KAAf;QACA,MAAM,CAAC,IAAP,CAAY,KAAZ;QACA,MAAM,CAAC,IAAP,CAAY,CAAA,CAAA,CAAG,KAAK,CAAC,GAAT,CAAA,CAAA,CAAA,CAAgB,GAAA,CAAI,KAAK,CAAC,KAAV,CAAhB,CAAA,CAAZ;MAJF,CAPJ;;MAaI,MAAA,GAAS,MAAM,CAAC,IAAP,CAAY,GAAZ;MACT,KAAA,CAAM,QAAN,EAAgB,GAAA,CAAI,MAAJ,CAAhB;;QACA,CAAC,CAAE,EAAH,CAAM,MAAN,EAAc,OAAd;;IAhBF;;MAmBA;;AACA,WAAO;EAnDwB,EA/FjC;;;EAsJA,IAAG,OAAO,CAAC,IAAR,KAAgB,MAAnB;IAAkC,CAAA,CAAA,CAAA,GAAA,EAAA;;;aAGhC,IAAA,CAAK,IAAC,CAAA,6BAAN;IAHgC,CAAA,IAAlC;;;EAtJA;AAAA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERTEXT-LEXER/TESTS/LINEWISE'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\nafter                     = ( dts, f  ) => new Promise ( resolve ) -> setTimeout ( -> resolve f() ), dts * 1000\n{ DATOM }                 = require '../../../apps/datom'\n{ new_datom\n  lets\n  stamp     }             = DATOM\n\n\n#-----------------------------------------------------------------------------------------------------------\n@use_linewise_lexing_with_external_iterator_no_linewise_cfg = ( T, done ) ->\n  FS      = require 'node:fs'\n  GUY     = require '../../../apps/guy'\n  { Interlex, compose: c, } = require '../../../apps/intertext-lexer'\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: \"Ångström's\", lnr: 1, start: 0, stop: 10, x: null, source: \"Ångström's\", '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'éclair', lnr: 2, start: 0, stop: 6, x: null, source: 'éclair', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: \"éclair's\", lnr: 3, start: 0, stop: 8, x: null, source: \"éclair's\", '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'éclairs', lnr: 4, start: 0, stop: 7, x: null, source: 'éclairs', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'éclat', lnr: 5, start: 0, stop: 5, x: null, source: 'éclat', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: \"éclat's\", lnr: 6, start: 0, stop: 7, x: null, source: \"éclat's\", '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'élan', lnr: 7, start: 0, stop: 4, x: null, source: 'élan', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: \"élan's\", lnr: 8, start: 0, stop: 6, x: null, source: \"élan's\", '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'émigré', lnr: 9, start: 0, stop: 6, x: null, source: 'émigré', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: \"émigré's\", lnr: 10, start: 0, stop: 8, x: null, source: \"émigré's\", '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ], [ { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 1, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ], [ { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 1, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 2, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '1', lnr: 1, start: 0, stop: 1, x: null, source: '1', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '2', lnr: 2, start: 0, stop: 1, x: null, source: '2', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '3', lnr: 3, start: 0, stop: 1, x: null, source: '3', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '1', lnr: 1, start: 0, stop: 1, x: null, source: '1', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '2', lnr: 2, start: 0, stop: 1, x: null, source: '2', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '3', lnr: 3, start: 0, stop: 1, x: null, source: '3', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 4, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'this', lnr: 1, start: 0, stop: 4, x: null, source: 'this', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'file', lnr: 2, start: 0, stop: 4, x: null, source: 'file', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'written', lnr: 3, start: 0, stop: 7, x: null, source: 'written', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'on', lnr: 4, start: 0, stop: 2, x: null, source: 'on', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'MS', lnr: 5, start: 0, stop: 2, x: null, source: 'MS Notepad', '$key': '^plain' }, { mode: 'plain', tid: 'ws', mk: 'plain:ws', jump: null, value: ' ', lnr: 5, start: 2, stop: 3, x: null, source: 'MS Notepad', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'Notepad', lnr: 5, start: 3, stop: 10, x: null, source: 'MS Notepad', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'all', lnr: 1, start: 0, stop: 3, x: null, source: 'all', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '𠀀bases', lnr: 2, start: 0, stop: 7, x: null, source: '𠀀bases', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 3, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'are', lnr: 4, start: 0, stop: 3, x: null, source: 'are belong', '$key': '^plain' }, { mode: 'plain', tid: 'ws', mk: 'plain:ws', jump: null, value: ' ', lnr: 4, start: 3, stop: 4, x: null, source: 'are belong', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'belong', lnr: 4, start: 4, stop: 10, x: null, source: 'are belong', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: '𠀀to', lnr: 5, start: 0, stop: 4, x: null, source: '𠀀to us', '$key': '^plain' }, { mode: 'plain', tid: 'ws', mk: 'plain:ws', jump: null, value: ' ', lnr: 5, start: 4, stop: 5, x: null, source: '𠀀to us', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'us', lnr: 5, start: 5, stop: 7, x: null, source: '𠀀to us', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 6, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ], [ { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 1, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 2, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 3, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 4, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 5, start: 0, stop: 0, x: null, source: '', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 6, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line', lnr: 1, start: 0, stop: 4, x: null, source: 'line', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'with', lnr: 2, start: 0, stop: 4, x: null, source: 'with', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'trailing', lnr: 3, start: 0, stop: 8, x: null, source: 'trailing', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'whitespace', lnr: 4, start: 0, stop: 10, x: null, source: 'whitespace', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line', lnr: 1, start: 0, stop: 4, x: null, source: 'line', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'with', lnr: 2, start: 0, stop: 4, x: null, source: 'with', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'trailing', lnr: 3, start: 0, stop: 8, x: null, source: 'trailing', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'whitespace', lnr: 4, start: 0, stop: 10, x: null, source: 'whitespace', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line', lnr: 1, start: 0, stop: 4, x: null, source: 'line', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'with', lnr: 2, start: 0, stop: 4, x: null, source: 'with', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'trailing', lnr: 3, start: 0, stop: 8, x: null, source: 'trailing', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'whitespace', lnr: 4, start: 0, stop: 10, x: null, source: 'whitespace', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line1', lnr: 1, start: 0, stop: 5, x: null, source: 'line1', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line2', lnr: 2, start: 0, stop: 5, x: null, source: 'line2', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line3', lnr: 3, start: 0, stop: 5, x: null, source: 'line3', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 4, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ], [ { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line1', lnr: 1, start: 0, stop: 5, x: null, source: 'line1', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line2', lnr: 2, start: 0, stop: 5, x: null, source: 'line2', '$key': '^plain' }, { mode: 'plain', tid: 'word', mk: 'plain:word', jump: null, value: 'line3', lnr: 3, start: 0, stop: 5, x: null, source: 'line3', '$key': '^plain' }, { mode: 'plain', tid: 'empty', mk: 'plain:empty', jump: null, value: '', lnr: 4, start: 0, stop: 0, x: null, source: '', '$key': '^plain' } ] ]\n    ]\n  #.........................................................................................................\n  new_lexer = ->\n    lexer   = new Interlex { linewise: true, }\n    # T?.eq lexer.cfg.linewise, true\n    # T?.eq lexer.state.lnr, 0\n    mode    = 'plain'\n    # lexer.add_lexeme { mode, tid: 'eol',      pattern: ( /$/u  ), }\n    lexer.add_lexeme { mode, tid: 'ws',       pattern: ( /\\s+/u ), }\n    lexer.add_lexeme { mode, tid: 'word',     pattern: ( /\\S+/u ), }\n    lexer.add_lexeme { mode, tid: 'empty',    pattern: ( /^$/u ), }\n    return lexer\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    lexer           = new_lexer()\n    result          = []\n    tokens          = []\n    [ path\n      cfg ]         = probe\n    path            = PATH.resolve PATH.join __dirname, path\n    # trimmed_source  = ( line + eol for { line, eol, } from GUY.fs.walk_lines_with_positions path, cfg ).join ''\n    # debug '^23-4^', rpr trimmed_source\n    for { lnr, line, eol, } from GUY.fs.walk_lines_with_positions path, cfg\n      for token from lexer.walk line\n        tokens.push token\n        result.push token\n        T?.eq token.value, token.source[ token.start ... token.stop ]\n    #.........................................................................................................\n    # result = result.join ','\n    # debug '^23-5^', rpr result\n    # echo [ probe, result, ]\n    T?.eq result, matcher\n    H.tabulate ( rpr path ), tokens\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@use_linewise_with_single_text = ( T, done ) ->\n  FS      = require 'node:fs'\n  GUY     = require '../../../apps/guy'\n  { Interlex, compose: c, } = require '../../../apps/intertext-lexer'\n  probes_and_matchers = [\n    [ [ '../../../assets/a-few-words.txt', null ],                                  \"\"\"1:\"Ångström's\",2:'éclair',3:\"éclair's\",4:'éclairs',5:'éclat',6:\"éclat's\",7:'élan',8:\"élan's\",9:'émigré',10:\"émigré's\\\"\"\"\" ]\n    [ [ '../../../assets/datamill/empty-file.txt', null ],                          \"1:''\" ]\n    [ [ '../../../assets/datamill/file-with-single-nl.txt', null ],                 \"1:'',2:''\" ]\n    [ [ '../../../assets/datamill/file-with-3-lines-no-eofnl.txt', null ],          \"1:'1',2:'2',3:'3'\" ]\n    [ [ '../../../assets/datamill/file-with-3-lines-with-eofnl.txt', null ],        \"1:'1',2:'2',3:'3',4:''\" ]\n    [ [ '../../../assets/datamill/windows-crlf.txt', null ],                        \"1:'this',2:'file',3:'written',4:'on',5:'MS',5:' ',5:'Notepad'\" ]\n    [ [ '../../../assets/datamill/mixed-usage.txt', null ],                         \"1:'all',2:'𠀀bases',3:'',4:'are',4:' ',4:'belong',5:'𠀀to',5:' ',5:'us',6:''\" ]\n    [ [ '../../../assets/datamill/all-empty-mixed.txt', null ],                     \"1:'',2:'',3:'',4:'',5:'',6:''\" ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', null ],            \"1:'line',2:'with',3:'trailing',4:'whitespace'\" ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: true } ],  \"1:'line',2:'with',3:'trailing',4:'whitespace'\" ]\n    [ [ '../../../assets/datamill/lines-with-trailing-spcs.txt', { trim: false } ], \"1:'line',1:'   ',2:'with',2:'   ',3:'trailing',3:'\\\\t\\\\t',4:'whitespace',4:'　 '\" ]\n    [ [ '../../../assets/datamill/lines-with-lf.txt', null ],                       \"1:'line1',2:'line2',3:'line3',4:''\" ]\n    [ [ '../../../assets/datamill/lines-with-crlf.txt', null ],                     \"1:'line1',2:'line2',3:'line3',4:''\" ]\n    ]\n  #.........................................................................................................\n  new_lexer = ( cfg ) ->\n    lexer   = new Interlex { linewise: true, cfg..., }\n    # T?.eq lexer.cfg.linewise, true\n    # T?.eq lexer.state.lnr, 0\n    mode    = 'plain'\n    # lexer.add_lexeme { mode, tid: 'eol',      pattern: ( /$/u  ), }\n    lexer.add_lexeme { mode, tid: 'ws',       pattern: ( /\\s+/u ), }\n    lexer.add_lexeme { mode, tid: 'word',     pattern: ( /\\S+/u ), }\n    lexer.add_lexeme { mode, tid: 'empty',    pattern: ( /^$/u ), }\n    return lexer\n  #.........................................................................................................\n  for [ probe, matcher, ] in probes_and_matchers\n    result          = []\n    tokens          = []\n    [ path\n      cfg ]         = probe\n    lexer           = new_lexer cfg\n    path            = PATH.resolve PATH.join __dirname, path\n    source          = FS.readFileSync path, { encoding: 'utf-8', }\n    for token from lexer.walk { source, }\n      # info '^23-4^', lexer.state\n      info '^23-4^', token\n      tokens.push token\n      result.push \"#{token.lnr}:#{rpr token.value}\"\n    #.........................................................................................................\n    result = result.join ','\n    debug '^23-4^', rpr result\n    T?.eq result, matcher\n    # H.tabulate ( rpr probe ), tokens\n  #.........................................................................................................\n  done?()\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  # @use_linewise_lexing_with_external_iterator_no_linewise_cfg()\n  # test @use_linewise_lexing_with_external_iterator_no_linewise_cfg\n  test @use_linewise_with_single_text\n  # test @"
  ]
}