{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'INTERTEXT-LEXER/TESTS/HELPERS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n{ DATOM }                 = require '../../../apps/datom'\n{ new_datom\n  lets\n  stamp     }             = DATOM\n\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@new_token = ( ref, token, mode, tid, name, value, x1, x2, x = null, lexeme = null ) ->\n  ### TAINT recreation of `Interlex::new_token()` ###\n  jump      = lexeme?.jump ? null\n  { x1\n    x2  } = token\n  return new_datom \"^#{mode}\", { mode, tid, mk: \"#{mode}:#{tid}\", jump, name, value, x1, x2, x, $: ref, }\n\n\n#-----------------------------------------------------------------------------------------------------------\n@$parse_md_star = ->\n  #.........................................................................................................\n  within =\n    one:    false\n  start_of =\n    one:    null\n  #.........................................................................................................\n  enter = ( mode, x1 ) =>\n    within[   mode ] = true\n    start_of[ mode ] = x1\n    return null\n  enter.one = ( x1 ) => enter 'one', x1\n  #.........................................................................................................\n  exit = ( mode ) =>\n    within[   mode ] = false\n    start_of[ mode ] = null\n    return null\n  exit.one = => exit 'one'\n  #.........................................................................................................\n  return ( d, send ) =>\n    switch d.tid\n      #.....................................................................................................\n      when 'star1'\n        send stamp d\n        if within.one then  exit.one();      send @new_token '^æ1^', d, 'html', 'tag', 'i', '</i>'\n        else                enter.one d.x1;  send @new_token '^æ2^', d, 'html', 'tag', 'i', '<i>'\n      #.....................................................................................................\n      else send d\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$parse_md_stars = ->\n  within =\n    one:    false\n    two:    false\n  start_of =\n    one:    null\n    two:    null\n  #.........................................................................................................\n  enter = ( mode, x1 ) =>\n    within[   mode ] = true\n    start_of[ mode ] = x1\n    return null\n  enter.one = ( x1 ) => enter 'one', x1\n  enter.two = ( x1 ) => enter 'two', x1\n  #.........................................................................................................\n  exit = ( mode ) =>\n    within[   mode ] = false\n    start_of[ mode ] = null\n    return null\n  exit.one = => exit 'one'\n  exit.two = => exit 'two'\n  #.........................................................................................................\n  return parse_md_stars = ( d, send ) =>\n    switch d.tid\n      #.....................................................................................................\n      when 'star1'\n        send stamp d\n        if within.one then  exit.one();         send @new_token '^æ1^', d, 'html', 'tag', 'i', '</i>'\n        else                enter.one d.x1;  send @new_token '^æ2^', d, 'html', 'tag', 'i', '<i>'\n      #.....................................................................................................\n      when 'star2'\n        send stamp d\n        if within.two\n          if within.one\n            if start_of.one > start_of.two\n              exit.one();         send @new_token '^æ3^', d, 'html', 'tag', 'i', '</i>'\n              exit.two();         send @new_token '^æ4^', d, 'html', 'tag', 'b', '</b>'\n              enter.one d.x1;  send @new_token '^æ5^', d, 'html', 'tag', 'i', '<i>'\n            else\n              exit.two();         send @new_token '^æ6^', d, 'html', 'tag', 'b', '</b>'\n          else\n            exit.two();         send @new_token '^æ7^', d, 'html', 'tag', 'b', '</b>'\n        else\n          enter.two d.x1;  send @new_token '^æ8^', d, 'html', 'tag', 'b', '<b>'\n      #.....................................................................................................\n      when 'star3'\n        send stamp d\n        if within.one\n          if within.two\n            if start_of.one > start_of.two\n              exit.one();       send @new_token '^æ9^', d, 'html', 'tag', 'i', '</i>'\n              exit.two();       send @new_token '^æ10^', d, 'html', 'tag', 'b', '</b>'\n            else\n              exit.two();       send @new_token '^æ11^', d, 'html', 'tag', 'b', '</b>'\n              exit.one();       send @new_token '^æ12^', d, 'html', 'tag', 'i', '</i>'\n          else\n            exit.one();         send @new_token '^æ13^', d, 'html', 'tag', 'i', '</i>'\n            enter.two d.x1;  send @new_token '^æ14^', d, 'html', 'tag', 'b', '<b>'\n        else\n          if within.two\n            exit.two();         send @new_token '^æ15^', d, 'html', 'tag', 'b', '</b>'\n            enter.one d.x1;  send @new_token '^æ16^', d, 'html', 'tag', 'i', '<i>'\n          else\n            enter.two d.x1;  send @new_token '^æ17^', d, 'html', 'tag', 'b', '<b>'\n            enter.one d.x1 + 2;  send @new_token '^æ18^', { x1: d.x1 + 2, x2: d.x2, }, 'html', 'tag', 'i', '<i>'\n      #.....................................................................................................\n      else send d\n    return null\n"
  ]
}