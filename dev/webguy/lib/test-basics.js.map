{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-basics.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'webguy/tests/basics'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\ntypes                     = new ( require 'intertype-newest' ).Intertype()\n{ isa }                   = types\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"_XEMITTER: _\" ] = ( T, done ) ->\n#   { DATOM }                 = require '../../../apps/datom'\n#   { new_datom\n#     select }                = DATOM\n  # { Djehuti }               = require '../../../apps/intertalk'\n#   #.........................................................................................................\n#   probes_and_matchers = [\n#     [['^foo', { time: 1500000, value: \"msg#1\", }],{\"time\":1500000,\"value\":\"msg#1\",\"$key\":\"^foo\"},null]\n#     ]\n#   #.........................................................................................................\n#   for [ probe, matcher, error, ] in probes_and_matchers\n#     await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n#       [ key, value, ] = probe\n#       resolve new_datom key, value\n#   done()\n#   return null\n\n\n#===========================================================================================================\n# TIME\n#-----------------------------------------------------------------------------------------------------------\n@time_exports = ( T, done ) ->\n  WGUY = require '../../../apps/webguy'\n  #.........................................................................................................\n  T?.ok WGUY.time instanceof WGUY.time.Time\n  T?.ok isa.function WGUY.time.stamp_f\n  T?.ok isa.function WGUY.time.stamp_s\n  T?.ok isa.function WGUY.time.monostamp_f2\n  T?.ok isa.function WGUY.time.monostamp_s2\n  T?.ok isa.function WGUY.time.monostamp_s1\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@time_datatypes = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  time  = new WGUY.time.Time { format: 'milliseconds', }\n  #.........................................................................................................\n  T?.ok isa.float           time.stamp_f()\n  T?.ok isa.nonempty.text   time.stamp_s 0\n  T?.ok isa.nonempty.text   time.stamp_s()\n  T?.ok isa.list.of.float   time.monostamp_f2()\n  T?.eq time.monostamp_f2().length, 2\n  T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n  T?.eq ( time.monostamp_s1 45678      ), '0000000045678.000:000'\n  T?.eq ( time.monostamp_s1 45678, 123 ), '0000000045678.000:123'\n  T?.eq ( time.monostamp_s2 45678      ), [ '0000000045678.000', '000', ]\n  T?.eq ( time.monostamp_s2 45678, 123 ), [ '0000000045678.000', '123', ]\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@time_stamp = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  #.........................................................................................................\n  ts_f    = WGUY.time.stamp_f()\n  ts_s_1  = WGUY.time.stamp_s ts_f\n  ts_s_2  = WGUY.time.stamp_s()\n  T?.eq ( ts_f.toFixed 3 ), ts_s_1\n  T?.ok ts_s_2 > ts_s_1 # Note: comparing digit strings should be OK\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@time_monostamp = ( T, done ) ->\n  WGUY = require '../../../apps/webguy'\n  #.........................................................................................................\n  stamp_f_matcher = performance.timeOrigin + performance.now()\n  delta_ms        = 500\n  await GUY.async.sleep delta_ms / 1000\n  stamp_f_result  = WGUY.time.monostamp_f2()[ 0 ]\n  # debug '^223^', { stamp_f_matcher, stamp_f_result, }\n  T?.ok stamp_f_matcher - delta_ms * 2 < stamp_f_result < stamp_f_matcher + delta_ms * 2\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@time_configurability = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'milliseconds', counter_joiner: '-', ms_padder: '_', count_digits: 2, }\n    T?.eq ( time.stamp_s 0               ), '____________0.000'\n    T?.eq ( time.monostamp_s1 456.789      ), '__________456.789-00'\n    T?.eq ( time.monostamp_s1 456.789, 123 ), '__________456.789-123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '__________456.789', '00', ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '__________456.789', '123', ]\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'milliseconds', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.monostamp_s1 456.789      ), '0000000000456.789:000'\n    T?.eq ( time.monostamp_s1 456.789, 123 ), '0000000000456.789:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '0000000000456.789', '000', ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '0000000000456.789', '123', ]\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'iso', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.monostamp_s1 456.789      ), '1970-01-01T00:00:00.456789Z:000'\n    T?.eq ( time.monostamp_s1 456.789, 123 ), '1970-01-01T00:00:00.456789Z:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '1970-01-01T00:00:00.456789Z', '000' ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '1970-01-01T00:00:00.456789Z', '123' ]\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'YYYY MM DD HH:mm:ss.µ [Z]', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.stamp        456.789      ), '1970 01 01 00:00:00.456789 Z:000'\n    T?.eq ( time.stamp        456.789, 123 ), '1970 01 01 00:00:00.456789 Z:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '1970 01 01 00:00:00.456789 Z', '000' ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '1970 01 01 00:00:00.456789 Z', '123' ]\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'compact', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.stamp        456.789      ), '19700101000000456789:000'\n    T?.eq ( time.stamp        456.789, 123 ), '19700101000000456789:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '19700101000000456789', '000' ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '19700101000000456789', '123' ]\n    debug '^34347^', time.stamp()\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'dense', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.stamp        456.789      ), '19700101@000000.456789:000'\n    T?.eq ( time.stamp        456.789, 123 ), '19700101@000000.456789:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '19700101@000000.456789', '000' ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '19700101@000000.456789', '123' ]\n    debug '^34347^', time.stamp()\n  #.........................................................................................................\n  do =>\n    time  = new WGUY.time.Time { format: 'YYYYMMDDHHmmssµ', }\n    T?.eq ( time.stamp_s 0               ), '0000000000000.000'\n    T?.eq ( time.stamp        456.789      ), '19700101000000456789:000'\n    T?.eq ( time.stamp        456.789, 123 ), '19700101000000456789:123'\n    T?.eq ( time.monostamp_s2 456.789      ), [ '19700101000000456789', '000' ]\n    T?.eq ( time.monostamp_s2 456.789, 123 ), [ '19700101000000456789', '123' ]\n    debug '^34347^', time.stamp()\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@time_default = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  T?.eq ( WGUY.time.stamp 1234567890123 ), '2009-02-13T23:31:30.123000Z:000'\n  #.........................................................................................................\n  done?()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  #.........................................................................................................\n  # stamps = ( WGUY.time.monostamp_s1() for _ in [ 1 .. 10e6 ] )\n  # stamps = ( stamp for stamp in stamps when /[1-9]$/.test stamp )\n  # debug '^2342-4^', stamp for stamp in stamps\n  #.........................................................................................................\n  done?()\n  return null\n\n#===========================================================================================================\n@environment_node = ( T, done ) ->\n  WGUY  = require '../../../apps/webguy'\n  T?.eq ( WGUY.environment ), {\n    browser: false, nodejs: true, webworker: false, jsdom: false, deno: false, name: 'nodejs', }\n  #.........................................................................................................\n  done?()\n  return null\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @time_exports\n  # @time_stamp()\n  # @time_monostamp()\n  # test @time_datatypes\n\n\n\n"
  ]
}