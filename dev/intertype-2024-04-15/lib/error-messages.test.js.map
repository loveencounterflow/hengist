{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/error-messages.test.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,eAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;;EAKA,QAAA,GAA4B,OAAA,CAAQ,MAAR,EAL5B;;;;EAQA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,MAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,QAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EApB5B;;;EAsBA,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,SAAA,GAA4B,OAAA,CAAQ,yBAAR;;EAC5B,CAAA,CAAE,SAAF,CAAA,GAA4B,SAA5B;;EACA,CAAA,CAAE,eAAF,CAAA,GAA4B,OAAA,CAAQ,qCAAR,CAA5B,EAzBA;;;EA6BA,IAAC,CAAE,oCAAF,CAAD,GAA4C,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAC5C,QAAA,WAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA;IAAE,SAAA,GAAY,IAAI,SAAJ,CAAA;IACZ,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,QAHF,EAIE,OAJF,EAKE,OALF,EAME,WANF,CAAA,GAMkB,SAAS,CAAC,MAAV,CAAA,CANlB,EADF;;IASE,OAAA,CAAQ,0BAAR,EAAoC;MAAA,KAAA,EAClC;QAAA,6BAAA,EAA+B,QAAA,CAAE,CAAF,CAAA;iBAAS,MAAO,WAAP,MAAgB;QAAzB;MAA/B;IADkC,CAApC;IAEA,QAAQ,CAAC,wBAAT,CAAkC,OAAlC;AACA;MAAI,QAAQ,CAAC,wBAAT,CAAkC,QAAlC,EAAJ;KAA+C,cAAA;MAAM;MACnD,IAAA,CAAK,KAAK,CAAC,OAAX;MACA,IAAA,CAAK,GAAA,CAAI,KAAK,CAAC,OAAV,CAAL,EADJ;;MAGI,CAAC,CAAC,EAAF,CAAK,uFAAuF,CAAC,IAAxF,CAA6F,KAAK,CAAC,OAAnG,CAAL,EAJ6C;KAZjD;;IAkBE,IAAA,CAAA;AACA,WAAO;EApBmC,EA7B5C;;;EAqDA,IAAO,qBAAP;;IAEE,IAAA,CAAK,IAAC,CAAE,oCAAF,CAAN,EAFF;;AArDA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTYPE                 = require '../../../apps/intertype'\n{ Intertype, }            = INTERTYPE\n{ intersection_of }       = require '../../../apps/intertype/lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTYPE validation error message\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    validate\n    type_of\n    types_of\n    size_of\n    declare\n    all_keys_of } = intertype.export()\n  #.........................................................................................................\n  declare 'intershop_addon_location', tests:\n    \"x must be 'guest' or 'host'\": ( x ) -> x in [ 'guest', 'host', ]\n  validate.intershop_addon_location 'guest'\n  try validate.intershop_addon_location 'guestX' catch error\n    echo error.message\n    echo rpr error.message\n    # echo CND.escape_regex error.message\n    T.ok /not a valid intershop_addon_location \\(violates.*x must be.*guest.*or.*host.*'guestX'/.test error.message\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  test @[ \"INTERTYPE validation error message\" ]\n"
  ]
}