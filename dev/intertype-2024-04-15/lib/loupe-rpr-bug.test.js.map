{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/loupe-rpr-bug.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'INTERTYPE/tests/main'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTYPE                 = require '../../../apps/intertype'\n{ Intertype, }            = INTERTYPE\n{ intersection_of }       = require '../../../apps/intertype/lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTYPE loupe rpr bug\" ] = ( T, done ) ->\n  intertype = new Intertype()\n  { isa\n    validate\n    type_of\n    types_of\n    size_of\n    declare\n    all_keys_of } = intertype.export()\n  #.........................................................................................................\n  probes_and_matchers = [\n    [ ( -> ),                 true, null, ]\n    [ undefined,              null, \"not a valid function: undefined\", ]\n    [ null,                   null, \"not a valid function: null\", ]\n    [ {},                     null, \"not a valid function: {}\", ]\n    [ 1n,                     null, \"not a valid function: 1\", ] ### TAINT should really use `1n` for value representation ###\n    [ { type: 'through', },   null, \"not a valid function: { type: 'through' }\", ]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n  #.........................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      result = validate.function probe\n      resolve result\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"INTERTYPE loupe rpr bug\" ]\n"
  ]
}