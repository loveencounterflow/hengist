{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/demo.coffee"
  ],
  "names": [],
  "mappings": "AAEA;AAAA,MAAA;;EAAA,IAAA,GAAO,QAAA,CAAA,CAAA;AACP,QAAA,WAAA,EAAA,OAAA,EAAA,KAAA,EAAA,CAAA,EAAA,SAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA;IAAE,SAAA,GAAY,IAAI,SAAJ,CAAA;IACZ,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,QAHF,EAIE,OAJF,EAKE,OALF,EAME,WANF,CAAA,GAMkB,SAAS,CAAC,MAAV,CAAA,CANlB;IAOA,IAAA,CAAK,OAAA,CAAQ,UAAR,EAAoB,YAApB,CAAL;IAEA,SAAS,CAAC,OAAV,CAAkB,OAAlB,EACE;MAAA,IAAA,EAAQ,CAAR;MACA,KAAA,EACE;QAAA,gBAAA,EAAoB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;QAAT,CAApB;QACA,YAAA,EAAoB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,OAAD,CAAY,CAAZ,EAAe,GAAf;QAAT,CADpB;QAEA,YAAA,EAAoB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,OAAD,CAAY,CAAZ,EAAe,GAAf;QAAT,CAFpB;QAGA,gBAAA,EAAoB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAY,CAAC,CAAC,CAAd;QAAT,CAHpB;QAIA,gBAAA,EAAoB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAY,CAAC,CAAC,CAAd;QAAT;MAJpB;IAFF,CADF;IAQA,SAAS,CAAC,OAAV,CAAkB,QAAlB,EACE;MAAA,IAAA,EAAQ,CAAR;MACA,KAAA,EACE;QAAA,aAAA,EAAsB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAAY,CAAZ;QAAT,CAAtB;QACA,gBAAA,EAAsB,QAAA,CAAE,CAAF,CAAA;iBAAS,CAAE,IAAC,CAAA,OAAD,CAAS,CAAT,CAAF,CAAA,KAAkB;QAA3B,CADtB;QAEA,mBAAA,EAAsB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAC,CAAE,CAAF,CAAZ;QAAT,CAFtB;QAGA,mBAAA,EAAsB,QAAA,CAAE,CAAF,CAAA;iBAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAC,CAAE,CAAF,CAAZ;QAAT;MAHtB;IAFF,CADF;IAOA,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU,EAAV,CAAL;IACA,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU;MAAE,CAAA,EAAG,EAAL;MAAS,CAAA,EAAG;IAAZ,CAAV,CAAL;IACA,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU;MAAE,CAAA,EAAG,KAAL;MAAe,CAAA,EAAG;IAAlB,CAAV,CAAL;IAEA,KAAA,GAAQ;MACN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAkB,EAAlB;QAAH,CAAF,CAAN;OADM;MAEN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,EAAnB;QAAH,CAAF,CAAN;OAFM;MAGN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,OAAT,CAAmB,EAAnB;QAAH,CAAF,CAAN;OAHM;MAIN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,IAAT,CAAmB,EAAnB;QAAH,CAAF,CAAN;OAJM;MAKN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAkB,IAAlB;QAAH,CAAF,CAAN;OALM;MAMN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,IAAnB;QAAH,CAAF,CAAN;OANM;MAON;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,OAAT,CAAmB,IAAnB;QAAH,CAAF,CAAN;OAPM;MAQN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,IAAT,CAAmB,IAAnB;QAAH,CAAF,CAAN;OARM;MASN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,EAAnB;QAAH,CAAF,CAAN;OATM;MAUN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB;YAAE,CAAA,EAAG,EAAL;YAAS,CAAA,EAAG;UAAZ,CAAnB;QAAH,CAAF,CAAN;OAVM;MAWN;QAAE,CAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB;YAAE,CAAA,EAAG;UAAL,CAAnB;QAAH,CAAF,CAAN;OAXM;MAYN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB;YAAE,CAAA,EAAG,KAAL;YAAe,CAAA,EAAG;UAAlB,CAAnB;QAAH,CAAF,CAAN;OAZM;MAaN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,MAAT,CAAmB,IAAnB;QAAH,CAAF,CAAN;OAbM;MAcN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,MAAT,CAAmB,CAAE,CAAF,CAAnB;QAAH,CAAF,CAAN;OAdM;MAeN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,MAAT,CAAmB,CAAE,CAAF;QAAK,CAAL,CAAnB;QAAH,CAAF,CAAN;OAfM;MAgBN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,CAAE,CAAF;QAAK,CAAL,CAAnB;QAAH,CAAF,CAAN;OAhBM;MAiBN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,GAAnB;QAAH,CAAF,CAAN;OAjBM;MAkBN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,QAAQ,CAAC,KAAT,CAAmB,MAAnB;QAAH,CAAF,CAAN;OAlBM;MAmBN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,GAAG,CAAC,KAAJ,CAAmB,GAAnB;QAAH,CAAF,CAAN;OAnBM;MAoBN;QAAE,EAAF;QAAM,CAAE,QAAA,CAAA,CAAA;iBAAG,GAAG,CAAC,KAAJ,CAAmB,MAAnB;QAAH,CAAF,CAAN;OApBM;;IAsBR,KAAA,uCAAA;MAAI,CAAE,EAAF,EAAM,IAAN;AACF;QACE,MAAA,GAAS,IAAA,CAAA,EADX;OAEA,cAAA;QAAM;QACJ,IAAA,CAAK,EAAL,EAAS,KAAK,CAAC,OAAf,EAAN;;AAEM,iBAHF;;MAIA,IAAA,CAAK,EAAL,EAAS,MAAT;IAPF;IASA,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU,EAAV,CAAL;IACA,IAAA,CAAK,GAAG,CAAC,KAAJ,CAAU,IAAI,MAAJ,CAAW,EAAX,CAAV,CAAL;IACA,IAAA,CAAK,QAAA,CAAS,EAAT,CAAL;IACA,IAAA,CAAK,QAAA,CAAS,IAAI,MAAJ,CAAW,EAAX,CAAT,CAAL;WACA,KAAA,CAAM,QAAN,EAAgB,QAAA,CAAS,EAAT,CAAhB;EAjEK;AAAP",
  "sourcesContent": [
    "\n\ndemo = ->\n  intertype = new Intertype()\n  { isa\n    validate\n    type_of\n    types_of\n    size_of\n    declare\n    all_keys_of } = intertype.export()\n  urge size_of '𣁬𡉜𠑹𠅁', 'codepoints'\n\n  intertype.declare 'point',\n    size:   2\n    tests:\n      '? is an object':   ( x ) -> @isa.object x\n      '?.x is set':       ( x ) -> @has_key    x, 'x'\n      '?.y is set':       ( x ) -> @has_key    x, 'y'\n      '?.x is a float':   ( x ) -> @isa.float  x.x\n      '?.y is a float':   ( x ) -> @isa.float  x.x\n  intertype.declare 'vector',\n    size:   2\n    tests:\n      '? is a list':        ( x ) -> @isa.list   x\n      'size of ? is 2':     ( x ) -> ( @size_of x ) is 2\n      '?[ 0 ] is a float':  ( x ) -> @isa.float x[ 0 ]\n      '?[ 1 ] is a float':  ( x ) -> @isa.float x[ 1 ]\n  info isa.point 42\n  info isa.point { x: 42, y: 108, }\n  info isa.point { x: Infinity, y: 108, }\n\n  tests = [\n    [ 1,  ( -> validate.float    42                         ), ]\n    [ 1,  ( -> validate.float     42                         ), ]\n    [ 2,  ( -> validate.integer   42                         ), ]\n    [ 3,  ( -> validate.even      42                         ), ]\n    [ 4,  ( -> validate.float    42.5                       ), ]\n    [ 4,  ( -> validate.float     42.5                       ), ]\n    [ 5,  ( -> validate.integer   42.5                       ), ]\n    [ 6,  ( -> validate.even      42.5                       ), ]\n    [ 7,  ( -> validate.point     42                         ), ]\n    [ 8,  ( -> validate.point     { x: 42, y: 108, }         ), ]\n    [ 9,  ( -> validate.point     { y: 108, }                ), ]\n    [ 10, ( -> validate.point     { x: Infinity, y: 108, }  ), ]\n    [ 11, ( -> validate.vector    null                      ), ]\n    [ 12, ( -> validate.vector    [ 2, ]                    ), ]\n    [ 13, ( -> validate.vector    [ 2, 3, ]                 ), ]\n    [ 14, ( -> validate.regex     [ 2, 3, ]                 ), ]\n    [ 15, ( -> validate.regex     /x/                       ), ]\n    [ 16, ( -> validate.regex     /^x$/g                    ), ]\n    [ 17, ( -> isa.regex          /x/                       ), ]\n    [ 18, ( -> isa.regex          /^x$/g                    ), ]\n    ]\n  for [ nr, test, ] in tests\n    try\n      result = test()\n    catch error\n      warn nr, error.message\n      # throw error\n      continue\n    info nr, result\n\n  help isa.float 42\n  help isa.float new Number 42\n  help types_of 42\n  help types_of new Number 42\n  debug 'µ12233', types_of []\n\n\n"
  ]
}