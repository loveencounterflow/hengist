{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/test-document.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DATAMILL/TESTS/DOCUMENT'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\ntypes                     = new ( require '../../../apps/intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate              } = types\nguy                       = require '../../../apps/guy'\nH                         = require '../../../lib/helpers'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@doc_object_creation = ( T, done ) ->\n  { DBay }      = require '../../../apps/dbay'\n  { Document }  = require '../../../apps/datamill-v2/lib/document'\n  T?.eq ( type_of Document ), 'class'\n  #.........................................................................................................\n  do ->\n    db  = new DBay()\n    doc = new Document { db, }\n    T?.ok doc.db is db\n    T?.ok doc.cfg.prefix is 'doc_'\n    debug '^5534^', doc\n  #.........................................................................................................\n  do ->\n    doc = new Document { prefix: 'doc_', }\n    T?.eq ( type_of doc.db ), 'dbay'\n    T?.ok doc.cfg.prefix is 'doc_'\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@doc_document_creation = ( T, done ) ->\n  { DBay }      = require '../../../apps/dbay'\n  { Document }  = require '../../../apps/datamill-v2/lib/document'\n  #.........................................................................................................\n  do ->\n    doc = new Document()\n    T?.eq doc.get_doc_file_ids(), []\n    T?.eq doc.get_doc_fads()[ ... 3 ], [\n      { doc_fad_id: 'External_file_abc', doc_fad_name: 'External_file_abc',   comment: 'abstract base class for external files' },\n      { doc_fad_id: 'File_adapter_abc',  doc_fad_name: 'File_adapter_abc',    comment: 'abstract base class for files' },\n      { doc_fad_id: 'xtxt',              doc_fad_name: 'External_text_file',  comment: 'adapter for external text files' } ]\n  #.........................................................................................................\n  done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@doc_add_and_read_file = ( T, done ) ->\n  { DBay }      = require '../../../apps/dbay'\n  { Document }  = require '../../../apps/datamill-v2/lib/document'\n  #.........................................................................................................\n  do ->\n    doc   = new Document()\n    file  = doc.add_file { doc_fad_id: 'xtxt', doc_file_id: 'mytxt', doc_file_path: 'somewhere', }\n    debug '^34-5^', { file, }\n  #.........................................................................................................\n  done?()\n\n\n############################################################################################################\nif require.main is module then do =>\n  # test @doc_object_creation\n  # test @doc_document_creation\n  @doc_add_and_read_file()\n"
  ]
}