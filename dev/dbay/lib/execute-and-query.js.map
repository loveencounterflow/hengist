{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/execute-and-query.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/TESTS/CONSTRUCTION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 1\" ] = ( T, done ) ->\n  ### explicit path, explicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, temporary: true, }\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 2\" ] = ( T, done ) ->\n  ### explicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, temporary: false, }\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 3\" ] = ( T, done ) ->\n  ### explicit path, implicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, }\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 4\" ] = ( T, done ) ->\n  ### implicit path, implicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay()\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 5\" ] = ( T, done ) ->\n  ### implicit path, explicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { temporary: true, }\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 6\" ] = ( T, done ) ->\n  ### implicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { temporary: false, }\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n"
  ]
}