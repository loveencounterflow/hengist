{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/blob-with-text.demo.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,wBAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,WAAR,EAjB5B;;;;;;;EAuBA,GAAA,GAA4B,MAAM,CAAC,IAvBnC;;;EA0BA,IAAC,CAAA,IAAD,GAAQ,QAAA,CAAE,GAAF,CAAA;AACR,QAAA,IAAA,EAAA,GAAA,EAAA,UAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA;IAAE,CAAA,CAAE,IAAF,CAAA,GAAoB,OAAA,CAAQ,CAAC,CAAC,SAAV,CAApB;IACA,CAAA,CAAE,GAAF,CAAA,GAAoB,OAAA,CAAQ,iCAAR,CAApB;IACA,EAAA,GAAoB,IAAI,IAAJ,CAAA;IACpB,IAAA,GAAoB,IAAI,GAAJ,CAAQ,CAAE,EAAF,CAAR;IACpB,UAAA,GAAoB,GAAG,CAAA,wBAAA,CAAA,CAA2B,GAAG,CAAC,SAA/B,CAAA,GAAA;IACvB,IAAA,CAAK,GAAA,CAAI,UAAJ,CAAL;IACA,EAAA,CAAG,UAAH;IACA,MAAA,GAAoB,EAAE,CAAC,cAAH,CAAkB;MAAE,IAAA,EAAM;IAAR,CAAlB;IACpB,MAAM,CAAC,GAAP,CAAW;MAAE,IAAA,EAAM;IAAR,CAAX;IACA,MAAM,CAAC,GAAP,CAAW;MAAE,IAAA,EAAM;IAAR,CAAX;IACA,MAAM,CAAC,GAAP,CAAW;MAAE,IAAA,EAAM;IAAR,CAAX;IACA,MAAM,CAAC,GAAP,CAAW;MAAE,IAAA,EAAM,MAAM,CAAC,IAAP,CAAY,KAAZ;IAAR,CAAX;AAEA;IAAA,KAAA,UAAA,GAAA;;MAAA,IAAA,CAAK,GAAL;IAAA;IACA,IAAA,CAAK,IAAI,CAAC,SAAL,CAAe,EAAA,CAAG,GAAG,CAAA,kBAAA,CAAN,CAAf,CAAL,EAdF;;AAgBE,WAAO;EAjBD,EA1BR;;;EAkDA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;MAChC,IAAC,CAAA,IAAD,CAAM;QAAE,SAAA,EAAW;MAAb,CAAN;aACA,IAAC,CAAA,IAAD,CAAM;QAAE,SAAA,EAAW;MAAb,CAAN;IAFgC,CAAA,IAAlC;;AAlDA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/BLOB-WITH-TEXT.DEMO'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\nH                         = require './helpers'\n# types                     = new ( require 'intertype' ).Intertype\n# { isa\n#   type_of\n#   validate\n#   validate_list_of }      = types.export()\nSQL                       = String.raw\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = ( cfg ) ->\n  { DBay }          = require H.dbay_path\n  { Tbl, }          = require '../../../apps/icql-dba-tabulate'\n  db                = new DBay()\n  dtab              = new Tbl { db, }\n  create_sql        = SQL\"create table bob ( data #{cfg.data_type} );\"\n  urge rpr create_sql\n  db create_sql\n  insert            = db.prepare_insert { into: 'bob', }\n  insert.run { data: 42, }\n  insert.run { data: \"äöü\", }\n  insert.run { data: \"helo world\", }\n  insert.run { data: Buffer.from \"äöü\", }\n  #.........................................................................................................\n  info row for row from db SQL\"select * from bob;\"\n  echo dtab._tabulate db SQL\"select * from bob;\"\n  #.........................................................................................................\n  return null\n\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  @demo { data_type: 'text', }\n  @demo { data_type: 'blob', }\n\n\n\n\n"
  ]
}