{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/execute-and-query.tests.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/TESTS/CONSTRUCTION'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require '../../../apps/guy-test'\nPATH                      = require 'path'\n# FS                        = require 'fs'\nH                         = require './helpers'\ntypes                     = new ( require 'intertype' ).Intertype\n{ isa\n  equals\n  type_of\n  validate\n  validate_list_of }      = types.export()\nSQL                       = String.raw\nguy                       = require '../../../apps/guy'\nMMX                       = require '../../../apps/multimix/lib/cataloguing'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 1\" ] = ( T, done ) ->\n  ### explicit path, explicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, temporary: true, }\n  try\n    debug '^447^', MMX.all_keys_of db\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n\n    DH.unlink_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 2\" ] = ( T, done ) ->\n  ### explicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, temporary: false, }\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 3\" ] = ( T, done ) ->\n  ### explicit path, implicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { path, }\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 4\" ] = ( T, done ) ->\n  ### implicit path, implicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay()\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 5\" ] = ( T, done ) ->\n  ### implicit path, explicitly temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { temporary: true, }\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok not DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, table 6\" ] = ( T, done ) ->\n  ### implicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { temporary: false, }\n  path                = null\n  try\n    T?.ok DH.is_file db._dbs.main.path\n    db.execute SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.destroy()\n    T?.ok DH.is_file db._dbs.main.path\n  finally\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY create DB, insert, query values 1\" ] = ( T, done ) ->\n  ### implicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-create-and-query-a-table.sqlite'\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  db                  = new Dbay { temporary: false, }\n  try\n    db.execute  SQL\"drop table if exists texts;\"\n    db.execute  SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.execute  SQL\"insert into texts values ( 3, 'third' );\"\n    T?.throws /argument extra not allowed/, =>\n      db.execute  SQL\"insert into texts values ( ?, ? );\", [ 4, 'fourth', ]\n    db.query    SQL\"insert into texts values ( 1, 'first' );\"\n    db.query    SQL\"insert into texts values ( ?, ? );\", [ 2, 'second', ]\n    rows = db.query SQL\"select * from texts order by nr;\"\n    T?.eq ( type_of rows ), 'statementiterator'\n    T?.eq [ rows..., ], [ { nr: 1, text: 'first' }, { nr: 2, text: 'second' }, { nr: 3, text: 'third' } ]\n  finally\n    null\n    DH.unlink_file db._dbs.main.path\n  T?.ok not DH.is_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY do 1\" ] = ( T, done ) ->\n  ### implicit path, explicitly not temporary ###\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-do.sqlite'\n  db                  = new Dbay { temporary: false, }\n  try\n    db.do  SQL\"drop table if exists texts;\"\n    db.do  SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db.do  SQL\"insert into texts values ( 3, 'third' );\"\n    # T?.throws /argument extra not allowed/, =>\n    #   db.do  SQL\"insert into texts values ( 4,. ? );\", [ 4, 'fourth', ]\n    db.do    SQL\"insert into texts values ( 1, 'first' );\"\n    db.do    SQL\"insert into texts values ( ?, ? );\", [ 2, 'second', ]\n    rows = db.do SQL\"select * from texts order by nr;\"\n    T?.eq ( type_of rows ), 'statementiterator'\n    T?.eq [ rows..., ], [ { nr: 1, text: 'first' }, { nr: 2, text: 'second' }, { nr: 3, text: 'third' } ]\n  finally\n    DH.unlink_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY db as callable\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  DH                  = require PATH.join H.dbay_path, 'lib/helpers'\n  path                = PATH.resolve Dbay.C.autolocation, 'dbay-do.sqlite'\n  db                  = new Dbay { temporary: false, }\n  try\n    db SQL\"drop table if exists texts;\"\n    db SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db SQL\"insert into texts values ( 3, 'third' );\"\n    # T?.throws /argument extra not allowed/, =>\n    #   db  SQL\"insert into texts values ( 4,. ? );\", [ 4, 'fourth', ]\n    db SQL\"insert into texts values ( 1, 'first' );\"\n    db SQL\"insert into texts values ( ?, ? );\", [ 2, 'second', ]\n    rows = db SQL\"select * from texts order by nr;\"\n    T?.eq ( type_of rows ), 'statementiterator'\n    rows = [ rows..., ]\n    T?.eq rows, [ { nr: 1, text: 'first' }, { nr: 2, text: 'second' }, { nr: 3, text: 'third' } ]\n  finally\n    DH.unlink_file db._dbs.main.path\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY db callable checks types of arguments\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  T?.throws /expected .*, got a float/, -> db 42\n  T?.throws /expected .*, got a undefined/, -> db()\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY db callable accepts function, begins, commits transaction\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  #.........................................................................................................\n  db ->\n    db SQL\"drop table if exists texts;\"\n    db SQL\"create table texts ( nr integer not null primary key, text text );\"\n    db SQL\"insert into texts values ( 3, 'third' );\"\n    db SQL\"insert into texts values ( 1, 'first' );\"\n    db SQL\"insert into texts values ( ?, ? );\", [ 2, 'second', ]\n    #.......................................................................................................\n    T?.throws /cannot start a transaction within a transaction/, ->\n      db ->\n  #.........................................................................................................\n  T?.throws /UNIQUE constraint failed: texts\\.nr/, ->\n    db ->\n      db SQL\"insert into texts values ( 3, 'third' );\"\n  #.........................................................................................................\n  rows = db SQL\"select * from texts order by nr;\"\n  rows = [ rows..., ]\n  T?.eq rows, [ { nr: 1, text: 'first' }, { nr: 2, text: 'second' }, { nr: 3, text: 'third' } ]\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY implicit tx can be configured\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  #.........................................................................................................\n  db ->\n    db SQL\"drop table if exists texts;\"\n    db SQL\"create table texts ( nr integer not null primary key, text text );\"\n  db { mode: 'deferred', }, ->\n    db SQL\"insert into texts values ( 3, 'third' );\"\n  db { mode: 'immediate', }, ->\n    db SQL\"insert into texts values ( 1, 'first' );\"\n  db { mode: 'exclusive', }, ->\n    db SQL\"insert into texts values ( ?, ? );\", [ 2, 'second', ]\n  #.........................................................................................................\n  rows = db SQL\"select * from texts order by nr;\"\n  rows = [ rows..., ]\n  T?.eq rows, [ { nr: 1, text: 'first' }, { nr: 2, text: 'second' }, { nr: 3, text: 'third' } ]\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY can do explicit rollback in tx context handler\" ] = ( T, done ) ->\n  # T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  db SQL\"create table squares ( n int not null primary key, square int not null );\"\n  db ->\n    for n in [ 10 .. 12 ]\n      db SQL\"insert into squares ( n, square ) values ( ?, ? );\", [ n, n ** 2, ]\n    db SQL\"rollback;\"\n  T?.eq ( db.all_rows SQL\"select * from squares order by n;\" ), []\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY tx rollback also reverts create table\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  db.open { schema: 'aux', }\n  #.........................................................................................................\n  try\n    db ->\n      db SQL\"create table squares ( n int not null primary key, square int not null );\"\n      db SQL\"create table aux.squares ( n int not null primary key, square int not null );\"\n      throw new Error 'xxx'\n  catch error\n    throw error unless error.message is 'xxx'\n  T?.eq ( db.all_rows SQL\"select * from main.sqlite_schema;\" ).length, 0\n  T?.eq ( db.all_rows SQL\"select * from aux.sqlite_schema;\"  ).length, 0\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY db.first_row returns `null` for empty result set\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  db.open { schema: 'aux', }\n  db SQL\"create table squares ( n int not null primary key, square int not null );\"\n  #.........................................................................................................\n  db ->\n    for n in [ 10 .. 12 ]\n      db SQL\"insert into squares ( n, square ) values ( ?, ? );\", [ n, n ** 2, ]\n  T?.eq ( db.all_rows  SQL\"select * from squares order by n;\"     ).length, 3\n  T?.eq ( db.first_row SQL\"select * from squares order by n;\"     ), { n: 10, square: 100, }\n  T?.eq ( db.first_row SQL\"select * from squares where n > 100;\"  ), null\n  #.........................................................................................................\n  return done?()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"DBAY db.single_row returns throws error on empty result set\" ] = ( T, done ) ->\n  T?.halt_on_error()\n  { Dbay }            = require H.dbay_path\n  db                  = new Dbay()\n  db.open { schema: 'aux', }\n  db SQL\"create table squares ( n int not null primary key, square int not null );\"\n  #.........................................................................................................\n  db ->\n    for n in [ 10 .. 12 ]\n      db SQL\"insert into squares ( n, square ) values ( ?, ? );\", [ n, n ** 2, ]\n  T?.eq ( db.all_rows  SQL\"select * from squares order by n;\"     ).length, 3\n  T?.eq ( db.single_row SQL\"select * from squares order by n limit 1;\"     ), { n: 10, square: 100, }\n  T?.throws /expected 1 row, got 0/, -> db.single_row SQL\"select * from squares where n > 100;\"\n  T?.throws /expected 1 row, got 3/, -> db.single_row SQL\"select * from squares;\"\n  #.........................................................................................................\n  return done?()\n\n# #-----------------------------------------------------------------------------------------------------------\n# @[ \"DBAY db.first_row() exhausts iterator\" ] = ( T, done ) ->\n#   # T?.halt_on_error()\n#   { Dbay }            = require H.dbay_path\n#   db                  = new Dbay()\n#   db SQL\"create table squares ( n int not null primary key, square int not null );\"\n#   db ->\n#     for n in [ 10 .. 12 ]\n#       db SQL\"insert into squares ( n, square ) values ( ?, ? );\", [ n, n ** 2, ]\n#   sql = SQL\"select * from squares order by n;\"\n#   T?.eq ( db.first_row sql ), { n: 10, square: 100 }\n#   # T?.eq db._statements[ sql ].all(), []\n#   urge [ ( db.query SQL\"select * from squares;\" )..., ]\n#   info db.sqlt1\n#   info [ db._statements[ sql ].iterate()..., ]\n#   info [ db._statements[ sql ].iterate()..., ]\n#   info [ db._statements[ sql ].iterate()..., ]\n#   return done?()\n\n\n\n############################################################################################################\nif require.main is module then do =>\n  test @\n  # test @[ \"DBAY create DB, insert, query values 1\" ]\n  # test @[ \"DBAY db as callable\" ]\n  # @[ \"DBAY create DB, table 2\" ]()\n  # test @[ \"DBAY db callable checks types of arguments\" ]\n  # test @[ \"DBAY tx rollback also reverts create table\" ]\n  # test @[ \"DBAY db.first_row() exhausts iterator\" ]\n  # @[ \"DBAY can do explicit rollback in tx context handler\" ]()\n  # test @[ \"DBAY implicit tx can be configured\" ]\n  # test @[ \"DBAY db.first_row returns `null` for empty result set\" ]\n\n"
  ]
}