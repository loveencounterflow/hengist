{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/draggable.coffee"
  ],
  "names": [],
  "mappings": "AAEA;AAAA,MAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA;;EAAA,OAAA,GAAU,QAAA,CAAA,CAAA,EAAA;;IAGR,IAAC,CAAA,EAAD,GAAM,QAAA,CAAE,OAAF,EAAW,IAAX,EAAiB,OAAjB,CAAA,EAAA;;AAEJ,aAAO,OAAO,CAAC,gBAAR,CAAyB,IAAzB,EAA+B,OAA/B,EAAwC,KAAxC;IAFH,EADR;;IAME,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAA,CAAA;AACtB,UAAA,WAAA;;MACI,IAAC,CAAA,EAAD,CAAI,QAAQ,CAAC,IAAb,EAAmB,UAAnB,EAA+B,WAAA,GAAc,QAAA,CAAE,KAAF,CAAA;QAAa,KAAK,CAAC,cAAN,CAAA;AAAwB,eAAO;MAA5C,CAA7C;MACA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAA,CAAA,EAAA;AACpB,aAAO;IAJW,EANtB;;IAaE,IAAC,CAAA,iBAAD,GAAqB,EAbvB;;WAgBE,IAAC,CAAA,cAAD,GAAkB,QAAA,CAAE,OAAF,CAAA;AACpB,UAAA,EAAA,EAAA,aAAA,EAAA,OAAA;;;MAEI,IAAC,CAAA,gBAAD,CAAA;MACA,IAAC,CAAA,iBAAD;MACA,EAAA,GAAK,IAAC,CAAA;MACN,IAAC,CAAA,GAAD,CAAK,OAAL,EAAc,WAAd,EAA2B,IAA3B,EALJ;;MAOI,IAAC,CAAA,EAAD,CAAI,OAAJ,EAAa,WAAb,EAA0B,aAAA,GAAgB,QAAA,CAAE,KAAF,CAAA;AAC9C,YAAA,KAAA,EAAA,CAAA,EAAA;QAAM,KAAA,GAAQ,CAAC,CAAC,GAAG,CAAC,eAAN,CAAsB,KAAK,CAAC,MAA5B;QACR,CAAA,GAAQ,CAAE,QAAA,CAAS,KAAK,CAAC,IAAf,EAAqB,EAArB,CAAF,CAAA,GAA8B,KAAK,CAAC;QAC5C,CAAA,GAAQ,CAAE,QAAA,CAAS,KAAK,CAAC,GAAf,EAAqB,EAArB,CAAF,CAAA,GAA8B,KAAK,CAAC;eAC5C,KAAK,CAAC,YAAY,CAAC,OAAnB,CAA2B,kBAA3B,EAA+C,IAAI,CAAC,SAAL,CAAe,CAAE,CAAF,EAAK,CAAL,EAAQ,EAAR,CAAf,CAA/C;MAJwC,CAA1C,EAPJ;;MAaI,IAAC,CAAA,EAAD,CAAI,QAAQ,CAAC,IAAb,EAAmB,MAAnB,EAA2B,OAAA,GAAU,QAAA,CAAE,KAAF,CAAA;AACzC,YAAA,IAAA,EAAA,GAAA,EAAA;QAAM,QAAA,GAAY,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,YAAY,CAAC,OAAnB,CAA2B,kBAA3B,CAAX;QACZ,IAAc,EAAA,KAAM,QAAQ,CAAC,EAA7B;AAAA,iBAAA;;QACA,IAAA,GAAY,KAAK,CAAC,OAAN,GAAgB,QAAQ,CAAC,CAAzB,GAA6B;QACzC,GAAA,GAAY,KAAK,CAAC,OAAN,GAAgB,QAAQ,CAAC,CAAzB,GAA6B;QACzC,CAAC,CAAC,GAAG,CAAC,cAAN,CAAqB,OAArB,EAA8B,MAA9B,EAAsC,IAAtC;QACA,CAAC,CAAC,GAAG,CAAC,cAAN,CAAqB,OAArB,EAA8B,KAA9B,EAAsC,GAAtC;QACA,KAAK,CAAC,cAAN,CAAA;AACA,eAAO;MAR4B,CAArC,EAbJ;;AAuBI,aAAO;IAxBS;EAlBV;;EA4CV,OAAO,CAAC,KAAR,CAAc,CAAC,CAAC,GAAhB;;AAIA;EAAA,KAAA,qCAAA;qBAAA;;;IAAA,CAAC,CAAC,GAAG,CAAC,cAAN,CAAqB,OAArB;EAAA;;EAhDA;;;;;;;;;;;;;;;;;;;;;;;AAAA",
  "sourcesContent": [
    "\n\nprovide = ->\n\n  #---------------------------------------------------------------------------------------------------------\n  @on = ( element, name, handler ) ->\n    ### TAINT add options ###\n    return element.addEventListener name, handler, false\n\n  #---------------------------------------------------------------------------------------------------------\n  @_attach_dragover = ->\n    ### TAINT Apparently need for correct dragging behavior, but what if we wanted to handle this event? ###\n    @on document.body, 'dragover', on_dragover = ( event ) -> event.preventDefault(); return false\n    @_attach_dragover = ->\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  @_prv_draggable_id = 0\n\n  #---------------------------------------------------------------------------------------------------------\n  @make_draggable = ( element ) ->\n    ### thx to http://jsfiddle.net/robertc/kKuqH/\n    https://stackoverflow.com/a/6239882/7568091 ###\n    @_attach_dragover()\n    @_prv_draggable_id++\n    id = @_prv_draggable_id\n    @set element, 'draggable', true\n    #.......................................................................................................\n    @on element, 'dragstart', on_drag_start = ( event ) ->\n      style = µ.DOM.get_live_styles event.target\n      x     = ( parseInt style.left, 10 ) - event.clientX\n      y     = ( parseInt style.top,  10 ) - event.clientY\n      event.dataTransfer.setData 'application/json', JSON.stringify { x, y, id, }\n    #.......................................................................................................\n    @on document.body, 'drop', on_drop = ( event ) ->\n      transfer  = JSON.parse event.dataTransfer.getData 'application/json'\n      return unless id is transfer.id\n      left      = event.clientX + transfer.x + 'px'\n      top       = event.clientY + transfer.y + 'px'\n      µ.DOM.set_style_rule element, 'left', left\n      µ.DOM.set_style_rule element, 'top',  top\n      event.preventDefault()\n      return false\n    #.......................................................................................................\n    return null\n\nprovide.apply µ.DOM\n\n# dragme_dom = µ.DOM.select '#dragme'\n# µ.DOM.make_draggable dragme_dom\nµ.DOM.make_draggable element for element in µ.DOM.select_all 'ruler'\n# µ.DOM.make_draggable element for element in µ.DOM.select_all 'p'\n# log '^334^', \"dragme_dom.style.left:\", µ.rpr dragme_dom.style.left\n# log '^334^', \"µ.DOM.get_style_rule dragme_dom, 'left':\", µ.rpr µ.DOM.get_style_rule dragme_dom, 'left'\n# log '^334^', \"µ.DOM.get_style_rule dragme_dom, 'top':\", µ.rpr µ.DOM.get_style_rule dragme_dom, 'top'\n\n# on_dragend = ( event ) ->\n#   { x, y, } = JSON.parse event.dataTransfer.getData 'application/json'\n#   left      = event.clientX + x + 'px'\n#   top       = event.clientY + y + 'px'\n#   log '^3332^', \"dragend\", { left, top, }, event.target\n# on_drag = ( event ) -> log( '^on_drag@6676^', µ.rpr( event.dataTransfer.getData( 'application/json' ) ) )\n# dragme_dom.addEventListener('drag',on_drag,false)\n\n# document.body.addEventListener  'dragend',    on_dragend,     false\n\n\n# document.body.addEventListener( 'drag',      ( ( e ) => log( 'drag'      ) ), false )\n# document.body.addEventListener( 'dragstart', ( ( e ) => log( 'dragstart' ) ), false )\n# document.body.addEventListener( 'dragend',   ( ( e ) => log( 'dragend'   ) ), false )\n# document.body.addEventListener( 'dragexit',  ( ( e ) => log( 'dragexit'  ) ), false )\n# # document.body.addEventListener( 'dragenter', ( ( e ) => log( 'dragenter' ) ), false )\n# # document.body.addEventListener( 'dragleave', ( ( e ) => log( 'dragleave' ) ), false )\n# # document.body.addEventListener( 'dragover',  ( ( e ) => log( 'dragover'  ) ), false )\n# document.body.addEventListener( 'drop',      ( ( e ) => log( 'drop'      ) ), false )\n\n\n\n\n\n"
  ]
}